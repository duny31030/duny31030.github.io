<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Python进阶-Numpy科学计算库(简单入门)</title>
      <link href="/2019/01/04/Python-Numpy/"/>
      <url>/2019/01/04/Python-Numpy/</url>
      <content type="html"><![CDATA[<h1 id="Numpy简介"><a href="#Numpy简介" class="headerlink" title="Numpy简介"></a>Numpy简介</h1><blockquote><p>NumPy(Numerical Python) 是 Python 语言的一个扩展程序库，支持大量的维度数组与矩阵运算，此外也针对数组运算提供大量的数学函数库。  </p><p>NumPy 的前身 Numeric 最早是由 Jim Hugunin 与其它协作者共同开发，2005 年，Travis Oliphant 在 Numeric 中结合了另一个同性质的程序库 Numarray 的特色，并加入了其它扩展而开发了 NumPy。NumPy 为开放源代码并且由许多协作者共同维护开发。</p></blockquote><a id="more"></a><hr><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>因为我使用的是python3，因此需要自己手动来安装Numpy  </p><pre><code>pip3 install numpy</code></pre><p>一般来说这条命令就可以安装成功了<br>如果失败的话可能是因为权限的问题可以尝试在命令前加一个’sudo’,即  </p><pre><code>sudo pip3 install numpy</code></pre><p>然后按照提示输入密码就可以了    </p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/19-1-4/82518098.jpg" alt="success"></p><p>现在numpy就安装成功了<br>首先对将numpy引入  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np   <span class="comment"># np就相当于numpy的别名了</span></span><br></pre></td></tr></table></figure><h1 id="基础的属性"><a href="#基础的属性" class="headerlink" title="基础的属性"></a>基础的属性</h1><p>创建一个矩阵的语法为  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name = np.array([[...]...])</span><br></pre></td></tr></table></figure><p>例如，要创建一个3x1的矩阵，矩阵名为array</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">array = np.array([[<span class="number">123</span>],[<span class="number">456</span>],[<span class="number">789</span>]])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3x3矩阵的建立方法</span></span><br><span class="line">array = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]])</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">打印出来看下</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(array)</span><br><span class="line">[[<span class="number">123</span>]</span><br><span class="line"> [<span class="number">456</span>]</span><br><span class="line"> [<span class="number">789</span>]]</span><br></pre></td></tr></table></figure><p>其他的一些简单的属性  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(array.ndim)   <span class="comment"># 矩阵的维度</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(array.shape)  <span class="comment"># 矩阵的形状</span></span><br><span class="line">(<span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(array.size)   <span class="comment"># 矩阵的大小(元素个数)</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(array.dtype)  <span class="comment"># 矩阵中元素类型</span></span><br><span class="line">int64</span><br></pre></td></tr></table></figure><h1 id="创建array"><a href="#创建array" class="headerlink" title="创建array"></a>创建array</h1><h2 id="在创建的同时声明元素类型"><a href="#在创建的同时声明元素类型" class="headerlink" title="在创建的同时声明元素类型"></a>在创建的同时声明元素类型</h2><p>使用上文中的方法的话，我们并没有办法制定元素的类型，因此我们可以通过在创建时声明元素类型来解决这个问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],dtype = np.int32)</span><br><span class="line">b = np.array([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],dtype = np.float)</span><br></pre></td></tr></table></figure><h2 id="特殊矩阵"><a href="#特殊矩阵" class="headerlink" title="特殊矩阵"></a>特殊矩阵</h2><p>如果我们需要一个元素全为0的矩阵的话，可以使用numpy中的zeros()  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>zero = np.zeros((<span class="number">2</span>,<span class="number">3</span>))   <span class="comment"># 创建一个2x3的零矩阵</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(zero)</span><br><span class="line">[[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line"> [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]]</span><br></pre></td></tr></table></figure><p>同理，我们还可以生成全为1的制定大小的矩阵</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">one = np.ones(<span class="number">3</span>,<span class="number">4</span>)</span><br></pre></td></tr></table></figure><p>empty矩阵  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>empty = np.empty((<span class="number">2</span>,<span class="number">3</span>))   </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(empty)</span><br><span class="line">[[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line"> [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]]</span><br></pre></td></tr></table></figure><div class="note danger"><p>需要注意的是empty所创建出来的矩阵所有元素都不为0，但是非常接近于0.<br>因此在我们需要使用一个矩阵来除以empty矩阵的时候，就不会出错了。反之，除以zero矩阵的话就不对了。  </p></div><h2 id="生成矩阵的其他方法"><a href="#生成矩阵的其他方法" class="headerlink" title="生成矩阵的其他方法"></a>生成矩阵的其他方法</h2><p>arange</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>c = np.arange(<span class="number">10</span>)   <span class="comment"># 生成一个0到9的一维矩阵</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(c)</span><br><span class="line">[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = np.arange(<span class="number">4</span>,<span class="number">12</span>)   <span class="comment"># 生成一个[4,12)的一维矩阵</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(d)</span><br><span class="line">[<span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> <span class="number">11</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>e = np.arange(<span class="number">1</span>,<span class="number">20</span>,<span class="number">3</span>) <span class="comment"># [1,20)  间隔为3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(e)</span><br><span class="line">[<span class="number">1</span> <span class="number">4</span> <span class="number">7</span> <span class="number">10</span> <span class="number">13</span> <span class="number">16</span> <span class="number">19</span>]</span><br></pre></td></tr></table></figure><p>rashap 重新定义矩阵的形状</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = np.arange(<span class="number">8</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(f)</span><br><span class="line">[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = f.reshape(<span class="number">4</span>,<span class="number">2</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(f)</span><br><span class="line">[[<span class="number">0</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span>]</span><br><span class="line"> [<span class="number">6</span> <span class="number">7</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.reshape(<span class="number">2</span>,<span class="number">4</span>)</span><br><span class="line">array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">       [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]])</span><br></pre></td></tr></table></figure><h1 id="矩阵的运算1"><a href="#矩阵的运算1" class="headerlink" title="矩阵的运算1"></a>矩阵的运算1</h1><h2 id="简单的运算"><a href="#简单的运算" class="headerlink" title="简单的运算"></a>简单的运算</h2><div class="note danger"><p>简单的加、减、乘、除、取余、取整、阶乘等运算方式都是按位置1对1进行运算<br>但是要求矩阵的行与列都是相同的<br>要注意矩阵间的运算并不是这样，具体规则在下方</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr1 = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr2 = np.array([[<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>],[<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1)</span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr2)</span><br><span class="line">[[<span class="number">1</span> <span class="number">1</span> <span class="number">2</span>]</span><br><span class="line"> [<span class="number">2</span> <span class="number">3</span> <span class="number">3</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1+arr2)   <span class="comment"># 加法</span></span><br><span class="line">[[<span class="number">2</span> <span class="number">3</span> <span class="number">5</span>]</span><br><span class="line"> [<span class="number">6</span> <span class="number">8</span> <span class="number">9</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1-arr2)   <span class="comment"># 减法</span></span><br><span class="line">[[<span class="number">0</span> <span class="number">1</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">2</span> <span class="number">2</span> <span class="number">3</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1*arr2)   <span class="comment"># 乘法</span></span><br><span class="line">[[ <span class="number">1</span>  <span class="number">2</span>  <span class="number">6</span>]</span><br><span class="line"> [ <span class="number">8</span> <span class="number">15</span> <span class="number">18</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1**arr2)  <span class="comment"># 阶乘</span></span><br><span class="line">[[  <span class="number">1</span>   <span class="number">2</span>   <span class="number">9</span>]</span><br><span class="line"> [ <span class="number">16</span> <span class="number">125</span> <span class="number">216</span>]] </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1/arr2)   <span class="comment"># 除法</span></span><br><span class="line">[[<span class="number">1.</span>         <span class="number">2.</span>         <span class="number">1.5</span>       ]</span><br><span class="line"> [<span class="number">2.</span>         <span class="number">1.66666667</span> <span class="number">2.</span>        ]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1%arr2)   <span class="comment"># 取余</span></span><br><span class="line">[[<span class="number">0</span> <span class="number">0</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">0</span> <span class="number">2</span> <span class="number">0</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1//arr2)  <span class="comment"># 取整</span></span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">2</span> <span class="number">1</span> <span class="number">2</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1+<span class="number">1</span>)      <span class="comment"># 所有元素都加一个数</span></span><br><span class="line">[[<span class="number">2</span> <span class="number">3</span> <span class="number">4</span>]</span><br><span class="line"> [<span class="number">5</span> <span class="number">6</span> <span class="number">7</span>]]</span><br><span class="line"><span class="comment"># 减法、乘法、除法等也一样</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr3 = arr1 &gt; <span class="number">3</span>    <span class="comment"># 比较判断</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr3)</span><br><span class="line">[[<span class="keyword">False</span> <span class="keyword">False</span> <span class="keyword">False</span>]</span><br><span class="line"> [ <span class="keyword">True</span>  <span class="keyword">True</span>  <span class="keyword">True</span>]]</span><br></pre></td></tr></table></figure><h2 id="矩阵的运算"><a href="#矩阵的运算" class="headerlink" title="矩阵的运算"></a>矩阵的运算</h2><div class="note danger"><p>矩阵间的运算规则与线代中的方法相同  </p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr4 = np.ones((<span class="number">3</span>,<span class="number">5</span>))     <span class="comment"># 定义一个元素全为1的矩阵</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.dot(arr1,arr4)         <span class="comment"># 矩阵arr1与arr4相乘</span></span><br><span class="line">array([[ <span class="number">6.</span>,  <span class="number">6.</span>,  <span class="number">6.</span>,  <span class="number">6.</span>,  <span class="number">6.</span>],</span><br><span class="line">       [<span class="number">15.</span>, <span class="number">15.</span>, <span class="number">15.</span>, <span class="number">15.</span>, <span class="number">15.</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr1.dot(arr4)            <span class="comment"># 同上</span></span><br><span class="line">array([[ <span class="number">6.</span>,  <span class="number">6.</span>,  <span class="number">6.</span>,  <span class="number">6.</span>,  <span class="number">6.</span>],</span><br><span class="line">       [<span class="number">15.</span>, <span class="number">15.</span>, <span class="number">15.</span>, <span class="number">15.</span>, <span class="number">15.</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1.T)             <span class="comment"># 转置矩阵</span></span><br><span class="line">[[<span class="number">1</span> <span class="number">4</span>]</span><br><span class="line"> [<span class="number">2</span> <span class="number">5</span>]</span><br><span class="line"> [<span class="number">3</span> <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(np.transpose(arr1)) <span class="comment"># 同上</span></span><br><span class="line">[[<span class="number">1</span> <span class="number">4</span>]</span><br><span class="line"> [<span class="number">2</span> <span class="number">5</span>]</span><br><span class="line"> [<span class="number">3</span> <span class="number">6</span>]]</span><br></pre></td></tr></table></figure><h1 id="随机数的生成以及矩阵的运算2"><a href="#随机数的生成以及矩阵的运算2" class="headerlink" title="随机数的生成以及矩阵的运算2"></a>随机数的生成以及矩阵的运算2</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成3x2的在0-1之间的随机数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sample1 = np.random.random((<span class="number">3</span>,<span class="number">2</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(sample1)</span><br><span class="line">[[<span class="number">0.59323399</span> <span class="number">0.16406566</span>]</span><br><span class="line"> [<span class="number">0.53314295</span> <span class="number">0.42851363</span>]</span><br><span class="line"> [<span class="number">0.06050496</span> <span class="number">0.50214404</span>]]</span><br><span class="line"><span class="comment"># 生成3x2的符合标准正态分布的随机数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sample2 = np.random.normal(size=(<span class="number">3</span>,<span class="number">2</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(sample2)</span><br><span class="line">[[<span class="number">-0.90205973</span> <span class="number">-0.08097247</span>]</span><br><span class="line"> [ <span class="number">1.72986545</span> <span class="number">-0.81119537</span>]</span><br><span class="line"> [<span class="number">-0.40989374</span>  <span class="number">0.27041087</span>]]</span><br><span class="line"><span class="comment"># 生成3x2的0-10之间的整数随机数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sample3 = np.random.randint(<span class="number">0</span>,<span class="number">10</span>,size=(<span class="number">3</span>,<span class="number">2</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(sample3)</span><br><span class="line">[[<span class="number">6</span> <span class="number">2</span>]</span><br><span class="line"> [<span class="number">9</span> <span class="number">6</span>]</span><br><span class="line"> [<span class="number">0</span> <span class="number">3</span>]]</span><br><span class="line"><span class="comment"># 求和</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.sum(sample1)</span><br><span class="line"><span class="number">2.281605244421956</span></span><br><span class="line"><span class="comment"># 求最小值 max同理</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.min(sample1)</span><br><span class="line"><span class="number">0.06050496121103843</span></span><br><span class="line"><span class="comment"># axis = 0 对列求和</span></span><br><span class="line"><span class="comment"># axis = 1 对行求和</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.sum(sample1,axis = <span class="number">0</span>)</span><br><span class="line">array([<span class="number">1.18688191</span>, <span class="number">1.09472334</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.sum(sample1,axis = <span class="number">1</span>)</span><br><span class="line">array([<span class="number">0.75729965</span>, <span class="number">0.96165658</span>, <span class="number">0.562649</span>  ])</span><br><span class="line"><span class="comment"># 求最大值最小值索引</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.argmax(sample1)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.argmin(sample1)</span><br><span class="line"><span class="comment"># 求平均值</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(np.mean(sample1))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(sample1.mean())</span><br><span class="line"><span class="comment"># 求中位数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.median(sample1)</span><br><span class="line"><span class="comment"># 求开方的结果</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.sqrt(sample1)</span><br><span class="line"><span class="comment"># 排序</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sample4 = np.random.randint(<span class="number">0</span>,<span class="number">10</span>,size=(<span class="number">1</span>,<span class="number">10</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(sample4)</span><br><span class="line">[[<span class="number">6</span> <span class="number">6</span> <span class="number">2</span> <span class="number">5</span> <span class="number">6</span> <span class="number">1</span> <span class="number">0</span> <span class="number">2</span> <span class="number">7</span> <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.sort(sample4)</span><br><span class="line">array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">7</span>]])</span><br><span class="line"><span class="comment"># 如果是多维的话，则会对每一行进行排序</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.sort(sample1)</span><br><span class="line">array([[<span class="number">0.16406566</span>, <span class="number">0.59323399</span>],</span><br><span class="line">       [<span class="number">0.42851363</span>, <span class="number">0.53314295</span>],</span><br><span class="line">       [<span class="number">0.06050496</span>, <span class="number">0.50214404</span>]])</span><br><span class="line"><span class="comment"># sample4中的元素小于2的会变成2，大于7的会变成7</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.clip(sample4,<span class="number">3</span>,<span class="number">7</span>)</span><br><span class="line">array([[<span class="number">6</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">6</span>]])</span><br></pre></td></tr></table></figure><h1 id="numpy的索引"><a href="#numpy的索引" class="headerlink" title="numpy的索引"></a>numpy的索引</h1>]]></content>
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Numpy </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>在MAC上编写汇编(一)安装环境</title>
      <link href="/2018/12/15/Nasm-1/"/>
      <url>/2018/12/15/Nasm-1/</url>
      <content type="html"><![CDATA[<p>由于某些历史遗留原因，我到现在还没学汇编，又因为某些个人原因，现在不得不找时间把汇编学完。。。<br>所以还是开一个汇编的坑先，以后填不填的再另说吧︿(￣︶￣)︿</p><a id="more"></a><p>首先要解决的便是环境问题，我用的电脑是15年的rmbp（840）</p><p>首先可以在终端中输入<font color="blue">nasm -v</font>来查询电脑上是否安装了nasm,MAC应该是自带的，可能版本有些老(我好像之前自己升级过nasm)，所以显示的版本比较新，正常情况下nasm的版本应该是比较老的</p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-12-15/49288610.jpg" alt="nasm-v"></p><p>如果版本比较老的话，只需要在终端中输入输入<font color="blue">brew install nasm</font></p><p>如果电脑没有安装<font color="blue">brew</font>的话也没关系,<a href="https://blog.csdn.net/boog14/article/details/80331073" target="_blank" rel="noopener">看这里</a>，也可以用搜索引擎搜索关键字”Mac brew安装”。</p><p>接下来可以写一段汇编代码编译一下看看</p><p>比如：编程第一步，helloworld</p><p>新建一个<font color="blue">hello.asm</font></p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-12-15/74075208.jpg" alt="hello"></p><p>然后对其进行编译</p>]]></content>
      
      <categories>
          
          <category> 汇编语言 </category>
          
          <category> 安装环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编语言 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>热身赛题解</title>
      <link href="/2018/11/25/reshen/"/>
      <url>/2018/11/25/reshen/</url>
      <content type="html"><![CDATA[<p>传送门：<a href="https://qluacm.club/contest.php?cid=1009" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>除了D题都挺友好的吧？</p></blockquote><a id="more"></a><h2 id="A-寻找欧皇"><a href="#A-寻找欧皇" class="headerlink" title="A 寻找欧皇"></a>A 寻找欧皇</h2><blockquote><p>我随机选了一个数7<br>可能大部分同学没见过这种题</p><p>其实可以通过看大家提交的错误次数</p><p>大部分人都是错了6次  你可以猜一下7</p><p>或者你直接尝试1-9这9个数字</p></blockquote><h2 id="B-人类的本质"><a href="#B-人类的本质" class="headerlink" title="B 人类的本质"></a>B 人类的本质</h2><blockquote><p>读入一个字符串 读入一个整数然后一个for循环输出</p><p>注意多组读入</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s) != EOF)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-数的价值"><a href="#C-数的价值" class="headerlink" title="C 数的价值"></a>C 数的价值</h2><blockquote><p>直接算就好了</p><p>注意多组输入 记得初始化</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n) != EOF)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="number">0</span>;   <span class="comment">// 作用看下文</span></span><br><span class="line">    <span class="keyword">while</span>(n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">10</span>)   <span class="comment">// 判断最后一位是不是非0数</span></span><br><span class="line">        &#123;</span><br><span class="line">            ans *= (n%<span class="number">10</span>);</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        n /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>输入：0</p><p>输出：0</p><p>如果不加flag进行判断是否存在非零数的话</p><p>上边这组数据输出的可能是1</p><font color="red">当然 这是针对这种写法来说，这种题解题方法太多了</font></blockquote><h2 id="D-方格填充"><a href="#D-方格填充" class="headerlink" title="D 方格填充"></a>D 方格填充</h2><blockquote><p>我当时写的时候是自己在纸上手推所有情况</p><p>范围才1-7而已</p><p>自己手动推出来</p><p>1x1</p><p>2x1 2x2</p><p>3x1 3x2 3x3</p><p>………..</p><p>7x1 7x2 7x3 7x4 7x5 7x6 7x7</p><p>的所有大小的矩形就出来答案了</p></blockquote><div class="note danger"><p>这里是<font color="green">凉</font>心出题人给的简短题解，详细的版本可能要稍等等</p><p>对于每组m，n。设t＝ (m x n ) / 4取整，若能整除，从t开始枚举，否则，从t＋1开始。容易发现，若mxn是4x2的组合，则t为答案，否则t＋1为答案。<br>n或m是1的时候要特判</p></div><h2 id="E-买铅笔"><a href="#E-买铅笔" class="headerlink" title="E 买铅笔"></a>E 买铅笔</h2><blockquote><p>这个就是比较一下三个数的大小的稍微升级版。。。</p><p><a href="https://blog.csdn.net/u014788620/article/details/83444377" target="_blank" rel="noopener">看这里</a></p></blockquote><h2 id="F-图书管理员"><a href="#F-图书管理员" class="headerlink" title="F 图书管理员"></a>F 图书管理员</h2><blockquote><p>网络上的题解非常多</p><p><a href="https://www.luogu.org/problemnew/solution/P3955" target="_blank" rel="noopener">看这里</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>回文日期</title>
      <link href="/2018/10/26/qoj1272/"/>
      <url>/2018/10/26/qoj1272/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://210.44.144.221/problem.php?id=1272" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>在日常生活中，通过年、月、日这三个要素可以表示出一个唯一确定的日期。 </p><p>牛牛习惯用8位数字表示一个日期，其中，前4位代表年份，接下来2位代表月 份，最后2位代表日期。显然：一个日期只有一种表示方法，而两个不同的日期的表 示方法不会相同。 </p><p>牛牛认为，一个日期是回文的，当且仅当表示这个日期的8位数字是回文的。现 在，牛牛想知道：在他指定的两个日期之间包含这两个日期本身），有多少个真实存 在的日期是回文的。 </p><p>一个8位数字是回文的，当且仅当对于所有的i(1&lt;= i &lt;= 8)从左向右数的第i个 数字和第9-i个数字（即从右向左数的第i个数字）是相同的。 </p><p>例如： </p><p>•对于2016年11月19日，用8位数字20161119表示，它不是回文的。 </p><p>•对于2010年1月2日，用8位数字20100102表示，它是回文的。 </p><p>•对于2010年10月2日，用8位数字20101002表示，它不是回文的。 </p><p>每一年中都有1212个月份： </p><p>其中，1,3,5,7,8,10,12月每个月有31天；4,6,9,11月每个月有30天；而对于2月，闰年时有29天，平年时有28天。 </p><p>一个年份是闰年当且仅当它满足下列两种情况其中的一种： </p><p>1.这个年份是4的整数倍，但不是100的整数倍； </p><p>2.这个年份是400的整数倍。 </p><p>例如： </p><p>•以下几个年份都是闰年：2000,2012,2016。 </p><p>•以下几个年份是平年：1900,2011,2014。 </p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>两行，每行包括一个8位数字。 </p><p>第一行表示牛牛指定的起始日期。 </p><p>第二行表示牛牛指定的终止日期。 </p><p>保证date_i和都是真实存在的日期，且年份部分一定为4位数字，且首位数字不为0。 </p><p>保证date 1 —定不晚于date 2。 </p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>一个整数，表示在date1和date2之间，有多少个日期是回文的。</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>20110101<br>20111231</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>1</p></blockquote><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><blockquote><p>对于%60的数据，满足date1 = date2 </p><font color="red">实测date1 = date2的数据不足60%,也就是说本题的测试数据比正常的多一些，应该是比洛谷的数据要强</font></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>显然，每年至多存在一个回文日期</p><p>因此只需要根据年份算出回文日期对应的月与日判断其是否合法便可以知道今年日否存在回文日期</p><p>具体步骤看代码，附详细注释</p><p>为优化阅读体验，已删除大量无关代码</p><p>难度大约为(区域赛签到题难度x1.0 ~ x1.2)   </p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  1272.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://210.44.144.221/problem.php?id=1272</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/10/26 18时02分08秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存储每个月的天数</span></span><br><span class="line"><span class="comment">// 2月需要进行特判</span></span><br><span class="line"><span class="keyword">int</span> mon[<span class="number">15</span>] = &#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"></span><br><span class="line">ll y,m,d,y2,m2,d2;</span><br><span class="line">ll date1,date2; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断year是否是闰年</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ye</span><span class="params">(<span class="keyword">int</span> year)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((year%<span class="number">4</span> == <span class="number">0</span> &amp;&amp; year%<span class="number">100</span> != <span class="number">0</span>) || (year%<span class="number">400</span> == <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对于一个确定的日期进行检查</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> date)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 取出这个确定的日期的每一位</span></span><br><span class="line">    <span class="comment">// 共取出8位存储到tmp数组中</span></span><br><span class="line">    <span class="keyword">int</span> tmp[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">8</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        tmp[i] = date%<span class="number">10</span>;</span><br><span class="line">        date /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>,j = <span class="number">8</span>;i &lt;= <span class="number">4</span>;i++,j--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 如果有一个位置的数不同则构不成回文</span></span><br><span class="line">        <span class="keyword">if</span>(tmp[i] != tmp[j])</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对于一段日期进行检查</span></span><br><span class="line"><span class="comment">// 传入参数的说明</span></span><br><span class="line"><span class="comment">// year 年份</span></span><br><span class="line"><span class="comment">// m1 d1  开始的月份与日期</span></span><br><span class="line"><span class="comment">// m2 d2  结束的月份与日期</span></span><br><span class="line"><span class="comment">// 返回在year-m1-d1 - year-m2-d2这段日期内有没有回文日期</span></span><br><span class="line"><span class="comment">// 有   返回1</span></span><br><span class="line"><span class="comment">// 没有 返回0</span></span><br><span class="line"><span class="comment">// 原理：根据year来算出回文日期对应的月份t1与日子t2</span></span><br><span class="line"><span class="comment">// 首先判断这个日期是否合法</span></span><br><span class="line"><span class="comment">// 例如：00-00 13-40 这都是不合法的日期</span></span><br><span class="line"><span class="comment">//       01-31 12-21 是合法的日期</span></span><br><span class="line"><span class="comment">// 至于2-29这个日期是否合法需要进行特判看今年是否为闰年</span></span><br><span class="line"><span class="comment">// 然后检查t1-t2 是否在[m1-d1 - m2-d2]这段区间之中</span></span><br><span class="line"><span class="comment">// 如果在则说明存在一个回文日期</span></span><br><span class="line"><span class="comment">// 如果不在则说明不存在回文日期</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">slove1</span><span class="params">(<span class="keyword">int</span> year,<span class="keyword">int</span> m1,<span class="keyword">int</span> m2,<span class="keyword">int</span> d1,<span class="keyword">int</span> d2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = year;</span><br><span class="line">    <span class="comment">// 求出月份</span></span><br><span class="line">    <span class="keyword">int</span> t1 = tmp%<span class="number">10</span>;    tmp /= <span class="number">10</span>;</span><br><span class="line">    t1 = t1*<span class="number">10</span>+tmp%<span class="number">10</span>;  tmp /= <span class="number">10</span>;</span><br><span class="line">    <span class="comment">// 求出具体的日期</span></span><br><span class="line">    <span class="keyword">int</span> t2 = tmp%<span class="number">10</span>;    tmp /= <span class="number">10</span>;</span><br><span class="line">    t2 = t2*<span class="number">10</span>+tmp%<span class="number">10</span>;  tmp /= <span class="number">10</span>;</span><br><span class="line">    <span class="comment">// 判断日期是否合法</span></span><br><span class="line">    <span class="keyword">if</span>(t1 &gt; <span class="number">12</span> || t1 == <span class="number">0</span> || t2 == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 对2月进行特判</span></span><br><span class="line">        <span class="keyword">if</span>(t1 == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 非闰年有28天</span></span><br><span class="line">            <span class="keyword">int</span> tmp = <span class="number">28</span>;</span><br><span class="line">            <span class="comment">// 闰年有29天</span></span><br><span class="line">            <span class="keyword">if</span>(ye(year))</span><br><span class="line">                tmp += <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 判断日期是否超出本月天数上限</span></span><br><span class="line">            <span class="keyword">if</span>(t2 &gt; tmp)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// tmp表示t1月有多少天</span></span><br><span class="line">            <span class="keyword">int</span> tmp = mon[t1];</span><br><span class="line">            <span class="comment">// 如果日期不合法</span></span><br><span class="line">            <span class="keyword">if</span>(t2 &gt; tmp)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 判断是否在规定日期区间之内</span></span><br><span class="line">                <span class="keyword">if</span>(t1 &gt;= m1)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(t1 &gt; m2)    </span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">else</span> </span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">// 判断是否在开始或者结束的那个月内</span></span><br><span class="line">                        <span class="keyword">if</span>(t1 == m1 || t1 == m2)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span>(t1 == m1)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">if</span>(t2 &gt;= d1)    </span><br><span class="line">                                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">else</span>    </span><br><span class="line">                                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span> </span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">if</span>(t2 &lt;= d2)    </span><br><span class="line">                                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">else</span>    </span><br><span class="line">                                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span>    </span><br><span class="line">                            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 枚举年份</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">slove2</span><span class="params">(<span class="keyword">int</span> start,<span class="keyword">int</span> end)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 计算这一整年内是否有回文</span></span><br><span class="line">    <span class="comment">// 因此日期区间可以写[1月1日 - 12月31日]</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = start;i &lt;= end;i++)</span><br><span class="line">        ans += slove1(i,<span class="number">1</span>,<span class="number">12</span>,<span class="number">1</span>,<span class="number">31</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// date1    开始的日期</span></span><br><span class="line">    <span class="comment">// date2    结束的日期</span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; date1 &gt;&gt; date2;</span><br><span class="line">    <span class="keyword">if</span>(date1 == date2)   <span class="comment">// 60%的数据</span></span><br><span class="line">    &#123; </span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; check(date1) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 在date1中提取出年份月份以及日期</span></span><br><span class="line">        y = date1/<span class="number">10000</span>;   </span><br><span class="line">        m = date1%<span class="number">10000</span>/<span class="number">100</span>;</span><br><span class="line">        d = date1%<span class="number">100</span>;</span><br><span class="line">        <span class="comment">// 在date2中提取出年份月份以及日期</span></span><br><span class="line">        y2 = date2/<span class="number">10000</span>;</span><br><span class="line">        m2 = date2%<span class="number">10000</span>/<span class="number">100</span>;</span><br><span class="line">        d2 = date2%<span class="number">100</span>;</span><br><span class="line">        <span class="comment">// 如果是在同一年内</span></span><br><span class="line">        <span class="keyword">if</span>(y == y2)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; slove1(y,m,m2,d,d2) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">// 计算[y+1,y2-1]这个区间内共有多少个回文日期</span></span><br><span class="line">            ans += slove2(y+<span class="number">1</span>,y2<span class="number">-1</span>);</span><br><span class="line">            <span class="comment">// 计算y年[m-d,12,31]这个日期区间内是否存在回文日期</span></span><br><span class="line">            ans += slove1(y,m,<span class="number">12</span>,d,<span class="number">31</span>);</span><br><span class="line">            <span class="comment">// 计算y2年[1-1,m2-d2]这个日期区间内是否存在回文日期</span></span><br><span class="line">            ans += slove1(y2,<span class="number">1</span>,m2,<span class="number">1</span>,d2);</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 思维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
            <tag> NOIP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>  Codeforces Round #518 (Div. 2) C. Colored Rooks</title>
      <link href="/2018/10/25/Codeforces-Round-518-Div-2/"/>
      <url>/2018/10/25/Codeforces-Round-518-Div-2/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://codeforces.com/contest/1068/problem/C" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>Ivan is a novice painter. He has $n$ dyes of different colors. He also knows exactly $m$ pairs of colors which harmonize with each other.</p><p>Ivan also enjoy playing chess. He has $5000$ rooks. He wants to take $k$ rooks, paint each of them in one of $n$ colors and then place this $k$ rooks on a chessboard of size $10^9×10^9$.</p><p>Let’s call the set of rooks on the board connected if from any rook we can get to any other rook in this set moving only through cells with rooks from this set. Assume that rooks can jump over other rooks, in other words a rook can go to any cell which shares vertical and to any cell which shares horizontal.</p><p>Ivan wants his arrangement of rooks to have following properties:</p><ul><li>For any color there is a rook of this color on a board;</li><li>For any color the set of rooks of this color is connected;</li><li>For any two different colors $a b$ union of set of rooks of color $a$ and set of rooks of color $b$ is connected if and only if this two colors harmonize with each other.</li></ul><p>Please help Ivan find such an arrangement.</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The first line of input contains 22 integers $n, m (1≤n≤100, 0≤m≤min(1000,n(n−1)/2)$ — number of colors and number of pairs of colors which harmonize with each other.</p><p>In next $m$ lines pairs of colors which harmonize with each other are listed. Colors are numbered from $1$ to $n$. It is guaranteed that no pair occurs twice in this list.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>Print $n$ blocks, $i-th$ of them describes rooks of $i-th$ color.</p><p>In the first line of block print one number $ai (1≤a_i≤5000)$ — number of rooks of color $i$. In each of next $ai$ lines print two integers $x$ and $y$ $(1≤x,y≤10^9)$ — coordinates of the next rook.</p><p>All rooks must be on different cells.</p><p>Total number of rooks must not exceed $5000$.</p><p>It is guaranteed that the solution exists.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>3 2<br>1 2<br>2 3</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>2<br>3 4<br>1 4<br>4<br>1 2<br>2 2<br>2 4<br>5 4<br>1<br>5 1</p></blockquote><h4 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h4><blockquote><p>3 3<br>1 2<br>2 3<br>3 1</p></blockquote><h4 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h4><blockquote><p>1<br>1 1<br>1<br>1 2<br>1<br>1 3</p></blockquote><h4 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h4><blockquote><p>3 1<br>1 3</p></blockquote><h4 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h4><blockquote><p>1<br>1 1<br>1<br>2 2<br>1<br>3 1</p></blockquote><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><blockquote><p>Rooks arrangements for all three examples (red is color $1$, green is color $2$ and blue is color $3$).</p><p><img src="http://codeforces.com/predownloaded/f7/56/f7560f14e46ae4bbae181068c8ba2543c063d7fb.png" alt="img"></p><p><img src="http://codeforces.com/predownloaded/98/63/9863318e636be9d17692f7e8c42c059e8af35f89.png" alt="img"></p><p><img src="http://codeforces.com/predownloaded/83/47/8347df1095cb6906ff2556e2feac9f953577e98b.png" alt="img"></p><font color="red">If there are many correct answers you can print any. You should not maximize or minimize the number of rooks.</font></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><ul><li><p>首先将点x放到(x,x)上(不需要真放，只需要最后输出即可</p></li><li><p>点x全部放到x轴=x的这一条线上，每一组相连的都往上放一个</p></li></ul><p>（具体看代码吧，在纸上画一下就明白了</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ===============================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  C.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  </span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/10/25 01时20分24秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ===============================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1010</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; p[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,x,y;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        p[x].push_back(i+n+<span class="number">1</span>);</span><br><span class="line">        p[y].push_back(i+n+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>;k &lt;= n;k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = p[k].size();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; tmp+<span class="number">1</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; k &lt;&lt; <span class="string">" "</span> &lt;&lt; k &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= tmp;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; k &lt;&lt; <span class="string">" "</span> &lt;&lt; p[k][i<span class="number">-1</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 思维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
            <tag> Codeforces </tag>
            
            <tag> 构造 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「2016 ACM/ICPC Asia Regional Dalian Online」F.Football Games</title>
      <link href="/2018/10/24/2016-ACM-ICPC-Asia-Regional-Dalian-Online-F/"/>
      <url>/2018/10/24/2016-ACM-ICPC-Asia-Regional-Dalian-Online-F/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5873" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>A mysterious country will hold a football world championships—-Abnormal Cup, attracting football teams and fans from all around the world. This country is so mysterious that none of the information of the games will be open to the public till the end of all the matches. And finally only the score of each team will be announced. </p><p> At the first phase of the championships, teams are divided into M groups using the single round robin rule where one and only one game will be played between each pair of teams within each group. The winner of a game scores 2 points, the loser scores 0, when the game is tied both score 1 point. The schedule of these games are unknown, only the scores of each team in each group are available.</p><p> When those games finished, some insider revealed that there were some false scores in some groups. This has aroused great concern among the pubic, so the the Association of Credit Management (ACM) asks you to judge which groups’ scores must be false.</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>Multiple test cases, process till end of the input.</p><p> For each case, the first line contains a positive integers M, which is the number of groups.<br> The i-th of the next M lines begins with a positive integer Bi representing the number of teams in the i-th group, followed by Bi nonnegative integers representing the score of each team in this group.</p><p><strong>number of test cases &lt;= 10</strong></p><p><strong>M&lt;= 100</strong></p><p><strong>B[i]&lt;= 20000</strong></p><p><strong>score of each team &lt;= 20000</strong></p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test case, output M lines. Output “F” (without quotes) if the scores in the i-th group must be false, output “T” (without quotes) otherwise. See samples for detail.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>2<br>3 0 5 1<br>2 1 1</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>F<br>T</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><ul><li>首先不难想到，n个队伍比赛，任意两支队伍之间有一场,那么就有$n<em>(n-1)/2$场，每场产生2分，所以一共产生$n</em>(n-1)$分。</li><li>我们将所有的队伍按照比分的顺序进行排序，其实这样也是按照他们的胜场次数进行排序了（似乎并没有什么问题，如果写错了请指正</li><li>每场比赛都有2分产生，计算前缀和$sum$一定等于$i*(i-1)$，如果不相等的话，肯定也是存在问题的</li><li>所以</li><li><ol><li>排序</li><li>计算前缀和</li></ol></li><li>这样就可以得出最后的结果了</li></ul></blockquote><div class="note danger"><p>在动手写代码之前一定要好好考虑，拿不准就跟队友交流一下，这道题我错了9次，罚时爆炸(吐血</p></div><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[MAXN];</span><br><span class="line">ll sum = <span class="number">0</span>;</span><br><span class="line">ll t,n,i;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t)!= EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= t;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">            <span class="keyword">for</span>(i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">                sum += a[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(sum != n*(n<span class="number">-1</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"F\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">int</span> fl = <span class="number">0</span>;</span><br><span class="line">                sum = a[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">for</span>(i = <span class="number">2</span>;i &lt;= n;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    sum += a[i];</span><br><span class="line">                    <span class="keyword">if</span>(sum &lt; (i<span class="number">-1</span>)*i)</span><br><span class="line">                    &#123;</span><br><span class="line">                        fl = <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(fl)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"F\n"</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"T\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 思维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
            <tag> ICPC&amp;&amp;CCPC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「The 2016 ACM-ICPC Asia Dalian Regional Contest」C.Game of Taking Stones(博弈论+大数)</title>
      <link href="/2018/10/24/The-2016-ACM-ICPC-Asia-Dalian-Regional-Contest-C/"/>
      <url>/2018/10/24/The-2016-ACM-ICPC-Asia-Dalian-Regional-Contest-C/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5973" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>Two people face two piles of stones and make a game. They take turns to take stones. As game rules, there are two different methods of taking stones: One scheme is that you can take any number of stones in any one pile while the alternative is to take the same amount of stones at the same time in two piles. In the end, the first person taking all the stones is winner.Now,giving the initial number of two stones, can you win this game if you are the first to take stones and both sides have taken the best strategy?</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>Input contains multiple sets of test data.Each test data occupies one line,containing two non-negative integers a andb,representing the number of two stones.a and b are not more than 10^100.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test data,output answer on one line.1 means you are the winner,otherwise output 0.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>2 1<br>8 4<br>4 7</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>0<br>1<br>0</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>太依赖榜单了，过的人数比较少的题目甚至直接没去看，很严重的一个问题</p><p>这道题其实就是一道裸的威佐夫博弈，难点就在于处理大数，由于a,b的值都特别大，所以在用公式计算的时候$\sqrt{5}$的精度必须要保证，否则与如此大的数相乘以后产生的误差是非常可怕的。</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">BigDecimal one = <span class="keyword">new</span> BigDecimal(<span class="number">1</span>);</span><br><span class="line">BigDecimal two = <span class="keyword">new</span> BigDecimal(<span class="number">2</span>);</span><br><span class="line">BigDecimal three = <span class="keyword">new</span> BigDecimal(<span class="number">3</span>);</span><br><span class="line">BigDecimal five = <span class="keyword">new</span> BigDecimal(<span class="number">5</span>);</span><br><span class="line">BigDecimal l = <span class="keyword">new</span> BigDecimal(<span class="number">2</span>);</span><br><span class="line">BigDecimal r = <span class="keyword">new</span> BigDecimal(<span class="number">3</span>);</span><br><span class="line">BigDecimal a = <span class="keyword">new</span> BigDecimal(<span class="number">1</span>);</span><br><span class="line">BigDecimal b = <span class="keyword">new</span> BigDecimal(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 求出足够精度</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">666</span>;i++)&#123;</span><br><span class="line">BigDecimal mid = l.add(r).divide(two);</span><br><span class="line"><span class="keyword">if</span>(mid.multiply(mid).compareTo(five) &lt; <span class="number">0</span>)&#123;</span><br><span class="line">l = mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">r = mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">l = l.add(one).divide(two);</span><br><span class="line"><span class="comment">// System.out.println(l);</span></span><br><span class="line"><span class="keyword">while</span>(in.hasNext())&#123;</span><br><span class="line">a = in.nextBigDecimal();</span><br><span class="line">b = in.nextBigDecimal();</span><br><span class="line"><span class="keyword">if</span>(a.compareTo(b) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">BigDecimal tmp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = tmp;</span><br><span class="line">&#125;</span><br><span class="line">            <span class="comment">// 向下取整</span></span><br><span class="line">a = a.setScale(<span class="number">0</span>, BigDecimal.ROUND_DOWN);</span><br><span class="line">b = b.subtract(a).multiply(l);</span><br><span class="line">b = b.setScale(<span class="number">0</span>, BigDecimal.ROUND_DOWN);</span><br><span class="line"><span class="keyword">if</span>(b.compareTo(a) == <span class="number">0</span>)&#123;</span><br><span class="line">System.out.println(<span class="string">"0"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">System.out.println(<span class="string">"1"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">in.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 博弈论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ICPC&amp;&amp;CCPC </tag>
            
            <tag> 大数 </tag>
            
            <tag> 高精度 </tag>
            
            <tag> 威佐夫博弈 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「The 13th Zhejiang Provincial」 D. The Lucky Week</title>
      <link href="/2018/10/24/The%2013th%20Zhejiang%20Provincial-D/"/>
      <url>/2018/10/24/The%2013th%20Zhejiang%20Provincial-D/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=3939" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>Edward, the headmaster of the Marjar University, is very busy every day and always forgets the date. </p><p>There was one day Edward suddenly found that if Monday was the 1st, 11th or 21st day of that month, he could remember the date clearly in that week. Therefore, he called such week “The Lucky Week”.</p><p>But now Edward only remembers the date of his first Lucky Week because of the age-related memory loss, and he wants to know the date of the N-th Lucky Week. Can you help him? </p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>There are multiple test cases. The first line of input is an integer T indicating the number of test cases. For each test case:</p><p>The only line contains four integers Y, M, D and N (1 ≤ N ≤ 109) indicating the date (Y: year, M: month, D: day) of the Monday of the first Lucky Week and the Edward’s query N.</p><p>The Monday of the first Lucky Week is between 1st Jan, 1753 and 31st Dec, 9999 (inclusive).</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each case, print the date of the Monday of the N-th Lucky Week.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>2<br>2016 4 11 2<br>2016 1 11 10</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>2016 7 11<br>2017 9 11</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><ul><li>蔡勒公式</li><li>日期每400年是一次循环</li></ul></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  zoj3939.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=3939</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/10/23 20时21分02秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> Y,M,D,N,t;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">whatday</span><span class="params">(<span class="keyword">int</span> d,<span class="keyword">int</span> m,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans;</span><br><span class="line">    <span class="keyword">if</span>(m &lt; <span class="number">3</span>)</span><br><span class="line">        m += <span class="number">12</span>,y--;</span><br><span class="line">    ans = (d+<span class="number">2</span>*m+<span class="number">3</span>*(m+<span class="number">1</span>)/<span class="number">5</span>+y+y/<span class="number">4</span>-y/<span class="number">100</span>+y/<span class="number">400</span>)%<span class="number">7</span>;</span><br><span class="line">    <span class="keyword">return</span> ans+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> y,m,d,id;</span><br><span class="line">    node(<span class="keyword">int</span> y = <span class="number">0</span>,<span class="keyword">int</span> m = <span class="number">0</span>,<span class="keyword">int</span> d = <span class="number">0</span>,<span class="keyword">int</span> id = <span class="number">0</span>):y(y),m(m),d(d),id(id)&#123;&#125;</span><br><span class="line">&#125;p[<span class="number">20100</span>];</span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1753</span>;i &lt;= <span class="number">1753</span>+<span class="number">399</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= <span class="number">12</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(whatday(<span class="number">1</span>,j,i) == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                p[tot] = node(i,j,<span class="number">1</span>,tot);</span><br><span class="line">                tot++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(whatday(<span class="number">11</span>,j,i) == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                p[tot] = node(i,j,<span class="number">11</span>,tot);</span><br><span class="line">                tot++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(whatday(<span class="number">21</span>,j,i) == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                p[tot] = node(i,j,<span class="number">21</span>,tot);</span><br><span class="line">                tot++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> </span></span><br><span class="line">    init();</span><br><span class="line">    tot--;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>,&amp;Y,&amp;M,&amp;D,&amp;N);</span><br><span class="line">        N--;</span><br><span class="line">        <span class="comment">// 有多少个400年</span></span><br><span class="line">        <span class="keyword">int</span> ind = N/tot;</span><br><span class="line">        <span class="keyword">int</span> tmp = N%tot;</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(Y &gt;= <span class="number">2153</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            flag++;</span><br><span class="line">            Y -= <span class="number">400</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> yy = <span class="number">0</span>,mm = <span class="number">0</span>,dd = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= tot;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((Y == p[i].y) &amp;&amp; (M == p[i].m) &amp;&amp; (D == p[i].d))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> temp = p[i].id;</span><br><span class="line">                temp += tmp;</span><br><span class="line">                <span class="keyword">while</span>(temp &gt; tot)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag++;</span><br><span class="line">                    temp -= tot;</span><br><span class="line">                &#125;</span><br><span class="line">                yy = p[temp].y;</span><br><span class="line">                mm = p[temp].m;</span><br><span class="line">                dd = p[temp].d;</span><br><span class="line">                yy += flag*<span class="number">400</span>;</span><br><span class="line">                yy += ind*<span class="number">400</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,yy,mm,dd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line"><span class="comment">//     fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
            <tag> ICPC&amp;&amp;CCPC </tag>
            
            <tag> 暴力 </tag>
            
            <tag> 循环节 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「The 15th Zhejiang Provincial」F.Now Loading!!!(数论+二分)</title>
      <link href="/2018/10/23/The%2015th%20Zhejiang%20Provincial-F/"/>
      <url>/2018/10/23/The%2015th%20Zhejiang%20Provincial-F/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=4029" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>DreamGrid has $n$ integers $a_1,a_2,\dots,a_n$. DreamGrid also has $m$ queries, and each time he would like to know the value of</p><script type="math/tex; mode=display">\sum\limits_{1 \le i \le n}\Bigl\lfloor \frac{a_i}{\lceil\log_{p}a_i\rceil}\Bigr\rfloor</script><p>for a given number $p$, where $\lfloor x \rfloor = \max{y \in \mathbb{Z} \mid y \le x}$, $\lceil x \rceil = \min{y \in \mathbb{Z} \mid y \ge x}$.</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>There are multiple test cases. The first line of input is an integer $T$ indicating the number of test cases. For each test case:</p><p>The first line contains two integers $n$ and $m$ ($1 \le n, m \le 5 \times 10^5$) — the number of integers and the number of queries.</p><p>The second line contains $n$ integers $a_1, a_2, \dots, a_n$ ($2 \le a_i \le 10^{9}$).</p><p>The third line contains $m$ integers $p_1, p_2, \dots, p_m$ ($2 \le p_i \le 10^{9}$).</p><p>It is guaranteed that neither the sum of all $n$ nor the sum of all $m$ exceeds $2 \times 10^6$.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test case, output an integer $(\sum\limits_{i=1}^{m} i \cdot z_i) \bmod 10^9$, where $z_i$ is the answer for the $i$-th query.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>2<br>3 2<br>100 1000 10000<br>100 10<br>4 5<br>2323 223 12312 3<br>1232 324 2 3 5</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>11366<br>45619</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>这道题的所有题解我全都看了一遍，基本思路大致搞明白，但是卡在最后的一句代码上</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ans = (ans+tmp*j)%mod;</span><br></pre></td></tr></table></figure><blockquote><p>最后我发现($*j$)是题目要求的，是时候换个<del>眼睛</del>脑子了😤</p><p>刚开始毫无头绪(现在看完别人的题解也是没有头绪···</p><p>现场赛之前再回头看一下这个题目吧，这次不写题解了，我现在也实在写不出了来几句···</p><p>另外，<font color="red">为什么ZOJ爆内存提示段错误？？？？</font></p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  zoj4029.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=4029</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/10/22 21时11分39秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e5</span>+<span class="number">100</span>;</span><br><span class="line">ll a[N];</span><br><span class="line">ll t,n,m,x;</span><br><span class="line">ll sum[N][<span class="number">32</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.对于每一次询问p，枚举分母 i 时，可以找出a中分母等于 i 的那一段</span></span><br><span class="line"><span class="comment">// 预处理前缀和，用于此时直接加。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;n,&amp;m);</span><br><span class="line">        rep(i,<span class="number">1</span>,n)  <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">        <span class="comment">// rep(i,1,m)  scanf("%d",&amp;p[i]);</span></span><br><span class="line">        sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">        <span class="comment">// rep(i,1,n)  printf("%lld ",a[i]);   printf("\n");</span></span><br><span class="line">        <span class="comment">// 打表预处理</span></span><br><span class="line">        <span class="keyword">for</span>(ll k = <span class="number">1</span>;k &lt;= <span class="number">30</span>;k++)</span><br><span class="line">            <span class="keyword">for</span>(ll i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">                sum[i][k] = sum[i<span class="number">-1</span>][k]+a[i]/k;</span><br><span class="line">        </span><br><span class="line">        ll ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll j = <span class="number">1</span>;j &lt;= m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;x);</span><br><span class="line">            ll pos;</span><br><span class="line">            ll up = x;</span><br><span class="line">            ll k = <span class="number">1</span>;</span><br><span class="line">            ll tmp = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(ll i = <span class="number">1</span>;i &lt;= n;i = pos+<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// printf("up = %lld\n",up);</span></span><br><span class="line">                pos = i<span class="number">-1</span>;</span><br><span class="line">                ll l = i,r = n;</span><br><span class="line">                <span class="keyword">while</span>(l &lt;= r)</span><br><span class="line">                &#123;</span><br><span class="line">                    ll mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">if</span>(a[mid] &lt;= up)</span><br><span class="line">                    &#123;</span><br><span class="line">                        pos = mid;</span><br><span class="line">                        l = mid+<span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> </span><br><span class="line">                        r = mid<span class="number">-1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                tmp = (tmp+sum[pos][k]-sum[i<span class="number">-1</span>][k]+mod)%mod;</span><br><span class="line">                k++;</span><br><span class="line">                up *= x;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//// printf("tmp = %lld j = %lld tmp*j = %lld ans = %lld\n",tmp,j,tmp*j,ans+tmp*j);</span></span><br><span class="line">            ans = (ans+tmp*j)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ICPC&amp;&amp;CCPC </tag>
            
            <tag> 二分 </tag>
            
            <tag> 数论 </tag>
            
            <tag> 预处理 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>牛客暑期多校第二场 J.farm</title>
      <link href="/2018/10/21/Nowcoder-Summer-J-farm/"/>
      <url>/2018/10/21/Nowcoder-Summer-J-farm/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="https://www.nowcoder.com/acm/contest/140/J" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>White Rabbit has a rectangular farmland of n*m. In each of the grid there is a kind of plant. The plant in the j-th column of the i-th row belongs the a[i][j]-th type.<br>White Cloud wants to help White Rabbit fertilize plants, but the i-th plant can only adapt to the i-th fertilizer. If the j-th fertilizer is applied to the i-th plant (i!=j), the plant will immediately die.<br>Now White Cloud plans to apply fertilizers T times. In the i-th plan, White Cloud will use k[i]-th fertilizer to fertilize all the plants in a rectangle (x1[i]…x2[i])(y1[i]…y2[i]).<br>White rabbits wants to know how many plants would eventually die if they were to be fertilized according to the expected schedule of White Cloud.</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The first line of input contains 3 integers n,m,T(n<em>m&lt;=1000000,T&lt;=1000000)<br>For the next n lines, each line contains m integers in range[1,n</em>m] denoting the type of plant in each grid.<br>For the next T lines, the i-th line contains 5 integers x1,y1,x2,y2,k(1&lt;=x1&lt;=x2&lt;=n,1&lt;=y1&lt;=y2&lt;=m,1&lt;=k&lt;=n*m)</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>Print an integer, denoting the number of plants which would die.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>2 2 2<br>1 2<br>2 3<br>1 1 2 2 2<br>2 1 2 1 1</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>3</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p><a href="https://blog.csdn.net/weixin_41156591/article/details/81150890" target="_blank" rel="noopener">牛客网暑期ACM多校训练营(第二场)J.farm (随机数+二维树状数组)</a></p><p>之前一直想补这个题目，但是当时没看明白题解（主要是没明白大家说的随机是什么意思</p><p>今天回头补题的时候看到了这个博客，感觉写的很好，豁然开朗</p><p>PS:</p><font color="red">注意在牛客提交的时候选择C++11</font><p>我的<a href="http://duny31030.top/2018/09/04/Binary-Indexed-Tree/" target="_blank" rel="noopener">二维树状数组模板</a></p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ===============================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  J.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  https://www.nowcoder.com/acm/contest/140/J</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/10/21 19时50分25秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> t,n,m,x,x11,y11,x22,y22;</span><br><span class="line"><span class="built_in">vector</span>&lt;ll&gt; tree[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;ll&gt; mp[N];</span><br><span class="line">ll has[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    srand(time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; N<span class="number">-5</span>;i++)</span><br><span class="line">        has[i] = (ll)rand()*<span class="number">1e6</span>+rand()*rand();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,ll z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> memy_y = y;</span><br><span class="line">    <span class="keyword">while</span>(x &lt;= n)</span><br><span class="line">    &#123;</span><br><span class="line">        y = memy_y;</span><br><span class="line">        <span class="keyword">while</span>(y &lt;= m)</span><br><span class="line">            tree[x][y] += z,y += y&amp;(-y);</span><br><span class="line">        x += x&amp;(-x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">range_add</span><span class="params">(<span class="keyword">int</span> xa,<span class="keyword">int</span> ya,<span class="keyword">int</span> xb,<span class="keyword">int</span> yb,ll z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    add(xa,ya,z);</span><br><span class="line">    add(xa,yb+<span class="number">1</span>,-z);</span><br><span class="line">    add(xb+<span class="number">1</span>,ya,-z);</span><br><span class="line">    add(xb+<span class="number">1</span>,yb+<span class="number">1</span>,z);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">ask</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>,memy_y = y;</span><br><span class="line">    <span class="keyword">while</span>(x)</span><br><span class="line">    &#123;</span><br><span class="line">        y = memy_y;</span><br><span class="line">        <span class="keyword">while</span>(y)</span><br><span class="line">            res += tree[x][y],y -= y&amp;(-y);</span><br><span class="line">        x -= x&amp;(-x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;n,&amp;m,&amp;t);</span><br><span class="line">    init();</span><br><span class="line">    rep(i,<span class="number">1</span>,n)</span><br><span class="line">    &#123;</span><br><span class="line">        mp[i].push_back(<span class="number">0</span>);</span><br><span class="line">        tree[i].push_back(<span class="number">0</span>);</span><br><span class="line">        rep(j,<span class="number">1</span>,m)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">            mp[i].push_back(has[x]);</span><br><span class="line">            tree[i].push_back(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">0</span>,xx;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d %lld"</span>,&amp;x11,&amp;y11,&amp;x22,&amp;y22,&amp;xx);</span><br><span class="line">        range_add(x11,y11,x22,y22,has[xx]);</span><br><span class="line">    &#125;</span><br><span class="line">    rep(i,<span class="number">1</span>,n)</span><br><span class="line">        rep(j,<span class="number">1</span>,m)</span><br><span class="line">            <span class="keyword">if</span>(ask(i,j) % mp[i][j])</span><br><span class="line">                ans++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 二维树状数组 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
            <tag> 树状数组 </tag>
            
            <tag> 随机 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「The 14th Zhejiang Provincial」 C.What Kind of Friends Are You?</title>
      <link href="/2018/10/21/The-14th-Zhejiang-Provincial-C/"/>
      <url>/2018/10/21/The-14th-Zhejiang-Provincial-C/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=3960" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>Japari Park is a large zoo home to extant species, endangered species, extinct species, cryptids and some legendary creatures. Due to a mysterious substance known as <em>Sandstar</em>, all the animals have become anthropomorphized into girls known as <em>Friends</em>.</p><p>Kaban is a young girl who finds herself in Japari Park with no memory of who she was or where she came from. Shy yet resourceful, she travels through Japari Park along with Serval to find out her identity while encountering more <em>Friends</em> along the way, and eventually discovers that she is a human.</p><p>However, Kaban soon finds that it’s also important to identify other <em>Friends</em>. Her friend, Serval, enlightens Kaban that she can use some questions whose expected answers are either “yes” or “no” to identitfy a kind of <em>Friends</em>.</p><p>To be more specific, there are n <em>Friends</em> need to be identified. Kaban will ask each of them q same questions and collect their answers. For each question, she also gets a full list of animals’ names that will give a “yes” answer to that question (and those animals who are not in the list will give a “no” answer to that question), so it’s possible to determine the name of a <em>Friends</em> by combining the answers and the lists together.</p><p>But the work is too heavy for Kaban. Can you help her to finish it?</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>There are multiple test cases. The first line of the input is an integer T (1 ≤ T ≤ 100), indicating the number of test cases. Then T test cases follow.</p><p>The first line of each test case contains two integers n (1 ≤ n ≤ 100) and q (1 ≤ q ≤ 21), indicating the number of <em>Friends</em> need to be identified and the number of questions.</p><p>The next line contains an integer c (1 ≤ c ≤ 200) followed by c strings p1, p2, … , pc (1 ≤ |pi| ≤ 20), indicating all known names of <em>Friends</em>.</p><p>For the next q lines, the i-th line contains an integer mi (0 ≤ mi ≤ c) followed by mi strings si, 1, si, 2, … , si, mi (1 ≤ |si, j| ≤ 20), indicating the number of <em>Friends</em> and their names, who will give a “yes” answer to the i-th question. It’s guaranteed that all the names appear in the known names of <em>Friends</em>.</p><p>For the following n lines, the i-th line contains q integers ai, 1, ai, 2, … , ai, q (0 ≤ ai, j ≤ 1), indicating the answer (0 means “no”, and 1 means “yes”) to the j-th question given by the i-th <em>Friends</em> need to be identified.</p><p>It’s guaranteed that all the names in the input consist of only uppercase and lowercase English letters.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test case output n lines. If Kaban can determine the name of the i-th <em>Friends</em> need to be identified, print the name on the i-th line. Otherwise, print “Let’s go to the library!!” (without quotes) on the i-th line instead.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>2<br>3 4<br>5 Serval Raccoon Fennec Alpaca Moose<br>4 Serval Raccoon Alpaca Moose<br>1 Serval<br>1 Fennec<br>1 Serval<br>1 1 0 1<br>0 0 0 0<br>1 0 0 0<br>5 5<br>11 A B C D E F G H I J K<br>3 A B K<br>4 A B D E<br>5 A B K D E<br>10 A B K D E F G H I J<br>4 B D E K<br>0 0 1 1 1<br>1 0 1 0 1<br>1 1 1 1 1<br>0 0 1 0 1<br>1 0 1 1 1</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>Serval<br>Let’s go to the library!!<br>Let’s go to the library!!<br>Let’s go to the library!!<br>Let’s go to the library!!<br>B<br>Let’s go to the library!!<br>K</p></blockquote><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><blockquote><p>The explanation for the first sample test case is given as follows:</p><p>As Serval is the only known animal who gives a “yes” answer to the 1st, 2nd and 4th question, and gives a “no” answer to the 3rd question, we output “Serval” (without quotes) on the first line.</p><p>As no animal is known to give a “no” answer to all the questions, we output “Let’s go to the library!!” (without quotes) on the second line.</p><p>Both Alpaca and Moose give a “yes” answer to the 1st question, and a “no” answer to the 2nd, 3rd and 4th question. So we can’t determine the name of the third Friends need to be identified, and output “Let’s go to the library!!” (without quotes) on the third line.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>题面真是又臭又长，直接读样例看明白的题意</p><p>队友一开始思路错了告诉我搞个矩阵，我又错误的理解了他的意思，想了想觉得可行，于是就调了好久的BUG以后得到了正确的答案2333333333</p><p>赛后在网络上搜了一些其他人的题解，简单打开了两个，有用二进制的，还有用哈希的，也有用状态压缩的，似乎我这种解法是独一家，23333333</p><p>提交的时候忘记删除freopen()导致得到了两发re，删除后得到了一个1000ms的AC，差点没笑死我。但是我刚才又试着提交了一下变成了350msAC了，看来zoj的评测机也有点迷。。。</p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-10-21/57008020.jpg" alt="1000msAC"></p><p>我的解法其实不难理解，以第二个样例为例，我们首先用map来建立一个映射，map[string] = i;表示string这个单词是第i次出现的</p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-10-21/83911264.jpg" alt="string"></p><p>然后在输入的时候进行处理，处理完以后应该是一个qxc的矩阵</p><p>1表示在这个人这里有这个string，0表示没有</p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-10-21/45513052.jpg" alt="矩阵"></p><p>接下来我们便可以用上边这个qxc的矩阵的每一<font color="red">列</font>来与下图中的每一<font color="red">行</font>进行对比</p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-10-21/69705968.jpg" alt="n"></p><p>如果我们可以找到唯一匹配的，比如下图中的最后一行（1，0，1，1，1）便与矩阵第k列是唯一匹配的，这时我们可以输出k，其他情况输出”Let’s go to the library!!”。</p><p>输出的时候我们可以用string[]将一开始所有string都存储起来，然后匹配的时候记录一下下标，便可以很方便的直接输出string[下标];</p></blockquote><div class="note danger"><p>时间原因写的比较乱，不过大体思路是这样的，具体细节看代码吧</p><p>在删除我一开始写的乱七八糟的调试以后代码倒是并不算很长</p></div><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> s,s1[<span class="number">310</span>];</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>,<span class="keyword">int</span>&gt; m;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">310</span>][<span class="number">310</span>];</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">310</span>][<span class="number">310</span>];</span><br><span class="line"><span class="keyword">int</span> t,n,q,c,te;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调试时用的函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"----------------------\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= q;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= c;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"----------------------\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span> a);</span><br><span class="line"><span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span> b);</span><br><span class="line">        m.clear();</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; q;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; c;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= c;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; s1[i];</span><br><span class="line">            m[s1[i]] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= q;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; te;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= te;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">                a[i][m[s]] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= q;j++)</span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; b[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> p = <span class="number">0</span>,tim = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// tim变量用来记录匹配的次数，只有唯一匹配才是有效的</span></span><br><span class="line">tim = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= c;j++)</span><br><span class="line">            &#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>;k &lt;= q;k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(a[k][j] != b[i][k])</span><br><span class="line">                        flag = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(flag == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// 变量p来记录下标</span></span><br><span class="line">                    p = j;</span><br><span class="line">tim++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(p != <span class="number">0</span> &amp;&amp; tim == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; s1[p] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"Let's go to the library!!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            p = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 暴力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
            <tag> ICPC&amp;&amp;CCPC </tag>
            
            <tag> 暴力 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「ACM Dalian Online 2016」H.Function（二分+RMQ）</title>
      <link href="/2018/10/09/ACM-Dalian-Online-2016/"/>
      <url>/2018/10/09/ACM-Dalian-Online-2016/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5875" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>The shorter, the simpler. With this problem, you should be convinced of this truth.</p><p> You are given an array A of N postive integers, and M queries in the form (l,r). A function F(l,r) (1≤l≤r≤N) is defined as:</p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-10-9/83185798.jpg" alt="g"></p><p>You job is to calculate F(l,r), for each query (l,r).</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>There are multiple test cases.</p><p> The first line of input contains a integer $T$, indicating number of test cases, and $T$ test cases follow. </p><p> For each test case, the first line contains an integer $N(1≤N≤100000)$.<br> The second line contains $N$ space-separated positive integers: $A_1,…,A_N$ $(0≤A_i≤10^9)$.<br> The third line contains an integer $M$ denoting the number of queries.<br> The following $M$ lines each contain two integers $l,r (1≤l≤r≤N)$, representing a query.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each query$(l,r)$, output $F(l,r)$ on one line.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>1<br>3<br>2 3 3<br>1<br>1 3</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>2</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>一个数比它大的数没有意义，比如10%100、20%30···</p><p>每次二分的找到右侧第一个比他小的就好了</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  hdu5875.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.hdu.edu.cn/showproblem.php?pid=5875</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/10/09 10时30分42秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100050</span>;</span><br><span class="line"><span class="keyword">int</span> n,q,t,a,x,y;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="keyword">int</span> dp_min[N][<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RMQ_init</span><span class="params">(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; A)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        dp_min[i][<span class="number">0</span>] = A[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;(<span class="number">1</span> &lt;&lt; j) &lt;= n;j++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i + (<span class="number">1</span> &lt;&lt; j) - <span class="number">1</span> &lt; n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            dp_min[i][j] = min(dp_min[i][j<span class="number">-1</span>],dp_min[i+(<span class="number">1</span> &lt;&lt; (j<span class="number">-1</span>))][j<span class="number">-1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">RMQ_min</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>((<span class="number">1</span> &lt;&lt; (k+<span class="number">1</span>)) &lt;= (R-L+<span class="number">1</span>))   <span class="comment">// 如果2^(k+1) &lt;= R-L+1,那么k还可以加1</span></span><br><span class="line">    &#123;    </span><br><span class="line">        k++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; "min = " &lt;&lt; min(dp_min[L][k],dp_min[R-(1 &lt;&lt; k)+1][k]) &lt;&lt; endl;</span></span><br><span class="line">    <span class="keyword">return</span> min(dp_min[L][k],dp_min[R-(<span class="number">1</span> &lt;&lt; k)+<span class="number">1</span>][k]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        Q.clear();</span><br><span class="line">        clr(dp_min,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        rep(i,<span class="number">1</span>,n)  &#123;   <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a); Q.push_back(a); &#125;</span><br><span class="line">        RMQ_init(Q);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);</span><br><span class="line">        rep(i,<span class="number">1</span>,q)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;x,&amp;y);</span><br><span class="line">            x--,y--;</span><br><span class="line">            <span class="keyword">int</span> tmp = Q[x];</span><br><span class="line">            <span class="keyword">if</span>(x == y)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Q[x]);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            x++;</span><br><span class="line">            <span class="keyword">while</span>(x &lt;= y)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> L= x,R = y;</span><br><span class="line">                <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span>(L &lt; R)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> mid = (L+R) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">if</span>(RMQ_min(L,mid) &lt;= tmp)</span><br><span class="line">                        R = mid;</span><br><span class="line">                    <span class="keyword">else</span> </span><br><span class="line">                        <span class="keyword">if</span>(RMQ_min(mid+<span class="number">1</span>,R) &lt;= tmp)</span><br><span class="line">                            L = mid+<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">else</span> </span><br><span class="line">                        &#123;</span><br><span class="line">                            flag = <span class="number">1</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(flag)    <span class="keyword">break</span>;</span><br><span class="line">                tmp %= Q[L];</span><br><span class="line">                x = L+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,tmp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> RMQ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ICPC&amp;&amp;CCPC </tag>
            
            <tag> RMQ </tag>
            
            <tag> 二分 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「ACM Dalian Onsite 2016」A.Wrestling Match(判断二分图)</title>
      <link href="/2018/10/07/ACM-Dalian-Onsite-2016-A/"/>
      <url>/2018/10/07/ACM-Dalian-Onsite-2016-A/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5971" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>Nowadays, at least one wrestling match is held every year in our country. There are a lot of people in the game is “good player”, the rest is “bad player”. Now, Xiao Ming is referee of the wrestling match and he has a list of the matches in his hand. At the same time, he knows some people are good players,some are bad players. He believes that every game is a battle between the good and the bad player. Now he wants to know whether all the people can be divided into “good player” and “bad player”.</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>Input contains multiple sets of data.For each set of data,there are four numbers in the first line:N (1 ≤ N≤ 1000)、M(1 ≤M ≤ 10000)、X,Y(X+Y≤N ),in order to show the number of players(numbered 1toN ),the number of matches,the number of known “good players” and the number of known “bad players”.In the next M lines,Each line has two numbersa, b(a≠b) ,said there is a game between a and b .The next line has X different numbers.Each number is known as a “good player” number.The last line contains Y different numbers.Each number represents a known “bad player” number.Data guarantees there will not be a player number is a good player and also a bad player.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>If all the people can be divided into “good players” and “bad players”, output “YES”, otherwise output “NO”.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>5 4 0 0<br>1 3<br>1 4<br>3 5<br>4 5<br>5 4 1 0<br>1 3<br>1 4<br>3 5<br>4 5<br>2</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>NO<br>YES</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>可以抽象为两个对立的阵营（good and bed）</p><p>抽象为二分图，用染色法判断，如果不是二分图则一定有矛盾的地方，输出‘NO’</p><p>再判断一下已确定的X与Y个队伍</p><p>具体见代码</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,x,y,u,v;</span><br><span class="line"><span class="keyword">int</span> color[N];</span><br><span class="line"><span class="keyword">int</span> e[N][N];</span><br><span class="line"><span class="keyword">int</span> a[N],b[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; m1,m2;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.push(s);</span><br><span class="line">    color[s] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> from = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(e[from][i] &amp;&amp; color[i] == <span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                q.push(i);</span><br><span class="line">                color[i] = !color[from];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(e[from][i] &amp;&amp; color[from] == color[i])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>,&amp;n,&amp;m,&amp;x,&amp;y) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> bo = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">memset</span>(e,<span class="number">0</span>,<span class="keyword">sizeof</span> e);</span><br><span class="line">        <span class="built_in">memset</span>(color,<span class="number">-1</span>,<span class="keyword">sizeof</span> color);</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span> vis);</span><br><span class="line">        m1.clear();</span><br><span class="line">        m2.clear();</span><br><span class="line">        <span class="keyword">int</span> st = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;u,&amp;v);</span><br><span class="line">            vis[u] = <span class="number">1</span>; vis[v] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(u &gt; v)   swap(u,v);</span><br><span class="line">            <span class="keyword">if</span>(u &lt; st)  st = u;</span><br><span class="line">            e[u][v] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= x;i++)&#123;   <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]); m1[a[i]] = <span class="number">1</span>;&#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= y;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b[i]);</span><br><span class="line">            <span class="keyword">if</span>(m1[b[i]])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">                bo = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                m2[b[i]] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;bo &amp;&amp; i &lt;= n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(m1[i] == <span class="number">0</span> &amp;&amp; m2[i] == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">                    bo = <span class="number">0</span>;</span><br><span class="line">                    <span class="comment">// return 0;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(bo &amp;&amp; check(st,n))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(x)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> flag = color[a[<span class="number">1</span>]];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;bo &amp;&amp; i &lt;= x;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(color[a[i]] != flag)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">                        bo = <span class="number">0</span>;</span><br><span class="line">                        <span class="comment">// return 0;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;bo &amp;&amp; i &lt;= y;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(color[b[i]] == flag)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">                        bo = <span class="number">0</span>;</span><br><span class="line">                        <span class="comment">// return 0;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(y)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> flag = color[b[<span class="number">1</span>]];</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;bo &amp;&amp; i &lt;= y;i++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(color[b[i]] != flag)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">                            bo = <span class="number">0</span>;</span><br><span class="line">                            <span class="comment">// return 0;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(bo)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(bo)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
          <category> 二分图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ICPC&amp;&amp;CCPC </tag>
            
            <tag> 二分图 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codeforces Round #514 (Div. 2) B.Forgery</title>
      <link href="/2018/10/06/Codeforces-Round-514-Div-2-B-Forgery/"/>
      <url>/2018/10/06/Codeforces-Round-514-Div-2-B-Forgery/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://codeforces.com/contest/1059/problem/B" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>Student Andrey has been skipping physical education lessons for the whole term, and now he must somehow get a passing grade on this subject. Obviously, it is impossible to do this by legal means, but Andrey doesn’t give up. Having obtained an empty certificate from a local hospital, he is going to use his knowledge of local doctor’s handwriting to make a counterfeit certificate of illness. However, after writing most of the certificate, Andrey suddenly discovered that doctor’s signature is impossible to forge. Or is it?</p><a id="more"></a><p>For simplicity, the signature is represented as an n×mn×m grid, where every cell is either filled with ink or empty. Andrey’s pen can fill a $3×3$ square without its central cell if it is completely contained inside the grid, as shown below.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xxx</span><br><span class="line">x.x</span><br><span class="line">xxx</span><br></pre></td></tr></table></figure><blockquote><p>Determine whether is it possible to forge the signature on an empty $n×m$ grid.</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The first line of input contains two integers $n$ and $m$ ($3≤n,m≤1000$).</p><p>Then nn lines follow, each contains mm characters. Each of the characters is either ‘.’, representing an empty cell, or ‘#’, representing an ink filled cell.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>If Andrey can forge the signature, output “YES”. Otherwise output “NO”.</p><p>You can print each letter in any case (upper or lower).</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 3</span><br><span class="line">###</span><br><span class="line">#.#</span><br><span class="line">###</span><br></pre></td></tr></table></figure><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>YES</p></blockquote><h4 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 3</span><br><span class="line">###</span><br><span class="line">###</span><br><span class="line">###</span><br></pre></td></tr></table></figure><h4 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h4><blockquote><p>NO</p></blockquote><h4 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4 3</span><br><span class="line">###</span><br><span class="line">###</span><br><span class="line">###</span><br><span class="line">###</span><br></pre></td></tr></table></figure><h4 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h4><blockquote><p>YES</p></blockquote><h4 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5 7</span><br><span class="line">.......</span><br><span class="line">.#####.</span><br><span class="line">.#.#.#.</span><br><span class="line">.#####.</span><br><span class="line">.......</span><br></pre></td></tr></table></figure><h4 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h4><blockquote><p>YES</p></blockquote><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><p>&gt;</p><blockquote><p>In the first sample Andrey can paint the border of the square with the center in $(2,2)$.</p><p>In the second sample the signature is impossible to forge.</p><p>In the third sample Andrey can paint the borders of the squares with the centers in $(2,2)$ and $(3,2)$:</p><ol><li>we have a clear paper:</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">...</span><br></pre></td></tr></table></figure><blockquote><ol><li>use the pen with center at (2,2)(2,2).</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">###</span><br><span class="line">#.#</span><br><span class="line">###</span><br><span class="line">...</span><br></pre></td></tr></table></figure><blockquote><ol><li>use the pen with center at (3,2)(3,2).</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">###</span><br><span class="line">###</span><br><span class="line">###</span><br><span class="line">###</span><br></pre></td></tr></table></figure><blockquote><p>In the fourth sample Andrey can paint the borders of the squares with the centers in$ (3,3)$ and $(3,5)$.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>先扫一遍，不必管3x3小格子的中间位置是否空着，只要符合周围8个为’#’便在另一个数组总模拟的“盖章”；</p><p>最后对比一下新旧数组是否一致变好了</p></blockquote><div class="note danger"><p>也不知道自己昨晚是怎么回事，傻逼了，div.2第二题都写不出来了。以后cf还是要常打，这种题目要多练练。</p><p>ps：刚发现cf对’YES’跟’Yes’是不加区分的</p><p>下边的代码也能过</p></div><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">char</span> a[N][N];</span><br><span class="line"><span class="keyword">char</span> t[N][N];</span><br><span class="line"><span class="keyword">int</span> tx[] = &#123;<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> ty[] = &#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)   <span class="built_in">scanf</span>(<span class="string">"%s"</span>,a[i]+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">memset</span>(t,<span class="string">'.'</span>,<span class="keyword">sizeof</span> t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt; n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">2</span>;j &lt; m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">bool</span> flag = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; <span class="number">8</span>;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i+tx[k]][j+ty[k]] != <span class="string">'#'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; <span class="number">8</span>;k++)</span><br><span class="line">                    t[i+tx[k]][j+ty[k]] = <span class="string">'#'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i][j] != t[i][j])</span><br><span class="line">            &#123; </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 暴力 </category>
          
          <category> 模拟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
            <tag> Codeforces </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「ACM Shenyang Onsite 2016」E.Counting Cliques(dfs暴力+优化)</title>
      <link href="/2018/10/05/ACM-Shenyang-Onsite-2016-E/"/>
      <url>/2018/10/05/ACM-Shenyang-Onsite-2016-E/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5952" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>A clique is a complete graph, in which there is an edge between every pair of the vertices. Given a graph with N vertices and M edges, your task is to count the number of cliques with a specific size S in the graph. </p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The first line is the number of test cases. For each test case, the first line contains 3 integers N,M and S (N ≤ 100,M ≤ 1000,2 ≤ S ≤ 10), each of the following M lines contains 2 integers u and v (1 ≤ u &lt; v ≤ N), which means there is an edge between vertices u and v. It is guaranteed that the maximum degree of the vertices is no larger than 20. </p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test case, output the number of cliques with size S in the graph.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>3<br>4 3 2<br>1 2<br>2 3<br>3 4<br>5 9 3<br>1 3<br>1 4<br>1 5<br>2 3<br>2 4<br>2 5<br>3 4<br>3 5<br>4 5<br>6 15 4<br>1 2<br>1 3<br>1 4<br>1 5<br>1 6<br>2 3<br>2 4<br>2 5<br>2 6<br>3 4<br>3 5<br>3 6<br>4 5<br>4 6<br>5 6</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>3<br>7<br>15</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>直接暴力搜索能求得正确答案，但是不优化的话肯定会超时。比赛结束我也没能优化出来…..</p><p>赛后看了看<a href="https://blog.csdn.net/eashion1994/article/details/53463259" target="_blank" rel="noopener">EaShion1994的题解</a>才过。最主要的地方还是在其中的2、5两点我没能想到。优化过后便AC了，用了1400+ms</p></blockquote><div class="note info"><p>1.限定按照顶点序号上升dfs（完全图性质）；</p><font color="red">2.存储边从数组转换为vector（题目说顶点的度最多为20，而顶点数最多为100）；</font><p>3.剪枝N-pre &lt; S-deep，当剩下的点不足以构成定点数为S的完全图；（没太大用）</p><p>4.for循环初始化改为memset；（挣扎…）</p><font color="red">5.path数组由bool改为int，因为每次递归前都要判断当前点是否和所有已经在路径里面点有边相连，所以要挨个去判断，如果path[i]表示点i是否在路径中，每次都需要执行一个100，如果将path[i]更改为路径中第i个点，每次最多执行10；（关键）</font><p>6.删掉了之前用来表示点是否加入路径的数组，因为顶点是严格升序加入路径的，所以这一步判断没必要。</p></div><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =============================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  hdu5952.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.hdu.edu.cn/showproblem.php?pid=5952</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/10/05 18时29分42秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =============================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">105</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; edge[MAXN];</span><br><span class="line"><span class="keyword">bool</span> m[MAXN][MAXN];</span><br><span class="line"><span class="keyword">int</span> T,N,M,S,u,v,p;</span><br><span class="line"><span class="keyword">int</span> flag;</span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> path[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> now,<span class="keyword">int</span> step)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= step;i++)</span><br><span class="line">    &#123;</span><br><span class="line">            <span class="keyword">if</span>(!m[path[i]][now])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> st,<span class="keyword">int</span> step)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(step == S)</span><br><span class="line">    &#123;</span><br><span class="line">        p++;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(N-st &lt; S-step)</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">int</span> len = edge[st].size();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; len;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(check(edge[st][j],step))</span><br><span class="line">        &#123;</span><br><span class="line">            path[tot++] = edge[st][j];</span><br><span class="line">            dfs(edge[st][j],step+<span class="number">1</span>);</span><br><span class="line">            --tot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= N;i++)</span><br><span class="line">            edge[i].clear();</span><br><span class="line">        <span class="built_in">memset</span>(m,<span class="number">0</span>,<span class="keyword">sizeof</span> m);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;N,&amp;M,&amp;S);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= M;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;u,&amp;v);</span><br><span class="line">            <span class="keyword">if</span>(u &gt; v)</span><br><span class="line">                swap(u,v);</span><br><span class="line">            edge[u].push_back(v);</span><br><span class="line">            m[u][v] = <span class="number">1</span>;</span><br><span class="line">            m[v][u] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        p = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> tmp = N-S+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(flag = <span class="number">1</span>;flag &lt;= tmp;++flag)</span><br><span class="line">        &#123;</span><br><span class="line">            path[tot++] = flag;</span><br><span class="line">            dfs(flag,<span class="number">1</span>);</span><br><span class="line">            --tot;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,p);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 搜索 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ICPC&amp;&amp;CCPC </tag>
            
            <tag> 暴力 </tag>
            
            <tag> 优化 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「ACM Qingdao Onsite 2016」B.Pocket Cube(暴力 暴力 再暴力)</title>
      <link href="/2018/10/03/ACM-Qingdao-Onsite-2016%20B-Pocket-Cube/"/>
      <url>/2018/10/03/ACM-Qingdao-Onsite-2016%20B-Pocket-Cube/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5983" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>The Pocket Cube, also known as the Mini Cube or the Ice Cube, is the 2 × 2 × 2 equivalence of a Rubik’s Cube.<br>The cube consists of 8 pieces, all corners.<br>Each piece is labeled by a three dimensional coordinate (h, k, l) where h, k, l ∈ {0, 1}. Each of the six faces owns four small faces filled with a positive integer.<br>For each step, you can choose a certain face and turn the face ninety degrees clockwise or counterclockwise.<br>You should judge that if one can restore the pocket cube in one step. We say a pocket cube has been restored if each face owns four same integers.</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The first line of input contains one integer N(N ≤ 30) which is the number of test cases.</p><p>For each test case, the first line describes the top face of the pocket cube, which is the common 2 × 2 face of pieces</p><p>labelled by (0, 0, 1),(0, 1, 1),(1, 0, 1),(1, 1, 1). Four integers are given corresponding to the above pieces.</p><p>The second line describes the front face, the common face of (1, 0, 1),(1, 1, 1),(1, 0, 0),(1, 1, 0). Four integers are</p><p>given corresponding to the above pieces.</p><p>The third line describes the bottom face, the common face of (1, 0, 0),(1, 1, 0),(0, 0, 0),(0, 1, 0). Four integers are</p><p>given corresponding to the above pieces.</p><p>The fourth line describes the back face, the common face of (0, 0, 0),(0, 1, 0),(0, 0, 1),(0, 1, 1). Four integers are</p><p>given corresponding to the above pieces.</p><p>The fifth line describes the left face, the common face of (0, 0, 0),(0, 0, 1),(1, 0, 0),(1, 0, 1). Four integers are given</p><p>corresponding to the above pieces.</p><p>The six line describes the right face, the common face of (0, 1, 1),(0, 1, 0),(1, 1, 1),(1, 1, 0). Four integers are given</p><p>corresponding to the above pieces.</p><p>In other words, each test case contains 24 integers a, b, c to x. You can flat the surface to get the surface development</p><p>as follows.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">+ - + - + - + - + - + - +</span><br><span class="line">| q | r | a | b | u | v |</span><br><span class="line">+ - + - + - + - + - + - +</span><br><span class="line">| s | t | c | d | w | x |</span><br><span class="line">+ - + - + - + - + - + - +</span><br><span class="line">        | e | f |</span><br><span class="line">        + - + - +</span><br><span class="line">        | g | h |</span><br><span class="line">        + - + - +</span><br><span class="line">        | i | j |</span><br><span class="line">        + - + - +</span><br><span class="line">        | k | l |</span><br><span class="line">        + - + - +</span><br><span class="line">        | m | n |</span><br><span class="line">        + - + - +</span><br><span class="line">        | o | p |</span><br><span class="line">        + - + - +</span><br></pre></td></tr></table></figure><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test case, output YES if can be restored in one step, otherwise output NO.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>4<br>1 1 1 1<br>2 2 2 2<br>3 3 3 3<br>4 4 4 4<br>5 5 5 5<br>6 6 6 6<br>6 6 6 6<br>1 1 1 1<br>2 2 2 2<br>3 3 3 3<br>5 5 5 5<br>4 4 4 4<br>1 4 1 4<br>2 1 2 1<br>3 2 3 2<br>4 3 4 3<br>5 5 5 5<br>6 6 6 6<br>1 3 1 3<br>2 4 2 4<br>3 1 3 1<br>4 2 4 2<br>5 5 5 5<br>6 6 6 6</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>YES<br>YES<br>YES<br>NO</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>直接暴力模拟，只有几种情况，分析一下就清楚了</p><p>但是有一个坑点：</p><font color="red">必须判定是否有6种颜色出现</font><p>坑了我两个小时来debug</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">bool</span> f[<span class="number">10</span>],f2[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c,<span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a == b &amp;&amp; c == d &amp;&amp; a == c)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; se;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        se.clear();</span><br><span class="line">        <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span> a);</span><br><span class="line">        <span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span> f);</span><br><span class="line">        <span class="built_in">memset</span>(f2,<span class="number">0</span>,<span class="keyword">sizeof</span> f2);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">6</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= <span class="number">4</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> tmp = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">2</span>;k &lt;= <span class="number">4</span>;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i][<span class="number">1</span>] != a[i][k])</span><br><span class="line">                    tmp = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(tmp == <span class="number">1</span>)</span><br><span class="line">                f[i] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> cou = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(f[<span class="number">1</span>] == <span class="number">1</span> &amp;&amp; f[<span class="number">3</span>] == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            f2[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">            cou++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f[<span class="number">2</span>] == <span class="number">1</span> &amp;&amp; f[<span class="number">4</span>] == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            f2[<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">            cou++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f[<span class="number">5</span>] == <span class="number">1</span> &amp;&amp; f[<span class="number">6</span>] == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            f2[<span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line">            cou++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">6</span>;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= <span class="number">4</span>;j++)</span><br><span class="line">                se.insert(a[i][j]);</span><br><span class="line">        <span class="keyword">int</span> cas = se.size();</span><br><span class="line">        <span class="keyword">if</span>(cas != <span class="number">6</span>)</span><br><span class="line">            cou = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(cou == <span class="number">2</span> || cou == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(cou == <span class="number">3</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(f2[<span class="number">1</span>] == <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>((check(a[<span class="number">5</span>][<span class="number">2</span>],a[<span class="number">5</span>][<span class="number">4</span>],a[<span class="number">2</span>][<span class="number">3</span>],a[<span class="number">2</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">2</span>][<span class="number">1</span>],a[<span class="number">2</span>][<span class="number">2</span>],a[<span class="number">6</span>][<span class="number">4</span>],a[<span class="number">6</span>][<span class="number">2</span>]) &amp;&amp; check(a[<span class="number">6</span>][<span class="number">3</span>],a[<span class="number">6</span>][<span class="number">1</span>],a[<span class="number">4</span>][<span class="number">2</span>],a[<span class="number">4</span>][<span class="number">1</span>]) &amp;&amp; check(a[<span class="number">4</span>][<span class="number">4</span>],a[<span class="number">4</span>][<span class="number">3</span>],a[<span class="number">5</span>][<span class="number">1</span>],a[<span class="number">5</span>][<span class="number">3</span>])) || (check(a[<span class="number">5</span>][<span class="number">2</span>],a[<span class="number">5</span>][<span class="number">4</span>],a[<span class="number">4</span>][<span class="number">2</span>],a[<span class="number">4</span>][<span class="number">1</span>]) &amp;&amp; check(a[<span class="number">2</span>][<span class="number">1</span>],a[<span class="number">2</span>][<span class="number">2</span>],a[<span class="number">5</span>][<span class="number">1</span>],a[<span class="number">5</span>][<span class="number">3</span>]) &amp;&amp; check(a[<span class="number">6</span>][<span class="number">3</span>],a[<span class="number">6</span>][<span class="number">1</span>],a[<span class="number">2</span>][<span class="number">3</span>],a[<span class="number">2</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">4</span>][<span class="number">4</span>],a[<span class="number">4</span>][<span class="number">3</span>],a[<span class="number">6</span>][<span class="number">4</span>],a[<span class="number">6</span>][<span class="number">2</span>])))</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">                    <span class="keyword">else</span> </span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(f2[<span class="number">2</span>] == <span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>((check(a[<span class="number">5</span>][<span class="number">1</span>],a[<span class="number">5</span>][<span class="number">2</span>],a[<span class="number">1</span>][<span class="number">3</span>],a[<span class="number">1</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">1</span>][<span class="number">1</span>],a[<span class="number">1</span>][<span class="number">2</span>],a[<span class="number">6</span>][<span class="number">3</span>],a[<span class="number">6</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">6</span>][<span class="number">1</span>],a[<span class="number">6</span>][<span class="number">2</span>],a[<span class="number">3</span>][<span class="number">2</span>],a[<span class="number">3</span>][<span class="number">1</span>]) &amp;&amp; check(a[<span class="number">3</span>][<span class="number">4</span>],a[<span class="number">3</span>][<span class="number">3</span>],a[<span class="number">5</span>][<span class="number">3</span>],a[<span class="number">5</span>][<span class="number">4</span>])) || (check(a[<span class="number">5</span>][<span class="number">1</span>],a[<span class="number">5</span>][<span class="number">2</span>],a[<span class="number">3</span>][<span class="number">2</span>],a[<span class="number">3</span>][<span class="number">1</span>]) &amp;&amp; check(a[<span class="number">1</span>][<span class="number">1</span>],a[<span class="number">1</span>][<span class="number">2</span>],a[<span class="number">5</span>][<span class="number">3</span>],a[<span class="number">5</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">6</span>][<span class="number">1</span>],a[<span class="number">6</span>][<span class="number">2</span>],a[<span class="number">1</span>][<span class="number">3</span>],a[<span class="number">1</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">3</span>][<span class="number">4</span>],a[<span class="number">3</span>][<span class="number">3</span>],a[<span class="number">6</span>][<span class="number">3</span>],a[<span class="number">6</span>][<span class="number">4</span>])))</span><br><span class="line">                           <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">                        <span class="keyword">else</span> </span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span>   <span class="comment">// f2[3] == 1</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>((check(a[<span class="number">1</span>][<span class="number">1</span>],a[<span class="number">1</span>][<span class="number">3</span>],a[<span class="number">2</span>][<span class="number">2</span>],a[<span class="number">2</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">2</span>][<span class="number">1</span>],a[<span class="number">2</span>][<span class="number">3</span>],a[<span class="number">3</span>][<span class="number">2</span>],a[<span class="number">3</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">3</span>][<span class="number">1</span>],a[<span class="number">3</span>][<span class="number">3</span>],a[<span class="number">4</span>][<span class="number">2</span>],a[<span class="number">4</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">4</span>][<span class="number">1</span>],a[<span class="number">4</span>][<span class="number">3</span>],a[<span class="number">1</span>][<span class="number">2</span>],a[<span class="number">1</span>][<span class="number">4</span>])) || (check(a[<span class="number">1</span>][<span class="number">1</span>],a[<span class="number">1</span>][<span class="number">3</span>],a[<span class="number">4</span>][<span class="number">2</span>],a[<span class="number">4</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">2</span>][<span class="number">1</span>],a[<span class="number">2</span>][<span class="number">3</span>],a[<span class="number">1</span>][<span class="number">2</span>],a[<span class="number">1</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">3</span>][<span class="number">1</span>],a[<span class="number">3</span>][<span class="number">3</span>],a[<span class="number">2</span>][<span class="number">2</span>],a[<span class="number">2</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">4</span>][<span class="number">1</span>],a[<span class="number">4</span>][<span class="number">3</span>],a[<span class="number">3</span>][<span class="number">2</span>],a[<span class="number">3</span>][<span class="number">4</span>])))</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">                        <span class="keyword">else</span> </span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                       </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 模拟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> HDU </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ2406 Power Strings (给自己挖个坑先)</title>
      <link href="/2018/10/03/POJ2406-Power-Strings/"/>
      <url>/2018/10/03/POJ2406-Power-Strings/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><div class="note danger"><p>注意，这一份后缀数组的代码并不能AC</p></div><p>传送门：<a href="http://poj.org/problem?id=2406" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>Given two strings a and b we define a<em>b to be their concatenation. For example, if a = “abc” and b = “def” then a</em>b = “abcdef”. If we think of concatenation as multiplication, exponentiation by a non-negative integer is defined in the normal way: a^0 = “” (the empty string) and a^(n+1) = a*(a^n).</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>Each test case is a line of input representing s, a string of printable characters. The length of s will be at least 1 and will not exceed 1 million characters. A line containing a period follows the last test case.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each s you should print the largest n such that s = a^n for some string a.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>abcd<br>aaaa<br>ababab<br>.</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>1<br>4<br>3</p></blockquote><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><blockquote><p>This problem has huge input, use scanf instead of cin to avoid time limit exceed.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>用KMP找循环节的话，这是一道非常简单的题目</p><p>用后缀数组写的话好像必须用DC3算法。</p><p>我用倍增写的MLE了，理论上应该TLE。。。</p><p>我觉得应该是我的RMQ部分用的内存太多了，RMQ不需要求那么多，但是我还没仔细扣过这块，所以还是先留个坑，等我以后再回来填上</p><p>下附KMP代码</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="后缀数组"><a href="#后缀数组" class="headerlink" title="后缀数组"></a>后缀数组</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ==============================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  E.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://poj.org/problem?id=2406</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/10/01 19时38分29秒</span></span><br><span class="line"><span class="comment"> *       Revision:  MLE 不过好像用倍增的话会TLE</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ==============================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F(x) ((x)/3+((x)%3==1?0:tb))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> G(x) ((x)&lt;tb?(x)*3+1:((x)-tb)*3+2)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1001000</span>;</span><br><span class="line"><span class="keyword">int</span> wa[N],wb[N],wv[N],wss[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> *r,<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> r[a] == r[b] &amp;&amp; r[a+l]==r[b+l];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> sa[N],rk[N],height[N];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">char</span> r[N];</span><br><span class="line"><span class="keyword">int</span> minnum[N][<span class="number">16</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SA</span><span class="params">(<span class="keyword">char</span> *r,<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> *x = wa,*y = wb;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; m;i++)    wss[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)    ++wss[x[i] = r[i]];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; m;i++)    wss[i] += wss[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = n<span class="number">-1</span>;i &gt;= <span class="number">0</span>;i--) sa[--wss[x[i]]] = i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> p = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;p &lt; n;j &lt;&lt;= <span class="number">1</span>,m = p)</span><br><span class="line">    &#123;</span><br><span class="line">        p = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = n-j;i &lt; n;i++)  y[p++] = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)    <span class="keyword">if</span>(sa[i] &gt;= j)  y[p++] = sa[i]-j;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)    wv[i] = x[y[i]];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; m;i++)    wss[i] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)    ++wss[wv[i]];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; m;i++)    wss[i] += wss[i<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = n<span class="number">-1</span>;i &gt;= <span class="number">0</span>;--i) sa[--wss[wv[i]]] = y[i];</span><br><span class="line">        swap(x,y);  x[sa[<span class="number">0</span>]] = <span class="number">0</span>;   p = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; n;i++)    x[sa[i]] = cmp(y,sa[i<span class="number">-1</span>],sa[i],j) ? p<span class="number">-1</span> : p++;</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; n;i++)    rk[sa[i]] = i;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n<span class="number">-1</span>;height[rk[i++]] = k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(k)   --k;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = sa[rk[i]<span class="number">-1</span>];r[i+k] == r[j+k];k++);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initRMQ</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">int</span> m = (<span class="keyword">int</span>)(<span class="built_in">log</span>(n*<span class="number">1.0</span>)/<span class="built_in">log</span>(n*<span class="number">2.0</span>));</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        minnum[i][<span class="number">0</span>] = height[i];</span><br><span class="line">    <span class="keyword">for</span>(j = <span class="number">1</span>;j &lt;= m;j++)</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">1</span>;i + (i&lt;&lt;j)<span class="number">-1</span> &lt;= n;i++)</span><br><span class="line">            minnum[i][j] = min(minnum[i][j<span class="number">-1</span>],minnum[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Ask_MIN</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="keyword">int</span>(<span class="built_in">log</span>(b-a+<span class="number">1.0</span>)/<span class="built_in">log</span>(<span class="number">2.0</span>));</span><br><span class="line">    <span class="keyword">return</span> min(minnum[a][k],minnum[b-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lcp</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a = rk[a],b = rk[b];</span><br><span class="line">    <span class="keyword">if</span>(a &gt; b)</span><br><span class="line">        swap(a,b);</span><br><span class="line">    <span class="keyword">return</span> Ask_MIN(a+<span class="number">1</span>,b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> Maxn,k;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,r) &amp;&amp; r[<span class="number">0</span>] != <span class="string">'.'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// getchar();</span></span><br><span class="line">        Maxn = <span class="number">1</span>;</span><br><span class="line">        n = <span class="built_in">strlen</span>(r);</span><br><span class="line">        r[n] = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        SA(r,n+<span class="number">1</span>,<span class="number">130</span>);</span><br><span class="line">        <span class="comment">// calheight(r,sa,n+1);</span></span><br><span class="line">        initRMQ();</span><br><span class="line">        <span class="keyword">for</span>(k = <span class="number">1</span>;k &lt; n;k++)   <span class="comment">// 枚举长度</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(n%k)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">int</span> tmp = lcp(<span class="number">0</span>,k);</span><br><span class="line">            <span class="keyword">if</span>(tmp == n-k)</span><br><span class="line">                Maxn = max(Maxn,n/k);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Maxn);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="KMP"><a href="#KMP" class="headerlink" title="KMP"></a>KMP</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ==============================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  F.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://poj.org/problem?id=2406</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/08/05 20时20分37秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ==============================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=a;i&gt;=n;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1000010</span>;</span><br><span class="line"><span class="keyword">char</span> T[N];</span><br><span class="line"><span class="keyword">int</span> Next[N];</span><br><span class="line"><span class="keyword">int</span> tlen;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_Next</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j,k;</span><br><span class="line">    j = <span class="number">0</span>;  k = <span class="number">-1</span>; Next[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(j &lt; tlen)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(k == <span class="number">-1</span> || T[j] == T[k])</span><br><span class="line">            Next[++j] = ++k;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            k = Next[k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,T))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(T[<span class="number">0</span>] == <span class="string">'.'</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        tlen = <span class="built_in">strlen</span>(T);</span><br><span class="line">        get_Next();</span><br><span class="line">        <span class="keyword">if</span>(!Next[tlen])</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> p = tlen-Next[tlen];</span><br><span class="line">            <span class="keyword">if</span>(tlen%p == <span class="number">0</span> &amp;&amp; p)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,tlen/p);</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// rep(i,1,tlen)</span></span><br><span class="line">        <span class="comment">//     printf("%d%c",Next[i],i == tlen ? '\n' : ' ');</span></span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 字符串 </category>
          
          <category> 后缀数组 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> POJ </tag>
            
            <tag> 后缀数组 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ1743 Musical Theme(后缀数组求不可重叠最长重复子串)</title>
      <link href="/2018/10/01/POJ1743-Musical-Theme/"/>
      <url>/2018/10/01/POJ1743-Musical-Theme/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://poj.org/problem?id=1743" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>A musical melody is represented as a sequence of N (1&lt;=N&lt;=20000)notes that are integers in the range 1..88, each representing a key on the piano. It is unfortunate but true that this representation of melodies ignores the notion of musical timing; but, this programming task is about notes and not timings.</p><a id="more"></a><p>Many composers structure their music around a repeating &qout;theme&qout;, which, being a subsequence of an entire melody, is a sequence of integers in our representation. A subsequence of a melody is a theme if it:</p><ul><li>is at least five notes long </li><li>appears (potentially transposed — see below) again somewhere else in the piece of music </li><li>is disjoint from (i.e., non-overlapping with) at least one of its other appearance(s) </li></ul><p>Transposed means that a constant positive or negative value is added to every note value in the theme subsequence.</p><p>Given a melody, compute the length (number of notes) of the longest theme.</p><p>One second time limit for this problem’s solutions!</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The input contains several test cases. The first line of each test case contains the integer N. The following n integers represent the sequence of notes.<br>The last test case is followed by one zero. </p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test case, the output file should contain a single line with a single integer that represents the length of the longest theme. If there are no themes, output 0.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>30<br>25 27 30 34 39 45 52 60 69 79 69 60 52 45 39 34 30 26 22 18 82 78 74 70 66 67 64 60 65 80<br>0</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>5</p></blockquote><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><blockquote><p>有N(1&lt;=N&lt;=20000)个音符的序列来表示一首乐曲，每个音符都是1..88范围内的整数，现在要找一个重复的子串，它需要满足如下条件：1.长度至少为5个音符。 2.在乐曲中重复出现（就是出现过至少两次）。(可能经过转调，“转调”的意思是主题序列中每个音符都被加上或减去了同一个整数值) 3.重复出现的同一主题不能有公共部分。</p><p>如果存在长度至少为5个音符的子串，则输出最长的子串的长度，否则输出0</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>首先贴一下罗穗骞大佬的论文里的做法</p></blockquote><div class="note info"><p>先二分答案， 把题目变成判定性问题: 判断是否存在两个长度为 k 的子串是相同的，且不重叠。解决这个问题的关键还是利用 height 数组。把排序后的后缀分成若干组，其中每组的后缀之间的height 值都 不小于 k。例如，字符串为 “aabaaaab”，当 k=2 时，后缀分成了 4 组，如图 5 所示。 </p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-10-1/72573642.jpg" alt="论文"></p><p>容易看出， 有希望成为最长公共前缀不小于k 的两个后缀一定在同一组。然后对于每组后缀，只须判断每个后缀的 sa 值的最大值和最小值之差是否不小于k。如果有一组满足，则说明存在，否则不存在。整个做法的时间复杂度为O(nlogn)。本题中利用 height 值对后缀进行分组的方法很常用，请读者认真体会。</p></div><div class="note danger"><p>说实话我当时根本没看懂大佬所表达的意思，尤其是这个分组，我现在也没看懂why。我是看了别人的博客以后又错了无数发才写出来的···</p></div><blockquote><p>记录一下我对这个题的理解</p><p>首先要清楚sa[]所表达的意思  “排第几的是谁?”</p><p>看图：</p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-10-1/25413517.jpg" alt="图一"></p><p>height[]是在sa[]的基础上所求出来的</p><p>height[i]表示sa[i]与sa[i-1]<font color="red">所对应的字符串</font>的最长公共前缀</p><p>（这也是在代码中每次进行判断不重叠的原理）</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mm=min(mm,min(sa[i],sa[i<span class="number">-1</span>]));</span><br><span class="line">mx=max(mx,max(sa[i],sa[i<span class="number">-1</span>]));</span><br><span class="line"><span class="keyword">if</span>(mx-mm&gt;k) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="comment">// sa[i]的值为sa[i]所对应的字符串首字母在原串中的位置</span></span><br><span class="line"><span class="comment">// 因为题目要求不重叠，因此需要(mx-mn&gt;k)即两个首字母的位置大于k，这样才不会重叠。可以结合配图，在纸上试一下，理解了这个这个题就不难了</span></span><br></pre></td></tr></table></figure><blockquote><p>最难的部分说完了，剩下的就是对输入的处理了，由于有这么一个要求（<font color="red">可能经过转调，“转调”的意思是主题序列中每个音符都被加上或减去了同一个整数值</font>），因此要找到一个方法巧妙的处理这个问题。</p><p>举个栗子：1 2 3 4  —&gt; 7 8 9 10(1 2 3 4 经过转调以后，变为7 8 9 10）。但是不难发现，无论它如何转调，他们的相对差值是不会变的，因此我们处理一下将数据改为它与前一位数的差值，便解决了。</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =============================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  A.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://poj.org/problem?id=1743</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/10/01 15时23分10秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =============================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">2e6</span>+<span class="number">10</span>;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> wa[MAXN],wb[MAXN],wv[MAXN],ws[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> *r,<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> r[a]==r[b] &amp;&amp; r[a+l]==r[b+l];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> sa[MAXN],rk[MAXN],height[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SA</span><span class="params">(<span class="keyword">int</span> *r,<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> *x=wa,*y=wb;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; ++i) ws[i]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; ++i) ++ws[x[i]=r[i]];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;m; ++i) ws[i]+=ws[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>; i&gt;=<span class="number">0</span>; --i) sa[--ws[x[i]]]=i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> p=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; p&lt;n; j&lt;&lt;=<span class="number">1</span>,m=p)</span><br><span class="line">    &#123;</span><br><span class="line">        p=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n-j; i&lt;n; ++i) y[p++]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; ++i) <span class="keyword">if</span>(sa[i]&gt;=j) y[p++]=sa[i]-j;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; ++i) wv[i]=x[y[i]];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; ++i) ws[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; ++i) ++ws[wv[i]];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;m; ++i) ws[i]+=ws[i<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>; i&gt;=<span class="number">0</span>; --i) sa[--ws[wv[i]]]=y[i];</span><br><span class="line">        swap(x,y); x[sa[<span class="number">0</span>]]=<span class="number">0</span>; p=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; ++i) x[sa[i]]=cmp(y,sa[i<span class="number">-1</span>],sa[i],j)?p<span class="number">-1</span>:p++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; ++i) rk[sa[i]]=i;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n<span class="number">-1</span>; height[rk[i++]]=k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(k) --k;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=sa[rk[i]<span class="number">-1</span>]; r[i+k]==r[j+k]; ++k);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,a[MAXN],r[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ok</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mx = -INF,mn = INF;</span><br><span class="line">    <span class="comment">// height[1] 没意义  i从2开始</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(height[i] &gt;= k)</span><br><span class="line">        &#123;</span><br><span class="line">            mn = min(mn,min(sa[i],sa[i<span class="number">-1</span>]));</span><br><span class="line">            mx = max(mx,max(sa[i],sa[i<span class="number">-1</span>]));</span><br><span class="line">            <span class="keyword">if</span>(mx-mn&gt;k)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            mx = -INF,mn = INF;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n) &amp;&amp; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n<span class="number">-1</span>;i++)</span><br><span class="line">            r[i] = a[i+<span class="number">1</span>]-a[i]+<span class="number">88</span>;</span><br><span class="line">        r[n<span class="number">-1</span>] = <span class="number">0</span>;</span><br><span class="line">        SA(r,n,<span class="number">176</span>);</span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">0</span>,r = n;</span><br><span class="line">        <span class="keyword">while</span>(l &lt; r)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (l+r+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(ok(mid))</span><br><span class="line">                l = mid;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                r = mid<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(l &gt;= <span class="number">4</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,l+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 字符串 </category>
          
          <category> 后缀数组 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> POJ </tag>
            
            <tag> 后缀数组 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Leetcode junior string</title>
      <link href="/2018/09/29/Leetcode-junior-string/"/>
      <url>/2018/09/29/Leetcode-junior-string/</url>
      <content type="html"><![CDATA[<blockquote><p>还不困。。。再写点。。。</p></blockquote><a id="more"></a><h1 id="1、反转字符串"><a href="#1、反转字符串" class="headerlink" title="1、反转字符串"></a>1、反转字符串</h1><h2 id="1-传送门"><a href="#1-传送门" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p> 传送门：<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/5/strings/32/" target="_blank" rel="noopener">反转字符串</a></p></blockquote><h2 id="2-结果"><a href="#2-结果" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过97.46%</p></blockquote><h2 id="3-代码"><a href="#3-代码" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">reverseString</span><span class="params">(<span class="built_in">string</span> &amp;s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> si = s.size();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>,j = si<span class="number">-1</span>;i &lt; j;i++,j--) &#123;</span><br><span class="line">            swap(s[i],s[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="2、颠倒整数"><a href="#2、颠倒整数" class="headerlink" title="2、颠倒整数"></a>2、颠倒整数</h1><h2 id="1-传送门-1"><a href="#1-传送门-1" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p> 传送门：<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/5/strings/33/" target="_blank" rel="noopener">颠倒整数</a></p></blockquote><h2 id="2-结果-1"><a href="#2-结果-1" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过97.56%</p></blockquote><h2 id="3-代码-1"><a href="#3-代码-1" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> p1 = <span class="number">0</span>,p2 = x;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> x1 = <span class="number">-2147483648</span>;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> x2 = <span class="number">2147483647</span>;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(p2 &lt; <span class="number">0</span>)</span><br><span class="line">            flag = <span class="number">1</span>,p2 = -p2;</span><br><span class="line">        <span class="keyword">while</span>(p2) &#123;</span><br><span class="line">            p1 = p1*<span class="number">10</span>+p2%<span class="number">10</span>;</span><br><span class="line">            p2 /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag) &#123;</span><br><span class="line">            p1 = <span class="number">-1l</span>l*p1;</span><br><span class="line">            <span class="keyword">if</span>(p1 &lt; x1)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                <span class="keyword">return</span> p1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(p1 &gt; x2)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                <span class="keyword">return</span> p1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="3、字符串中的第一个唯一字符"><a href="#3、字符串中的第一个唯一字符" class="headerlink" title="3、字符串中的第一个唯一字符"></a>3、字符串中的第一个唯一字符</h1><h2 id="1-传送门-2"><a href="#1-传送门-2" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p> 传送门：<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/5/strings/34/" target="_blank" rel="noopener">字符串中的第一个唯一字符</a></p></blockquote><h2 id="2-结果-2"><a href="#2-结果-2" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过24.65%</p></blockquote><h2 id="3-代码-2"><a href="#3-代码-2" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">firstUniqChar</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">map</span>&lt;<span class="keyword">char</span>,<span class="keyword">int</span>&gt; flag;</span><br><span class="line">        <span class="keyword">int</span> si = s.size();</span><br><span class="line">        <span class="keyword">if</span>(si == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> st = <span class="number">0</span>,en = <span class="number">1</span>;</span><br><span class="line">        flag[s[<span class="number">0</span>]]++;</span><br><span class="line">        <span class="keyword">while</span>(st &lt; si &amp;&amp; en &lt; si) &#123;</span><br><span class="line">            <span class="keyword">while</span>(flag[s[st]] &gt; <span class="number">1</span> &amp;&amp; st &lt; si)</span><br><span class="line">                st++;</span><br><span class="line">            <span class="keyword">while</span>(flag[s[en]] &lt; <span class="number">2</span> &amp;&amp; en &lt; si) &#123;</span><br><span class="line">                flag[s[en]]++;</span><br><span class="line">                en++;</span><br><span class="line">            &#125;</span><br><span class="line">            en++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(flag[s[st]] &gt; <span class="number">1</span> &amp;&amp; st &lt; si)</span><br><span class="line">            st++;</span><br><span class="line">        <span class="keyword">if</span>(st &lt; si)</span><br><span class="line">            <span class="keyword">return</span> st;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="4、有效的字母异位词"><a href="#4、有效的字母异位词" class="headerlink" title="4、有效的字母异位词"></a>4、有效的字母异位词</h1><h2 id="1-传送门-3"><a href="#1-传送门-3" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p> 传送门：<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/5/strings/35/" target="_blank" rel="noopener">有效的字母异位词</a></p></blockquote><h2 id="2-结果-3"><a href="#2-结果-3" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过97.36%</p></blockquote><h2 id="3-代码-3"><a href="#3-代码-3" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isAnagram</span><span class="params">(<span class="built_in">string</span> s, <span class="built_in">string</span> t)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a[<span class="number">60</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> len1 = s.size();</span><br><span class="line">        <span class="keyword">int</span> len2 = t.size();</span><br><span class="line">        <span class="keyword">if</span>(len1 != len2)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len1;i++)&#123;</span><br><span class="line">            a[s[i]-<span class="string">'A'</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len2;i++)&#123;</span><br><span class="line">         a[t[i]-<span class="string">'A'</span>]--;   </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">60</span>;i++)&#123;</span><br><span class="line">         <span class="keyword">if</span>(a[i] != <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="5、验证回文字符串"><a href="#5、验证回文字符串" class="headerlink" title="5、验证回文字符串"></a>5、验证回文字符串</h1><h2 id="1-传送门-4"><a href="#1-传送门-4" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p> 传送门：<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/5/strings/36/" target="_blank" rel="noopener">验证回文字符串</a></p></blockquote><h2 id="2-结果-4"><a href="#2-结果-4" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过96.96%</p><p>这个代码我写的实在是搓…</p></blockquote><h2 id="3-代码-4"><a href="#3-代码-4" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> si = s.size();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>,j = si<span class="number">-1</span>;i &lt; j;i++,j--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span>(!((s[i] &gt;= <span class="string">'A'</span> &amp;&amp; s[i] &lt;= <span class="string">'Z'</span>) || (s[i] &gt;= <span class="string">'a'</span> &amp;&amp; s[i] &lt;= <span class="string">'z'</span>) || (s[i] &gt;= <span class="string">'0'</span> &amp;&amp; s[i] &lt;= <span class="string">'9'</span>))) &#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);</span><br><span class="line">            <span class="keyword">while</span>(!((s[j] &gt;= <span class="string">'A'</span> &amp;&amp; s[j] &lt;= <span class="string">'Z'</span>) || (s[j] &gt;= <span class="string">'a'</span> &amp;&amp; s[j] &lt;= <span class="string">'z'</span>) || (s[j] &gt;= <span class="string">'0'</span> &amp;&amp; s[j] &lt;= <span class="string">'9'</span>))) &#123;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,j);</span><br><span class="line">            <span class="keyword">if</span>(i &gt; j)  <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(s[i] == s[j]) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>((s[i] &gt;= <span class="string">'A'</span> &amp;&amp; s[i] &lt;= <span class="string">'Z'</span>) || (s[i] &gt;= <span class="string">'a'</span> &amp;&amp; s[i] &lt;= <span class="string">'z'</span>)) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="built_in">abs</span>(s[i]-s[j]) != <span class="number">32</span>)</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span>(s[i] != s[j])</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="6、字符串转整数-atoi"><a href="#6、字符串转整数-atoi" class="headerlink" title="6、字符串转整数 (atoi)"></a>6、字符串转整数 (atoi)</h1><h2 id="1-传送门-5"><a href="#1-传送门-5" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门：<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/5/strings/37/" target="_blank" rel="noopener">字符串转整数 (atoi)</a></p></blockquote><h2 id="2-结果-5"><a href="#2-结果-5" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过15.09%</p><font color="red">错的最多也是写的最烂的一个题</font></blockquote><h2 id="3-代码-5"><a href="#3-代码-5" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">myAtoi</span><span class="params">(<span class="built_in">string</span> str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> len = str.size(),i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">bool</span> f1 = <span class="number">0</span>,f2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> f = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> pr = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> mmax = <span class="number">2147483647</span>;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> mmin = <span class="number">-2147483648</span>;</span><br><span class="line">        <span class="keyword">for</span>(;i &lt; len;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(str[i] == <span class="string">' '</span>)   <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(str[i] &lt;= <span class="string">'9'</span> &amp;&amp; str[i] &gt;= <span class="string">'0'</span>)  <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(str[i] == <span class="string">'-'</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(f == <span class="number">1</span>)  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span>(i == len<span class="number">-1</span>)  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(str[i+<span class="number">1</span>] &lt; <span class="string">'0'</span> || str[i+<span class="number">1</span>] &gt; <span class="string">'9'</span>)   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">else</span> f = <span class="number">1</span>;</span><br><span class="line">                f1 = <span class="number">1</span>;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(str[i] == <span class="string">'+'</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(f == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">if</span>(i == len<span class="number">-1</span>)  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(str[i+<span class="number">1</span>] &lt; <span class="string">'0'</span> || str[i+<span class="number">1</span>] &gt; <span class="string">'9'</span>)   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">else</span> f = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span>(str[i] &gt;= <span class="string">'0'</span> &amp;&amp; str[i] &lt;= <span class="string">'9'</span>) &#123;</span><br><span class="line">                        f2 = <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span>(!f2) <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i == len) &#123;</span><br><span class="line">            i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(str[i] &lt; <span class="string">'0'</span> || str[i] &gt; <span class="string">'9'</span>)</span><br><span class="line">                i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> cou = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(str[i] == <span class="string">'0'</span>)    i++;</span><br><span class="line">        <span class="keyword">for</span>(;i &lt; len;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(cou &gt;= <span class="number">18</span>)   <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(str[i] &gt;= <span class="string">'0'</span> &amp;&amp; str[i] &lt;= <span class="string">'9'</span>) &#123;</span><br><span class="line">                pr = pr*<span class="number">10</span>+str[i]-<span class="string">'0'</span>;</span><br><span class="line">                cou++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f1) &#123;</span><br><span class="line">            <span class="keyword">if</span>(pr<span class="number">-1</span> &gt;= mmax)</span><br><span class="line">                <span class="keyword">return</span> (<span class="keyword">int</span>)mmin;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> (<span class="keyword">int</span>)pr*(<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(pr &gt;= mmax)</span><br><span class="line">                <span class="keyword">return</span> (<span class="keyword">int</span>)mmax;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                <span class="keyword">return</span> (<span class="keyword">int</span>)pr;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="7、实现strStr"><a href="#7、实现strStr" class="headerlink" title="7、实现strStr()"></a>7、实现strStr()</h1><h2 id="1-传送门-6"><a href="#1-传送门-6" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门：<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/5/strings/38/" target="_blank" rel="noopener">实现strStr()</a></p></blockquote><h2 id="2-结果-6"><a href="#2-结果-6" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过99.25.%</p></blockquote><h2 id="3-代码-6"><a href="#3-代码-6" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">strStr</span><span class="params">(<span class="built_in">string</span> haystack, <span class="built_in">string</span> needle)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> len2 = needle.size();</span><br><span class="line">        <span class="keyword">if</span>(len2 == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> len = haystack.size();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>,j = <span class="number">0</span>;i &lt; len &amp;&amp; j &lt; len2;)&#123;</span><br><span class="line">            <span class="keyword">if</span>(haystack[i] == needle[j])</span><br><span class="line">                i++,j++;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                i = i-j+<span class="number">1</span>,j = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(j == len2)</span><br><span class="line">                <span class="keyword">return</span> i-j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="8、报数"><a href="#8、报数" class="headerlink" title="8、报数"></a>8、报数</h1><h2 id="1-传送门-7"><a href="#1-传送门-7" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p> 传送门：<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/5/strings/39/" target="_blank" rel="noopener">报数</a></p></blockquote><h2 id="2-结果-7"><a href="#2-结果-7" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过29.47%</p></blockquote><h2 id="3-代码-7"><a href="#3-代码-7" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">countAndSay</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">string</span> r[<span class="number">32</span>];</span><br><span class="line">        <span class="built_in">string</span> a[<span class="number">10</span>] = &#123;<span class="string">"0"</span>,<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>,<span class="string">"4"</span>,<span class="string">"5"</span>,<span class="string">"6"</span>,<span class="string">"7"</span>,<span class="string">"8"</span>,<span class="string">"9"</span>&#125;;</span><br><span class="line">        r[<span class="number">1</span>] = <span class="string">"1"</span>;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">1</span>)  <span class="keyword">return</span> r[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= n;i++) &#123;</span><br><span class="line">            r[i] = <span class="string">""</span>;</span><br><span class="line">            <span class="keyword">int</span> len = r[i<span class="number">-1</span>].length();</span><br><span class="line">            <span class="keyword">int</span> cou = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; len;j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(r[i<span class="number">-1</span>][j] == r[i<span class="number">-1</span>][j+<span class="number">1</span>]) &#123;</span><br><span class="line">                    cou++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    r[i] = r[i] + a[cou];</span><br><span class="line">                    r[i].push_back(r[i<span class="number">-1</span>][j]);</span><br><span class="line">                    cou = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> r[n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="9、最长公共前缀"><a href="#9、最长公共前缀" class="headerlink" title="9、最长公共前缀"></a>9、最长公共前缀</h1><h2 id="1-传送门-8"><a href="#1-传送门-8" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p> 传送门：<a href="http://codeforces.com/contest/987/problem/A" target="_blank" rel="noopener">最长公共前缀</a></p></blockquote><h2 id="2-结果-8"><a href="#2-结果-8" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过99.82%</p></blockquote><h2 id="3-代码-8"><a href="#3-代码-8" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">longestCommonPrefix</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; strs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> si = strs.size();</span><br><span class="line">        <span class="built_in">string</span> p = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span>(si == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> p;</span><br><span class="line">        <span class="keyword">int</span> now = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> mmin = strs[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; si;i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> tmp = strs[i].size();</span><br><span class="line">            <span class="keyword">if</span>(tmp &lt; mmin)</span><br><span class="line">                mmin = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; mmin;i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt; si;j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(strs[j][i] != strs[<span class="number">0</span>][i])</span><br><span class="line">                    <span class="keyword">return</span> p;</span><br><span class="line">            &#125;</span><br><span class="line">            p.insert(now++,strs[<span class="number">0</span>],i,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Leetcode </category>
          
          <category> 初级算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Leetcode junior math</title>
      <link href="/2018/09/29/Leetcode-junior-math/"/>
      <url>/2018/09/29/Leetcode-junior-math/</url>
      <content type="html"><![CDATA[<blockquote><p>再写几道吧。。。</p></blockquote><a id="more"></a><h1 id="1、Fizz-Buzz"><a href="#1、Fizz-Buzz" class="headerlink" title="1、Fizz Buzz"></a>1、Fizz Buzz</h1><h2 id="1-传送门"><a href="#1-传送门" class="headerlink" title="(1). 传送门"></a>(1). 传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/25/math/60/" target="_blank" rel="noopener">Fizz Buzz</a></p></blockquote><h2 id="2-结果"><a href="#2-结果" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过99.70%</p></blockquote><h2 id="3-代码"><a href="#3-代码" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; fizzBuzz(<span class="keyword">int</span> n) &#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; v;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">15</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                v.push_back(<span class="string">"FizzBuzz"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(i%<span class="number">3</span> == <span class="number">0</span> || i%<span class="number">5</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(i%<span class="number">3</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                        v.push_back(<span class="string">"Fizz"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        v.push_back(<span class="string">"Buzz"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    v.push_back(to_string(i));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="2、计数质数"><a href="#2、计数质数" class="headerlink" title="2、计数质数"></a>2、计数质数</h1><h2 id="1-传送门-1"><a href="#1-传送门-1" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/25/math/61/" target="_blank" rel="noopener">计数质数</a></p></blockquote><h2 id="2-结果-1"><a href="#2-结果-1" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过83.37%</p><p>使用线性筛法</p></blockquote><h2 id="3-代码-1"><a href="#3-代码-1" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">countPrimes</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">bool</span> number[n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> prime[n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> i,j,count = <span class="number">0</span>,p = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(number,<span class="number">0</span>,<span class="keyword">sizeof</span> number);</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">2</span>;i &lt;= n;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!number[i])</span><br><span class="line">                prime[count++] = i;</span><br><span class="line">            <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; count;j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(i*prime[j] &gt; n)  <span class="keyword">break</span>;</span><br><span class="line">                number[i*prime[j]] = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span>(i%prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt; n;i++)</span><br><span class="line">            <span class="keyword">if</span>(!number[i]) &#123;</span><br><span class="line">                <span class="comment">// printf("%d\n",i);</span></span><br><span class="line">                p++;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="3、3的幂"><a href="#3、3的幂" class="headerlink" title="3、3的幂"></a>3、3的幂</h1><h2 id="1-传送门-2"><a href="#1-传送门-2" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/25/math/62/" target="_blank" rel="noopener">3的幂</a></p></blockquote><h2 id="2-结果-2"><a href="#2-结果-2" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过85.08%</p><p>注意负数</p></blockquote><div class="note danger"><p><strong>进阶：</strong><br>你能不使用循环或者递归来完成本题吗？</p></div><h2 id="3-代码-2"><a href="#3-代码-2" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPowerOfThree</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(n &lt;= <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">while</span>(n&gt;<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(n%<span class="number">3</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            n /= <span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="4、罗马数字转整数"><a href="#4、罗马数字转整数" class="headerlink" title="4、罗马数字转整数"></a>4、罗马数字转整数</h1><h2 id="1-传送门-3"><a href="#1-传送门-3" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/25/math/63/" target="_blank" rel="noopener">罗马数字转整数</a></p></blockquote><h2 id="2-结果-3"><a href="#2-结果-3" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过81.02%</p><p>代码写的有点丑</p></blockquote><h2 id="3-代码-3"><a href="#3-代码-3" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">romanToInt</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">map</span>&lt;<span class="keyword">char</span>,<span class="keyword">int</span>&gt; m;</span><br><span class="line">        m[<span class="string">'I'</span>] = <span class="number">1</span>; m[<span class="string">'V'</span>] = <span class="number">5</span>;  m[<span class="string">'X'</span>] = <span class="number">10</span>;</span><br><span class="line">        m[<span class="string">'L'</span>] = <span class="number">50</span>;m[<span class="string">'C'</span>] = <span class="number">100</span>;m[<span class="string">'D'</span>] = <span class="number">500</span>;m[<span class="string">'M'</span>] = <span class="number">1000</span>;</span><br><span class="line">        <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> si = s.size();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; si;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i == si<span class="number">-1</span>)</span><br><span class="line">                p += m[s[i]];</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> j = i;</span><br><span class="line">                <span class="keyword">if</span>(m[s[i]] &gt; m[s[i+<span class="number">1</span>]]) &#123;</span><br><span class="line">                    p += m[s[i]];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span>(m[s[i]] == m[s[i+<span class="number">1</span>]]) &#123;</span><br><span class="line">                        <span class="keyword">while</span>(m[s[j]] == m[s[j+<span class="number">1</span>]])&#123;</span><br><span class="line">                            flag++;</span><br><span class="line">                            j++;</span><br><span class="line">                        &#125;</span><br><span class="line">                        i = i+flag<span class="number">-1</span>;</span><br><span class="line">                        p += flag*m[s[j]];</span><br><span class="line">                        flag = <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        p += m[s[i+<span class="number">1</span>]];</span><br><span class="line">                        p -= m[s[i]];</span><br><span class="line">                        i++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Leetcode </category>
          
          <category> 初级算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Leetcode junior others</title>
      <link href="/2018/09/29/Leetcode-junior-others/"/>
      <url>/2018/09/29/Leetcode-junior-others/</url>
      <content type="html"><![CDATA[<blockquote><p>大半夜的又睡不着了。。。</p><p>玩也是玩，再写几道题吧</p></blockquote><a id="more"></a><h1 id="1、位1的个数"><a href="#1、位1的个数" class="headerlink" title="1、位1的个数"></a>1、位1的个数</h1><h2 id="1-传送门"><a href="#1-传送门" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/26/others/64/" target="_blank" rel="noopener">位1的个数</a></p></blockquote><h2 id="2-结果"><a href="#2-结果" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过98.61%</p></blockquote><h2 id="3-代码"><a href="#3-代码" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">hammingWeight</span><span class="params">(<span class="keyword">uint32_t</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!n)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(n%<span class="number">2</span>)</span><br><span class="line">                p++;</span><br><span class="line">            n /= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="2、汉明距离"><a href="#2、汉明距离" class="headerlink" title="2、汉明距离"></a>2、汉明距离</h1><h2 id="1-传送门-1"><a href="#1-传送门-1" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/26/others/65/" target="_blank" rel="noopener">汉明距离</a></p></blockquote><h2 id="2-结果-1"><a href="#2-结果-1" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过89.85%</p><p>一开始竟然读错题了，我还奇怪这么简单的题我都错。。。</p></blockquote><h2 id="3-代码-1"><a href="#3-代码-1" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">hammingDistance</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> p = <span class="number">0</span>,a,b;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">32</span>;i++) &#123;</span><br><span class="line">            a = x%<span class="number">2</span>;    x /= <span class="number">2</span>;</span><br><span class="line">            b = y%<span class="number">2</span>;    y /= <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(a != b) &#123;</span><br><span class="line">                p++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="3、颠倒二进制位"><a href="#3、颠倒二进制位" class="headerlink" title="3、颠倒二进制位"></a>3、颠倒二进制位</h1><h2 id="1-传送门-2"><a href="#1-传送门-2" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/26/others/66/" target="_blank" rel="noopener">颠倒二进制位</a></p></blockquote><h2 id="2-结果-2"><a href="#2-结果-2" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过98.80%</p><p>使用位运算解决</p></blockquote><div class="note danger"><p>question:如果多次调用这个函数，你将如何优化你的算法？<br>一时没想到更好的解决方法，以后或许可以回头再看一看这个问题</p></div><h2 id="3-代码-2"><a href="#3-代码-2" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">uint32_t</span> reverseBits(<span class="keyword">uint32_t</span> n) &#123;</span><br><span class="line">        <span class="keyword">uint32_t</span> m = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">32</span>;i++) &#123;</span><br><span class="line">            m &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">            m = m|(n&amp;<span class="number">1</span>);</span><br><span class="line">            n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> m;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="4、帕斯卡三角形"><a href="#4、帕斯卡三角形" class="headerlink" title="4、帕斯卡三角形"></a>4、帕斯卡三角形</h1><h2 id="1-传送门-3"><a href="#1-传送门-3" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/26/others/67/" target="_blank" rel="noopener">帕斯卡三角形</a></p></blockquote><h2 id="2-结果-3"><a href="#2-结果-3" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过100.00%</p></blockquote><div class="note info"><p>对于二维vector需要事先申请空间</p></div><h2 id="3-代码-3"><a href="#3-代码-3" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; generate(<span class="keyword">int</span> numRows) &#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; v(numRows);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; numRows;i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt;= i;j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(j == <span class="number">0</span> || j == i)</span><br><span class="line">                    v[i].push_back(<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    v[i].push_back(v[i<span class="number">-1</span>][j<span class="number">-1</span>]+v[i<span class="number">-1</span>][j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="5、有效的括号"><a href="#5、有效的括号" class="headerlink" title="5、有效的括号"></a>5、有效的括号</h1><h2 id="1-传送门-4"><a href="#1-传送门-4" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/26/others/68/" target="_blank" rel="noopener">有效的括号</a></p></blockquote><h2 id="2-结果-4"><a href="#2-结果-4" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过100.00%</p><p>代码写的有点丑</p></blockquote><h2 id="3-代码-4"><a href="#3-代码-4" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isValid</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt; v;</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> si = s.size();</span><br><span class="line">        <span class="keyword">if</span>(si == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        v.push_back(s[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; si;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] == <span class="string">'('</span> || s[i] == <span class="string">'['</span> || s[i] == <span class="string">'&#123;'</span>) &#123;</span><br><span class="line">                v.push_back(s[i]);</span><br><span class="line">                flag++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(s[i] == <span class="string">')'</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(s[i]-v[flag] == <span class="number">1</span>) &#123;</span><br><span class="line">                        v.pop_back();</span><br><span class="line">                        flag--;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span>(s[i]-v[flag] == <span class="number">2</span>) &#123;</span><br><span class="line">                        v.pop_back();</span><br><span class="line">                        flag--;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!v.empty())</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="6、缺失数字"><a href="#6、缺失数字" class="headerlink" title="6、缺失数字"></a>6、缺失数字</h1><h2 id="1-传送门-5"><a href="#1-传送门-5" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p> 传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/26/others/69/" target="_blank" rel="noopener">缺失数字</a></p></blockquote><h2 id="2-结果-5"><a href="#2-结果-5" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过48.57%</p><p>时间O(n)</p><p>空间O(1)</p></blockquote><h2 id="3-代码-5"><a href="#3-代码-5" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">missingNumber</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> si = nums.size();</span><br><span class="line">        <span class="keyword">int</span> temp = si;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; si;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            temp ^= i;</span><br><span class="line">            temp ^= nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="6、缺失数字-1"><a href="#6、缺失数字-1" class="headerlink" title="6、缺失数字"></a>6、缺失数字</h1><h2 id="1-传送门-6"><a href="#1-传送门-6" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/26/others/69/" target="_blank" rel="noopener">缺失数字</a></p><h2 id="2-结果-6"><a href="#2-结果-6" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过48.57%</p><p>时间O(n)</p><p>空间O(1)</p></blockquote><h2 id="3-代码-6"><a href="#3-代码-6" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">missingNumber</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> si = nums.size();</span><br><span class="line">        <span class="keyword">int</span> temp = si;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; si;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            temp ^= i;</span><br><span class="line">            temp ^= nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Leetcode </category>
          
          <category> 初级算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode </tag>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>通选课测试题题解</title>
      <link href="/2018/09/27/Test/"/>
      <url>/2018/09/27/Test/</url>
      <content type="html"><![CDATA[<div class="note danger"><p>我的预期是大家能写出三道题来</p><p>这里边可是有原题的呀大胸弟</p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-27/97143198.jpg" alt="1"></p></div><a id="more"></a><h1 id="A-最大值"><a href="#A-最大值" class="headerlink" title="A. 最大值"></a>A. 最大值</h1><blockquote><p>我没记错的话应该是山理工原题</p><p>并且这道题的数据很弱很弱</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    b = <span class="number">-10</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">3</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">        b &lt; a ? b = a : b = b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-水仙花数"><a href="#B-水仙花数" class="headerlink" title="B. 水仙花数"></a>B. 水仙花数</h1><blockquote><ol><li>先本地打表跑一下，然后输出</li><li>提交程序直接跑</li></ol></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b,c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">100</span>;i &lt;= <span class="number">999</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a = i/<span class="number">10</span>;</span><br><span class="line">        b = i%<span class="number">10</span>;</span><br><span class="line">        c = i/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span>(i == a*a*a + b*b*b + c*c*c)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-猴子吃桃"><a href="#C-猴子吃桃" class="headerlink" title="C.猴子吃桃"></a>C.猴子吃桃</h1><blockquote><p>递归练习题</p><p>上节课有讲递归，不过我讲的太烂了</p><p>现在还不会这道题的话可以去看一下上节课的课件</p><p>我在ppt最后应该是留了一个B站视频的链接</p><p>那个up讲的挺好的</p><p>然后自己写几道题练习一下</p><p>ps:这道题也可以使用递推的方法来写</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">monkey</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> day)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n == day)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> (monkey(n+<span class="number">1</span>,day)+<span class="number">1</span>)*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,monkey(<span class="number">1</span>,n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D-逆序输出"><a href="#D-逆序输出" class="headerlink" title="D. 逆序输出"></a>D. 逆序输出</h1><blockquote><p>输出就好了</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">15</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">10</span>;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">10</span>;i &gt;= <span class="number">1</span>;i--)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="E-平均分"><a href="#E-平均分" class="headerlink" title="E. 平均分"></a>E. 平均分</h1><blockquote><p>用结构体来存储学生的学号姓名以及成绩</p><p>然后进行排序</p><p>平局成绩的话遍历一遍就可以算出来了</p></blockquote><div class="note danger"><p>由于学号有的会出现英文字母，所以要用char类型的存储</p><p>这一点在样例也可以看出</p></div><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 万能头文件，不用管这个，用你平时用的头文件就好了</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结构体存储，这个东西还是看课本好一些，讲的比较细致</span></span><br><span class="line"><span class="comment">// 不会用的话就去山理工刷几道题相关的题</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> h[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">int</span> a,b,c,d;</span><br><span class="line">&#125;st[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这个东西就是用来辅助结构体排序的</span></span><br><span class="line"><span class="comment">// 看不懂这个没关系，你可以把这个删掉</span></span><br><span class="line"><span class="comment">// 将下边的sort也删掉，然后自己写一个冒泡排序也可以</span></span><br><span class="line"><span class="comment">// 冒泡排序也不会？那就遍历一遍，用一个变量tmp(随便什么名字都可以)</span></span><br><span class="line"><span class="comment">// 记录一下总成绩最高的那个人的下标</span></span><br><span class="line"><span class="comment">// 输出的时候就输出st[tmp].a~~~~~</span></span><br><span class="line"><span class="comment">// 就搞定了</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span>  a.d &gt; b.d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">double</span> aa,bb,cc;</span><br><span class="line">    <span class="comment">// aa 第一门成绩</span></span><br><span class="line">    <span class="comment">// bb 第二门成绩</span></span><br><span class="line">    <span class="comment">// cc 第三门成绩</span></span><br><span class="line">    <span class="comment">// 先初始化</span></span><br><span class="line">    aa = <span class="number">0.0</span>;</span><br><span class="line">    bb = <span class="number">0.0</span>;</span><br><span class="line">    cc = <span class="number">0.0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %s %d %d %d"</span>,st[i].h,st[i].name,&amp;st[i].a,&amp;st[i].b,&amp;st[i].c);</span><br><span class="line">        <span class="comment">// 先求和</span></span><br><span class="line">        aa += st[i].a;</span><br><span class="line">        bb += st[i].b;</span><br><span class="line">        cc += st[i].c;</span><br><span class="line">        st[i].d = st[i].a+st[i].b+st[i].c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 再除一下就出来平均数了</span></span><br><span class="line">    aa /= n;</span><br><span class="line">    bb /= n;</span><br><span class="line">    cc /= n;</span><br><span class="line">    sort(st+<span class="number">1</span>,st+<span class="number">1</span>+n,cmp);</span><br><span class="line">    <span class="comment">// 保留0位小数 .0f</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.0f %.0f %.0f\n"</span>,aa,bb,cc);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s %s %d %d %d\n"</span>,st[<span class="number">1</span>].h,st[<span class="number">1</span>].name,st[<span class="number">1</span>].a,st[<span class="number">1</span>].b,st[<span class="number">1</span>].c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="F-借教室"><a href="#F-借教室" class="headerlink" title="F. 借教室"></a>F. 借教室</h1><blockquote><p>这道题更难一些</p><p>放在这里也是有些为难大家了</p><p>需要用二分的策略来找，直接模拟的话没有办法通过这道题</p><p>但是这种力气活。。。我实在不想写这道题了。。。<br>太累人。。。</p><p>与今年一道区域赛网络赛的题目有些相似</p><p><a href="http://duny31030.top/2018/09/01/Lpl-and-Energy-saving-Lamps/" target="_blank" rel="noopener">Lpl and Energy-saving Lamps(二分+线段树)</a></p></blockquote><div class="note info"><p><a href="https://www.luogu.org/problemnew/solution/P1083" target="_blank" rel="noopener">这里有一些别人写的题解</a></p></div><h1 id="G-活动安排"><a href="#G-活动安排" class="headerlink" title="G. 活动安排"></a>G. 活动安排</h1><blockquote><p>将活动按照结束时间进行从小到大排序。然后用i代表第i个活动，s[i]代表第i个活动开始时间，f[i]代表第i个活动的结束时间。按照从小到大排序，挑选出结束时间尽量早的活动，并且满足后一个活动的起始时间晚于前一个活动的结束时间，全部找出这些活动就是最大的相容活动子集合。事实上系统一次检查活动i是否与当前已选择的所有活动相容。若相容活动i加入已选择活动的集合中，否则，不选择活动i，而继续下一活动与集合A中活动的相容性。若活动i与之相容，则i成为最近加入集合A的活动，并取代活动j的位置。</p><p>详细分析：<a href="https://www.cnblogs.com/cangT-Tlan/p/6219025.html" target="_blank" rel="noopener">贪心基础入门讲解二——活动安排问题</a></p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,ans,a[<span class="number">10010</span>],b[<span class="number">10010</span>],v[<span class="number">10010</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">scanfcin</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i]&gt;&gt;b[i];</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;b[i])</span><br><span class="line">        swap(a[i],b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">paixu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(b[i]&gt;b[j])</span><br><span class="line">            &#123;</span><br><span class="line">                swap(a[i],a[j]);</span><br><span class="line">                swap(b[i],b[j]);    </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">jisuansuchu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ans=n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&lt;b[i<span class="number">-1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            ans--;</span><br><span class="line">            b[i]=b[i<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    scanfcin();</span><br><span class="line">    paixu();</span><br><span class="line">    jisuansuchu();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU3065病毒侵袭持续中(AC自动机)</title>
      <link href="/2018/09/27/HDU3065/"/>
      <url>/2018/09/27/HDU3065/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=3065" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>小t非常感谢大家帮忙解决了他的上一个问题。然而病毒侵袭持续中。在小t的不懈努力下，他发现了网路中的“万恶之源”。这是一个庞大的病毒网站，他有着好多好多的病毒，但是这个网站包含的病毒很奇怪，这些病毒的特征码很短，而且只包含“英文大写字符”。当然小t好想好想为民除害，但是小t从来不打没有准备的战争。知己知彼，百战不殆，小t首先要做的是知道这个病毒网站特征：包含多少不同的病毒，每种病毒出现了多少次。大家能再帮帮他吗？</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行，一个整数N（1&lt;=N&lt;=1000），表示病毒特征码的个数。<br>接下来N行，每行表示一个病毒特征码，特征码字符串长度在1—50之间，并且只包含“英文大写字符”。任意两个病毒特征码，不会完全相同。<br>在这之后一行，表示“万恶之源”网站源码，源码字符串长度在2000000之内。字符串中字符都是ASCII码可见字符（不包括回车）。</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>按以下格式每行一个，输出每个病毒出现次数。未出现的病毒不需要输出。<br>病毒特征码: 出现次数<br>冒号后有一个空格，按病毒特征码的输入顺序进行输出。</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>3<br>AA<br>BB<br>CC<br>ooxxCC%dAAAoen….END</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>AA: 2<br>CC: 1</p></blockquote><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><blockquote><p>题目描述中没有被提及的所有情况都应该进行考虑。比如两个病毒特征码可能有相互包含或者有重叠的特征码段。<br>计数策略也可一定程度上从Sample中推测。</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>跟<a href="http://duny31030.top/2018/09/02/HDU2896/" target="_blank" rel="noopener">病毒侵袭</a>实际上差不太多，也不知道我当时为什么写完病毒侵袭之后看了看这道题就放弃了。</p><p>一开始很奇怪的RE了无数次，也不知道哪里写搓了，正在要绝望的时候突然AC了···</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ==============================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  C.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.hdu.edu.cn/showproblem.php?pid=3065</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/09/26 23时12分29秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ==============================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1005</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> NN = <span class="number">2001000</span>;</span><br><span class="line"><span class="keyword">char</span> m[NN];</span><br><span class="line"><span class="keyword">char</span> vir[N][<span class="number">55</span>];</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> son[<span class="number">27</span>];</span><br><span class="line">    <span class="keyword">int</span> fail;</span><br><span class="line">    <span class="keyword">int</span> count;</span><br><span class="line">    <span class="keyword">int</span> number;</span><br><span class="line">&#125;ac[<span class="number">100</span>*N];</span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    clr(a,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">50000</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(ac[i].son,<span class="number">0</span>,<span class="keyword">sizeof</span> ac[i].son);</span><br><span class="line">        ac[i].count = <span class="number">0</span>;</span><br><span class="line">        ac[i].fail = <span class="number">0</span>;</span><br><span class="line">        ac[i].number = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">char</span> *s,<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">int</span> now = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> tmp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        tmp = s[i]-<span class="string">'A'</span>;</span><br><span class="line">        <span class="keyword">if</span>(ac[now].son[tmp] == <span class="number">0</span>)</span><br><span class="line">            ac[now].son[tmp] = ++tot;</span><br><span class="line">        now = ac[now].son[tmp];</span><br><span class="line">    &#125;</span><br><span class="line">    ac[now].count++;</span><br><span class="line">    ac[now].number = num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert1</span><span class="params">(<span class="keyword">char</span> *s,<span class="keyword">int</span> id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">int</span> now = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> tmp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        tmp = s[i]-<span class="string">'A'</span>;</span><br><span class="line">        <span class="keyword">if</span>(ac[now].son[tmp] == <span class="number">0</span>)</span><br><span class="line">            ac[now].son[tmp] = ++tot;</span><br><span class="line">        now = ac[now].son[tmp];</span><br><span class="line">    &#125;</span><br><span class="line">    ac[now].count++;</span><br><span class="line">    ac[now].number = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MakeFail</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">26</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ac[<span class="number">0</span>].son[i] != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ac[ac[<span class="number">0</span>].son[i]].fail = <span class="number">0</span>;</span><br><span class="line">            q.push(ac[<span class="number">0</span>].son[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">26</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ac[u].son[i] != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ac[ac[u].son[i]].fail = ac[ac[u].fail].son[i];</span><br><span class="line">                q.push(ac[u].son[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                ac[u].son[i] = ac[ac[u].fail].son[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">query</span><span class="params">(<span class="keyword">char</span> *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">int</span> now = <span class="number">0</span>,tmp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        tmp = s[i]-<span class="string">'A'</span>;</span><br><span class="line">        <span class="keyword">if</span>(tmp &lt; <span class="number">0</span> || tmp &gt; <span class="number">25</span>)</span><br><span class="line">            tmp = <span class="number">26</span>;</span><br><span class="line">        now = ac[now].son[tmp];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> t = now;t &amp;&amp; ac[t].count != <span class="number">-1</span>;t = ac[t].fail)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ac[t].number &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                a[ac[t].number]++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// ans += ac[t].count;</span></span><br><span class="line">            <span class="comment">// ac[t].count = -1;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// return ans;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        init();</span><br><span class="line">        rep(i,<span class="number">1</span>,n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,vir[i]);</span><br><span class="line">            Insert1(vir[i],i);</span><br><span class="line">        &#125;</span><br><span class="line">        ac[<span class="number">0</span>].fail = <span class="number">0</span>;</span><br><span class="line">        MakeFail();</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,m);</span><br><span class="line">        query(m);</span><br><span class="line">        rep(i,<span class="number">1</span>,n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i])</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s: %d\n"</span>,vir[i],a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 字符串 </category>
          
          <category> AC自动机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> AC自动机 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ 2031 Building a Space Station</title>
      <link href="/2018/09/26/POJ-2031-Building-a-Space-Station/"/>
      <url>/2018/09/26/POJ-2031-Building-a-Space-Station/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://poj.org/problem?id=2031" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>You are a member of the space station engineering team, and are assigned a task in the construction process of the station. You are expected to write a computer program to complete the task.<br>The space station is made up with a number of units, called cells. All cells are sphere-shaped, but their sizes are not necessarily uniform. Each cell is fixed at its predetermined position shortly after the station is successfully put into its orbit. It is quite strange that two cells may be touching each other, or even may be overlapping. In an extreme case, a cell may be totally enclosing another one. I do not know how such arrangements are possible. </p><a id="more"></a><p>All the cells must be connected, since crew members should be able to walk from any cell to any other cell. They can walk from a cell A to another cell B, if, (1) A and B are touching each other or overlapping, (2) A and B are connected by a `corridor’, or (3) there is a cell C such that walking from A to C, and also from B to C are both possible. Note that the condition (3) should be interpreted transitively. </p><p>You are expected to design a configuration, namely, which pairs of cells are to be connected with corridors. There is some freedom in the corridor configuration. For example, if there are three cells A, B and C, not touching nor overlapping each other, at least three plans are possible in order to connect all three cells. The first is to build corridors A-B and A-C, the second B-C and B-A, the third C-A and C-B. The cost of building a corridor is proportional to its length. Therefore, you should choose a plan with the shortest total length of the corridors. </p><p>You can ignore the width of a corridor. A corridor is built between points on two cells’ surfaces. It can be made arbitrarily long, but of course the shortest one is chosen. Even if two corridors A-B and C-D intersect in space, they are not considered to form a connection path between (for example) A and C. In other words, you may consider that two corridors never intersect. </p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The input consists of multiple data sets. Each data set is given in the following format. </p><p>n<br>x1 y1 z1 r1<br>x2 y2 z2 r2<br>…<br>xn yn zn rn </p><p>The first line of a data set contains an integer n, which is the number of cells. n is positive, and does not exceed 100. </p><p>The following n lines are descriptions of cells. Four values in a line are x-, y- and z-coordinates of the center, and radius (called r in the rest of the problem) of the sphere, in this order. Each value is given by a decimal fraction, with 3 digits after the decimal point. Values are separated by a space character. </p><p>Each of x, y, z and r is positive and is less than 100.0. </p><p>The end of the input is indicated by a line containing a zero. </p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each data set, the shortest total length of the corridors should be printed, each in a separate line. The printed values should have 3 digits after the decimal point. They may not have an error greater than 0.001. </p><p>Note that if no corridors are necessary, that is, if all the cells are connected without corridors, the shortest total length of the corridors is 0.000. </p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>3<br>10.000 10.000 50.000 10.000<br>40.000 10.000 50.000 10.000<br>40.000 40.000 50.000 10.000<br>2<br>30.000 30.000 30.000 20.000<br>40.000 40.000 40.000 20.000<br>5<br>5.729 15.143 3.996 25.837<br>6.013 14.372 4.818 10.671<br>80.115 63.292 84.477 15.120<br>64.095 80.924 70.029 14.881<br>39.472 85.116 71.369 5.553</p><p>0</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>20.000<br>0.000<br>73.834</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>稍微难了一丢丢的最小生成树<br>还是用prime比较顺手</p><p>只需要注意下判断距离就好了</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  C.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://poj.org/problem?id=2031</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/09/26 16时16分00秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">no</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y,z,r;</span><br><span class="line">&#125;d[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,now,tot;</span><br><span class="line"><span class="keyword">double</span> ans,mmin;</span><br><span class="line"><span class="keyword">double</span> cost[N][N];</span><br><span class="line"><span class="keyword">double</span> v2[N];</span><br><span class="line"><span class="keyword">bool</span> v1[N];</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> t1,t2,t3;</span><br><span class="line">    t1 = (d[i].x-d[j].x);   t1 = t1*t1;</span><br><span class="line">    t2 = (d[i].y-d[j].y);   t2 = t2*t2;</span><br><span class="line">    t3 = (d[i].z-d[j].z);   t3 = t3*t3;</span><br><span class="line">    t1 = t1+t2+t3;</span><br><span class="line">    t1 = <span class="built_in">sqrt</span>(t1);</span><br><span class="line">    t1 = t1-(d[i].r+d[j].r);</span><br><span class="line">    <span class="keyword">if</span>(t1<span class="number">-0.0</span> &lt; eps)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">return</span> t1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    clr(v1,<span class="number">0</span>);</span><br><span class="line">    rep(i,<span class="number">1</span>,n)</span><br><span class="line">        rep(j,i+<span class="number">1</span>,n)</span><br><span class="line">            cost[i][j] = cost[j][i] = INF;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">prim</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    v1[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    ans = <span class="number">0.0</span>;</span><br><span class="line">    tot = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        v2[i] = cost[<span class="number">1</span>][i];</span><br><span class="line">    <span class="keyword">while</span>(tot &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        mmin = INF;</span><br><span class="line">        tot++;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!v1[i] &amp;&amp; mmin-v2[i] &gt; eps)</span><br><span class="line">            &#123;</span><br><span class="line">                mmin = v2[i];</span><br><span class="line">                now = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans += mmin;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!v1[i] &amp;&amp; v2[i]-cost[now][i] &gt; eps)</span><br><span class="line">                v2[i] = cost[now][i];</span><br><span class="line">        &#125;</span><br><span class="line">        v1[now] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        init();</span><br><span class="line">        rep(i,<span class="number">1</span>,n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lf %lf %lf %lf"</span>,&amp;d[i].x,&amp;d[i].y,&amp;d[i].z,&amp;d[i].r);</span><br><span class="line">        &#125;</span><br><span class="line">        rep(i,<span class="number">1</span>,n)</span><br><span class="line">        &#123;</span><br><span class="line">            rep(j,i+<span class="number">1</span>,n)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">double</span> tmp = judge(i,j);</span><br><span class="line">                cost[i][j] = cost[j][i] = tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.3f\n"</span>,prim());</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 最小生成树 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 最小生成树 </tag>
            
            <tag> POJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ1251 Jungle Roads(最小生成树模板题)</title>
      <link href="/2018/09/26/POJ1251-Jungle-Roads/"/>
      <url>/2018/09/26/POJ1251-Jungle-Roads/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://poj.org/problem?id=1251" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p><img src="http://poj.org/images/1251_1.jpg" alt="t"></p></blockquote><a id="more"></a><blockquote><p>The Head Elder of the tropical island of Lagrishan has a problem. A burst of foreign aid money was spent on extra roads between villages some years ago. But the jungle overtakes roads relentlessly, so the large road network is too expensive to maintain. The Council of Elders must choose to stop maintaining some roads. The map above on the left shows all the roads in use now and the cost in aacms per month to maintain them. Of course there needs to be some way to get between all the villages on maintained roads, even if the route is not as short as before. The Chief Elder would like to tell the Council of Elders what would be the smallest amount they could spend in aacms per month to maintain roads that would connect all the villages. The villages are labeled A through I in the maps above. The map on the right shows the roads that could be maintained most cheaply, for 216 aacms per month. Your task is to write a program that will solve such problems. </p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The input consists of one to 100 data sets, followed by a final line containing only 0. Each data set starts with a line containing only a number n, which is the number of villages, 1 &lt; n &lt; 27, and the villages are labeled with the first n letters of the alphabet, capitalized. Each data set is completed with n-1 lines that start with village labels in alphabetical order. There is no line for the last village. Each line for a village starts with the village label followed by a number, k, of roads from this village to villages with labels later in the alphabet. If k is greater than 0, the line continues with data for each of the k roads. The data for each road is the village label for the other end of the road followed by the monthly maintenance cost in aacms for the road. Maintenance costs will be positive integers less than 100. All data fields in the row are separated by single blanks. The road network will always allow travel between all the villages. The network will never have more than 75 roads. No village will have more than 15 roads going to other villages (before or after in the alphabet). In the sample input below, the first data set goes with the map above. </p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>The output is one integer per line for each data set: the minimum cost in aacms per month to maintain a road system that connect all the villages. Caution: A brute force solution that examines every possible set of roads will not finish within the one minute time limit. </p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>9<br>A 2 B 12 I 25<br>B 3 C 10 H 40 I 8<br>C 2 D 18 G 55<br>D 1 E 44<br>E 2 F 60 G 38<br>F 0<br>G 1 H 35<br>H 1 I 35<br>3<br>A 2 B 10 C 40<br>B 1 C 20<br>0</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>216<br>30</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>最小生成树的模板题<br>只需要对输入进行处理</p><p>但是仍旧踩了坑</p></blockquote><div class="note danger"><p>碰到数据范围比较小的就直接开大数组，避免RE</p><p>涉及到字符的输入用cin比较保险，避免特殊情况用scanf出错</p></div><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="Kruskal算法"><a href="#Kruskal算法" class="headerlink" title="Kruskal算法"></a>Kruskal算法</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ===============================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  A.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://poj.org/problem?id=1251</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/09/26 11时47分40秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ===============================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span><span class="keyword">int</span> u,v,w;&#125;e[<span class="number">105</span>];</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">105</span>],n,m,ans,tmp,eu,ev,cnt,temp;</span><br><span class="line"><span class="keyword">char</span> start,en;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;<span class="keyword">return</span> a.w&lt;b.w;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x != f[x])</span><br><span class="line">        x = f[x] = f[f[x]];</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kruskal</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cnt = <span class="number">0</span>;</span><br><span class="line">    ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;= n;i++)   f[i] = i;</span><br><span class="line">    sort(e,e+m,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        eu = find(e[i].u);  ev = find(e[i].v);</span><br><span class="line">        <span class="keyword">if</span>(eu == ev)    <span class="keyword">continue</span>;</span><br><span class="line">        ans += e[i].w;</span><br><span class="line">        f[ev] = eu;</span><br><span class="line">        <span class="keyword">if</span>(++cnt == n<span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="comment">// scanf("%d",&amp;n);</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        m = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n<span class="number">-1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// scanf("%c %d",&amp;start,&amp;tmp);</span></span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; start &gt;&gt; tmp;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; tmp;j++,m++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// scanf("%c %d",&amp;en,&amp;temp);</span></span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; en &gt;&gt; temp;</span><br><span class="line">                eu = start-<span class="string">'A'</span>,ev = en-<span class="string">'A'</span>;</span><br><span class="line">                e[m].u = eu,e[m].v = ev,e[m].w = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// printf("%d\n",kruskal());</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; kruskal() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Prime算法"><a href="#Prime算法" class="headerlink" title="Prime算法"></a>Prime算法</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  A-2.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://poj.org/problem?id=1251</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/09/26 13时21分21秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="keyword">int</span> cost[N][N];</span><br><span class="line"><span class="keyword">int</span> mmin,n,m,tot,ans,now,eu,ev;</span><br><span class="line"><span class="keyword">int</span> v2[N];</span><br><span class="line"><span class="keyword">bool</span> v1[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    clr(v1,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;= n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt;= n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i == j)  cost[i][j] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span>    cost[i][j] = INF;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prim</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 找到与1节点相连的边进行标记</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v2[i] = cost[<span class="number">1</span>][i];</span><br><span class="line">    &#125;</span><br><span class="line">    v1[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    tot = <span class="number">1</span>;</span><br><span class="line">    ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(tot &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        mmin = INF;</span><br><span class="line">        tot++;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!v1[i] &amp;&amp; v2[i] &lt; mmin)</span><br><span class="line">            &#123;</span><br><span class="line">                mmin = v2[i];</span><br><span class="line">                now = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans += mmin;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(v2[i] &gt; cost[now][i] &amp;&amp; !v1[i])</span><br><span class="line">                v2[i] = cost[now][i];</span><br><span class="line">        &#125;</span><br><span class="line">        v1[now] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> tmp,temp;</span><br><span class="line">    <span class="keyword">char</span> s,e;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">0</span>)  <span class="keyword">break</span>;</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; s &gt;&gt; tmp;</span><br><span class="line">            eu = s-<span class="string">'A'</span>+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(tmp--)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; e &gt;&gt; temp;</span><br><span class="line">                ev = e-<span class="string">'A'</span>+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(cost[eu][ev] &gt; temp)</span><br><span class="line">                &#123;</span><br><span class="line">                    cost[eu][ev] = cost[ev][eu] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,prim());</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 最小生成树 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 最小生成树 </tag>
            
            <tag> POJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>测试赛题解</title>
      <link href="/2018/09/24/QLUOJ-TEST/"/>
      <url>/2018/09/24/QLUOJ-TEST/</url>
      <content type="html"><![CDATA[<h1 id="A-中秋节快乐！"><a href="#A-中秋节快乐！" class="headerlink" title="A. 中秋节快乐！"></a>A. 中秋节快乐！</h1><blockquote><p>签到题，没什么好说的</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Happy Mid-autumn Day!\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="B-字串查找"><a href="#B-字串查找" class="headerlink" title="B. 字串查找"></a>B. 字串查找</h1><blockquote><p>由于此题数据量较小，所以可以用最暴力的方法查找</p><p>思路：<br>①如果当前字符匹配成功（即S[i] == P[j]），则i++，j++</p><p>②如果失配（即S[i]! = P[j]），令i = i - (j - 1)，j = 0 .相当于每次匹配失败时，i 回溯，j 被置为0。</p><p>详细分析见<a href="https://www.cnblogs.com/Kevin-mao/p/5764726.html" target="_blank" rel="noopener">字符串匹配—暴力匹配法</a></p><p>注意：这道题并不涉及算法，不要被博客标题误导而认为这就是算法</p><p>下面我用C语言实现一下</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">char</span> a[N],b[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 输入两个字符串</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %s"</span>,a,b);</span><br><span class="line">    <span class="comment">// 用alen,blen两个变量来保存两个字符串的长度</span></span><br><span class="line">    <span class="keyword">int</span> alen = <span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="keyword">int</span> blen = <span class="built_in">strlen</span>(b);</span><br><span class="line">    <span class="comment">// i保存字符串a匹配到的位置</span></span><br><span class="line">    <span class="comment">// j保存字符串b匹配到的位置</span></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>,j = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 如果两个字符串都没到结尾则一直循环</span></span><br><span class="line">    <span class="keyword">while</span>(i &lt; alen &amp;&amp; j &lt; blen)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 如果匹配失败</span></span><br><span class="line">        <span class="keyword">if</span>(a[i] != b[j])</span><br><span class="line">        &#123;</span><br><span class="line">            i = i-(j<span class="number">-1</span>);</span><br><span class="line">            j = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">        <span class="comment">// 如果匹配成功</span></span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 如果b字符串匹配到了末尾，则说明字符串在字符串a中全部匹配到了</span></span><br><span class="line">    <span class="keyword">if</span>(j == blen)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Y\n"</span>);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"N\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-分月饼"><a href="#C-分月饼" class="headerlink" title="C. 分月饼"></a>C. 分月饼</h1><blockquote><p>最大可能的k比较好找</p><p>我们只需要要求出哪个小朋友手中的月饼最多，然后将m个月饼全都给他，那么结果就求出来了</p><p>最小可能的k值如何求？</p><p>还是先求出小朋友手中最多的月饼数量   —》记为tmp</p><p>我们首先尝试不给这个小朋友，将月饼分给其他人，看看这样分下去能不能分完m个，如过可以的话，那么“最小可能的k值” 便是tmp;</p><p>如果没分完怎么办？剩下的肯定要平均的分下去才能保证求得最小可能的k值</p><p>假设没分完的话省下的月饼数为a;</p><p>那么还能完整的分几次呢？（完整的：每个小朋友分一个）使用除法就能很简便的求出来 还可以分a/n次</p><p>那么再考虑，完整的分了a/n次以后最小的k值为多少？<br>应该是tmp+a/n；</p><p>如果此时手中仍有月饼没分完呢？肯定还要给小朋友分下去，但是肯定不能完整的分一次了也就是说将最后这些分完以后最下的k值肯定要+1，所以答案为tmp+a/n+1;</p><p>那么问题来了，如何判断手中月饼仍没分完？(a%n)就好了，如果a是n的倍数，那么结果为0，否则会是小于n的正整数，至于这个正整数是几我们无需担心。</p><p>代码表示的话可以这样进行判断</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(a%n != <span class="number">0</span>)</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">200</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 分别表示最小的可能的k 最大的可能的k</span></span><br><span class="line">    <span class="keyword">int</span> minn,mmax;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    <span class="comment">// 这是一个排序函数，大家可以无视他，只需要知道它的作用是对数组中输入的数进行从小到大排序，这样我们就很容易的找到其中最大的值，即最后一个</span></span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">    <span class="keyword">int</span> tmp = m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        tmp -= (a[n]-a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 如果tmp为0或者是负数，肯定表示分到最后我们不需要再额外的分几圈</span></span><br><span class="line">    <span class="keyword">if</span>(tmp &lt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        minn = a[n];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        minn = a[n]+tmp/n;</span><br><span class="line">        <span class="keyword">if</span>(tmp%n != <span class="number">0</span>)</span><br><span class="line">            minn++;</span><br><span class="line">    &#125;</span><br><span class="line">    mmax = a[n]+m;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,minn,mmax);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D-活动安排"><a href="#D-活动安排" class="headerlink" title="D. 活动安排"></a>D. 活动安排</h1><blockquote><p>这道题为贪心算法的简单题</p><font color="red">如果暂时看不明白可以暂时搁置，多写一下基础的题目，回头再看这个</font><p>将活动按照结束时间进行从小到大排序。然后用i代表第i个活动，s[i]代表第i个活动开始时间，f[i]代表第i个活动的结束时间。按照从小到大排序，挑选出结束时间尽量早的活动，并且满足后一个活动的起始时间晚于前一个活动的结束时间，全部找出这些活动就是最大的相容活动子集合。事实上系统一次检查活动i是否与当前已选择的所有活动相容。若相容活动i加入已选择活动的集合中，否则，不选择活动i，而继续下一活动与集合A中活动的相容性。若活动i与之相容，则i成为最近加入集合A的活动，并取代活动j的位置。</p><p>详细分析：<a href="https://www.cnblogs.com/cangT-Tlan/p/6219025.html" target="_blank" rel="noopener">贪心基础入门讲解二——活动安排问题</a></p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,ans,a[<span class="number">10010</span>],b[<span class="number">10010</span>],v[<span class="number">10010</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">scanfcin</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i]&gt;&gt;b[i];</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;b[i])</span><br><span class="line">        swap(a[i],b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">paixu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(b[i]&gt;b[j])</span><br><span class="line">            &#123;</span><br><span class="line">                swap(a[i],a[j]);</span><br><span class="line">                swap(b[i],b[j]);    </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">jisuansuchu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ans=n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&lt;b[i<span class="number">-1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            ans--;</span><br><span class="line">            b[i]=b[i<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    scanfcin();</span><br><span class="line">    paixu();</span><br><span class="line">    jisuansuchu();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="E-全排列"><a href="#E-全排列" class="headerlink" title="E. 全排列"></a>E. 全排列</h1><blockquote><p>算是练习递归用的题目</p><p>如果理解递归的话还是不难写的，建议不了解递归的同学查一下相关资料再回头看这道题</p><p>可以在网上找一些资料</p><p>关键字:”递归 n的全排列”</p><p>在这里放一个<a href="https://blog.csdn.net/axiqia/article/details/50967863" target="_blank" rel="noopener">链接</a></p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;  </span><br><span class="line"><span class="built_in">string</span> s[<span class="number">105</span>];</span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">char</span> temp;</span><br><span class="line">temp = str[a];</span><br><span class="line">str[a] = str[b];</span><br><span class="line">str[b] = temp;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isSwap</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> m)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=k;i&lt;m;i++)  </span><br><span class="line">    <span class="keyword">if</span>(str[m]==str[i])  </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;  </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Perm</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> m)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(k==m)  </span><br><span class="line">    &#123;  </span><br><span class="line">       <span class="comment">// cout&lt;&lt;s&lt;&lt;endl;  </span></span><br><span class="line">        s[sum++] = str;</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=k;i&lt;=m;i++)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">if</span>(isSwap(k,i))  </span><br><span class="line">            &#123;  </span><br><span class="line">                swap(k,i);  </span><br><span class="line">                Perm(k+<span class="number">1</span>,m);  </span><br><span class="line">                swap(k,i);  </span><br><span class="line">            &#125;     </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">     </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;str)  </span><br><span class="line">    &#123;  </span><br><span class="line">        sum=<span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">int</span> len=str.length();  </span><br><span class="line">        Perm(<span class="number">0</span>,len<span class="number">-1</span>); </span><br><span class="line">        sort(s,s+sum);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;sum;i++)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;s[i]&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;      </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="F-A-B？"><a href="#F-A-B？" class="headerlink" title="F. A + B？"></a>F. A + B？</h1><blockquote><p>直接按照题意来写就可以</p><p>注意对输入数据的处理</p><p>while(scanf(“%d %d %d”,&amp;n,&amp;m,&amp;k) &amp;&amp; (n!= 0 &amp;&amp; m != 0))</p><p>注意这么写是错误的  试一下1 0 1这组数据就知道了</p><p>具体为什么错 好好捋一下逻辑关系  </p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b,k,i;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;a,&amp;b,&amp;k)!=EOF) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a==<span class="number">0</span> &amp;&amp; b==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">bool</span> equal = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;k;i++) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((a%<span class="number">10</span>) == (b%<span class="number">10</span>))</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                equal = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(equal)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a+b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="G-吃月饼游戏"><a href="#G-吃月饼游戏" class="headerlink" title="G. 吃月饼游戏"></a>G. 吃月饼游戏</h1><blockquote><p>典型的巴什博弈问题</p><p>资料: <a href="https://blog.csdn.net/xuzengqiang/article/details/7763635" target="_blank" rel="noopener">取石子游戏之巴什博奕</a></p><p>不放代码了，看明白这个以后自己尝试写一下，比较简单，没有任何变形</p></blockquote><h1 id="H-馋嘴的小明"><a href="#H-馋嘴的小明" class="headerlink" title="H. 馋嘴的小明"></a>H. 馋嘴的小明</h1><blockquote><p>树状数组模板题</p><p>新生可跳过</p><p><img src="http://ww1.rs.fanjian.net/c/e7/c3/68/a6e79a5afec31d4e84689381d86d1295.jpg" alt="t"></p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e6</span>;</span><br><span class="line"></span><br><span class="line">ll sum[N];</span><br><span class="line"><span class="keyword">int</span> n,q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(ll p,ll x)</span>   </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(p &lt;= n)</span><br><span class="line">        sum[p] += x,p += p&amp;(-p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 求位置p的前缀和</span></span><br><span class="line"><span class="function">ll <span class="title">ask</span><span class="params">(ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">        res += sum[p],p -= p&amp;(-p);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 区间求和</span></span><br><span class="line"><span class="function">ll <span class="title">range_ask</span><span class="params">(ll l,ll r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ask(r)-ask(l<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line">ll tmp;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;q);</span><br><span class="line">    rep(i,<span class="number">1</span>,n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;tmp);</span><br><span class="line">        add(i,tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    ll l,r;</span><br><span class="line">    rep(i,<span class="number">1</span>,q)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;tmp,&amp;l,&amp;r);</span><br><span class="line">        <span class="keyword">if</span>(tmp == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            add(l,r);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,range_ask(l,r));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="I-打印数字图形"><a href="#I-打印数字图形" class="headerlink" title="I. 打印数字图形"></a>I. 打印数字图形</h1><blockquote><p>找到规律以后就很容易解决了，具体的思路看代码注释就好了</p><font color="red">OJ上的题目为多行输入，请自行修改代码的输入部分</font></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;=n; i++)<span class="comment">/*打印图形上半部，即前n行*/</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n-i;j++)<span class="comment">//先打印n-i个空格</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=i;j++)<span class="comment">//再打印从1到i</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>,j);</span><br><span class="line">        <span class="keyword">for</span>(j=i<span class="number">-1</span>;j&gt;<span class="number">0</span>;j--)<span class="comment">//最后打印i-1递减到1</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>,j);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);<span class="comment">//一行打印完要换行</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i=n<span class="number">-1</span>; i&gt;<span class="number">0</span>; i--)<span class="comment">/*打印图形下半部，i由n-1递减到1即可*/</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n-i;j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=i;j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>,j);</span><br><span class="line">        <span class="keyword">for</span>(j=i<span class="number">-1</span>;j&gt;<span class="number">0</span>;j--)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>,j);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="J-子串查找-加强版"><a href="#J-子串查找-加强版" class="headerlink" title="J.子串查找(加强版)"></a>J.子串查找(加强版)</h1><blockquote><p>KMP算法模板题</p><p>不要求新生掌握，有些超过知识范围</p><p><img src="http://ww1.rs.fanjian.net/c/e7/c3/68/a6e79a5afec31d4e84689381d86d1295.jpg" alt="t"></p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> Next[N];</span><br><span class="line"><span class="keyword">char</span> S[N],T[N];   <span class="comment">// S:主串  T:模式串</span></span><br><span class="line"><span class="keyword">int</span> slen,tlen;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getNext</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j,k;</span><br><span class="line">    j = <span class="number">0</span>;  k = <span class="number">-1</span>; Next[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(j &lt; tlen)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(k == <span class="number">-1</span> || T[j] == T[k])</span><br><span class="line">            Next[++j] = ++k;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            k = Next[k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP_Index</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>,j = <span class="number">0</span>;</span><br><span class="line">    getNext();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(i &lt; slen &amp;&amp; j &lt; tlen)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(j == <span class="number">-1</span> || S[i] == T[j])</span><br><span class="line">        &#123;</span><br><span class="line">            i++;    j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            j = Next[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j == tlen)</span><br><span class="line">        <span class="keyword">return</span> i-tlen;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP_Count</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> i,j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(slen == <span class="number">1</span> &amp;&amp; tlen == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(S[<span class="number">0</span>] == T[<span class="number">0</span>])</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    getNext();</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; slen;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(j &gt; <span class="number">0</span> &amp;&amp; S[i] != T[j])</span><br><span class="line">            j = Next[j];</span><br><span class="line">        <span class="keyword">if</span>(S[i] == T[j])</span><br><span class="line">            j++;</span><br><span class="line">        <span class="keyword">if</span>(j == tlen)</span><br><span class="line">        &#123;</span><br><span class="line">            ans++;</span><br><span class="line">            j = Next[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; S &gt;&gt; T;</span><br><span class="line">    slen = <span class="built_in">strlen</span>(S);</span><br><span class="line">    tlen = <span class="built_in">strlen</span>(T);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,KMP_Count());</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="K-小糊涂鬼小明"><a href="#K-小糊涂鬼小明" class="headerlink" title="K. 小糊涂鬼小明"></a>K. 小糊涂鬼小明</h1><blockquote><p>简单的A+B</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a+b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>HDU1308 Is It A Tree?(简单并查集)</title>
      <link href="/2018/09/24/HDU1308-Is-It-A-Tree/"/>
      <url>/2018/09/24/HDU1308-Is-It-A-Tree/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://poj.org/problem?id=1308" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>A tree is a well-known data structure that is either empty (null, void, nothing) or is a set of one or more nodes connected by directed edges between nodes satisfying the following properties. </p><a id="more"></a><p>There is exactly one node, called the root, to which no directed edges point.<br>Every node except the root has exactly one edge pointing to it.<br>There is a unique sequence of directed edges from the root to each node.<br>For example, consider the illustrations below, in which nodes are represented by circles and edges are represented by lines with arrowheads. The first two of these are trees, but the last is not. </p><p><img src="http://poj.org/images/1308_1.jpg" alt="图"></p><p>In this problem you will be given several descriptions of collections of nodes connected by directed edges. For each of these you are to determine if the collection satisfies the definition of a tree or not.</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The input will consist of a sequence of descriptions (test cases) followed by a pair of negative integers. Each test case will consist of a sequence of edge descriptions followed by a pair of zeroes Each edge description will consist of a pair of integers; the first integer identifies the node from which the edge begins, and the second integer identifies the node to which the edge is directed. Node numbers will always be greater than zero.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test case display the line “Case k is a tree.” or the line “Case k is not a tree.”, where k corresponds to the test case number (they are sequentially numbered starting with 1).</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>6 8  5 3  5 2  6 4<br>5 6  0 0</p><p>8 1  7 3  6 2  8 9  7 5<br>7 4  7 8  7 6  0 0</p><p>3 8  6 8  6 4<br>5 3  5 6  5 2  0 0<br>-1 -1</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>Case 1 is a tree.<br>Case 2 is a tree.<br>Case 3 is not a tree.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>跟<a href="http://duny31030.top/2018/09/24/HDU-1272/#more" target="_blank" rel="noopener">HDU1272</a>类似</p><p>写错find()坑了自己半个小时</p><p>注意坑点</p><ul><li>0 0 也算一棵树</li><li>不要忽略每一行输出的最后那个’.’</li></ul></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ==============================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  N.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://poj.org/problem?id=1308</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/09/24 02时59分21秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ==============================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="keyword">int</span> f[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(f[x] != x)</span><br><span class="line">    &#123;</span><br><span class="line">        f[x] = find(f[x]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        f[i] = i;</span><br><span class="line">        vis[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> ca = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="number">-1</span>;</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;x,&amp;y) &amp;&amp; (x != <span class="number">-1</span> &amp;&amp; y != <span class="number">-1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(x == <span class="number">0</span> &amp;&amp; y == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// printf("tmp = %d !!!\n",tmp);</span></span><br><span class="line">            <span class="keyword">if</span>(tmp != <span class="number">-1</span>)</span><br><span class="line">                tmp = find(tmp);</span><br><span class="line">            <span class="comment">// printf("tmp = %d !!!\n",tmp);</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(vis[i])</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(tmp != find(i))</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">// printf("%d\n",i);</span></span><br><span class="line">                        flag = <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Case %d "</span>,ca++);</span><br><span class="line">            <span class="keyword">if</span>(flag)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"is not a tree.\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"is a tree.\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">            tmp = <span class="number">-1</span>;</span><br><span class="line">            init();</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// printf("x = %d y = %d\n",x,y);</span></span><br><span class="line">        <span class="keyword">if</span>(tmp == <span class="number">-1</span>)</span><br><span class="line">            tmp = x;</span><br><span class="line">        <span class="comment">// printf("tmp = %d\n",tmp);</span></span><br><span class="line">        <span class="keyword">int</span> fx = find(x);</span><br><span class="line">        <span class="keyword">int</span> fy = find(y);</span><br><span class="line">        <span class="comment">// printf("fx = %d fy = %d\n",fx,fy);</span></span><br><span class="line">        vis[x] = <span class="number">1</span>;</span><br><span class="line">        vis[y] = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// printf("vis[%d] = %d vis[%d] = %d\n",x,vis[x],y,vis[y]);</span></span><br><span class="line">        <span class="keyword">if</span>(fx == fy)</span><br><span class="line">        &#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// printf("f[%d] = %d\n",fy,fx);</span></span><br><span class="line">            f[fy] = fx;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 并查集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
            <tag> HUD </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU 1272 小希的迷宫(简单并查集)</title>
      <link href="/2018/09/24/HDU-1272/"/>
      <url>/2018/09/24/HDU-1272/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1272" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>上次Gardon的迷宫城堡小希玩了很久（见Problem B），现在她也想设计一个迷宫让Gardon来走。但是她设计迷宫的思路不一样，首先她认为所有的通道都应该是双向连通的，就是说如果有一个通道连通了房间A和B，那么既可以通过它从房间A走到房间B，也可以通过它从房间B走到房间A，为了提高难度，小希希望任意两个房间有且仅有一条路径可以相通（除非走了回头路）。小希现在把她的设计图给你，让你帮忙判断她的设计图是否符合她的设计思路。比如下面的例子，前两个是符合条件的，但是最后一个却有两种方法从5到达8。 </p><p><img src="http://acm.hdu.edu.cn/data/images/C20-1007-1.jpg" alt="迷宫"></p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>输入包含多组数据，每组数据是一个以0 0结尾的整数对列表，表示了一条通道连接的两个房间的编号。房间的编号至少为1，且不超过100000。每两组数据之间有一个空行。<br>整个文件以两个-1结尾。</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>对于输入的每一组数据，输出仅包括一行。如果该迷宫符合小希的思路，那么输出”Yes”，否则输出”No”。</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>6 8  5 3  5 2  6 4<br>5 6  0 0</p><p>8 1  7 3  6 2  8 9  7 5<br>7 4  7 8  7 6  0 0</p><p>3 8  6 8  6 4<br>5 3  5 6  5 2  0 0</p><p>-1 -1</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>Yes<br>Yes<br>No</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>相比前边写的几个题来说这道题简单太多了</p><p>只需要在每次新加入两个点的时候判断这两个点是否是不连通的，如果联通的话说明出现环了，肯定不满足题目要求</p><p>然后在最后再跑一遍是否是只存在一个图(即所有点的父节点在同一集合)</p></blockquote><div class="note danger"><p>一开始用set提交上去TLE了，常数太大了吗？</p></div><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ==============================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  M.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.hdu.edu.cn/showproblem.php?pid=1272</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/09/24 02时13分45秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ==============================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100009</span>;</span><br><span class="line"><span class="keyword">int</span> f[N];</span><br><span class="line"><span class="comment">// set&lt;int&gt; s;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// int t = f[x];</span></span><br><span class="line">    <span class="keyword">if</span>(f[x] != x)</span><br><span class="line">    &#123;</span><br><span class="line">        f[x] = find(f[x]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// s.clear();</span></span><br><span class="line"></span><br><span class="line">    rep(i,<span class="number">0</span>,N<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        f[i] = i;</span><br><span class="line">        vis[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;x,&amp;y)!= EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(x == y &amp;&amp; x &lt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(x == <span class="number">-1</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;   </span><br><span class="line">                <span class="keyword">if</span>(flag)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> tmp = <span class="number">-1</span>;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(!vis[i]) <span class="keyword">continue</span>;</span><br><span class="line">                        <span class="keyword">if</span>(tmp == <span class="number">-1</span>)    tmp = find(i);</span><br><span class="line">                        <span class="keyword">if</span>(tmp != find(i))</span><br><span class="line">                        &#123;</span><br><span class="line">                            flag = <span class="number">1</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(flag)</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">                    <span class="keyword">else</span> </span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                init();</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        vis[x] = <span class="number">1</span>;</span><br><span class="line">        vis[y] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> fx = find(x);</span><br><span class="line">        <span class="keyword">int</span> fy = find(y);</span><br><span class="line">        <span class="keyword">if</span>(fx == fy)</span><br><span class="line">        &#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            f[fx] = fy;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 并查集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU1733 Parity game(带权并查集)</title>
      <link href="/2018/09/24/HDU1733-Parity-game/"/>
      <url>/2018/09/24/HDU1733-Parity-game/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://poj.org/problem?id=1733" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>有一个长度为n的序列<br>给出Q条限制$l,r,str str==odd$ 表示$[l,r]$区间内的数的和是奇数，否则为偶数<br>请你输出最小的不满足条件的编号-1（即最后一个满足的），如果全部满足，输出总数Q！</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行一个$n(n&lt;=10^9)$<br>第二行$Q(Q&lt;=5000)$<br>接下来$Q$行，每行$l,r,str$</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>输出一个数表示答案</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>10<br>5<br>1 2 even<br>3 4 odd<br>5 6 even<br>1 6 even<br>7 10 odd</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>3</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>这道题跟<a href="http://duny31030.top/2018/09/18/HDU3038-How-Many-Answers-Are-Wrong/" target="_blank" rel="noopener">HDU3030</a>差不太多，区别就是这道题的范围有些大，需要进行离散化。</p><p>照着HDU3038写了大半天，但是却一直WA，看了<a href="https://blog.csdn.net/u013480600/article/details/21128299" target="_blank" rel="noopener">focus_best大佬的题解</a>发现要用编号大的结点作为父亲···另外是使用map来辅助离散化</p><p>用map来离散化我是学到了，也找到了自己WA的原因，但是我还是不懂为什么要用编号大的结点来作为父亲。。。</p><p>具体题解还是看上边的博客吧，写的特别好</p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-24/5195384.jpg" alt="难受"></p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =============================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  H.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://poj.org/problem?id=1733</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/09/23 23时40分47秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ==============================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">5e4</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; f;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pp;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = f[x];</span><br><span class="line">    <span class="keyword">if</span>(x != f[x])</span><br><span class="line">    &#123;</span><br><span class="line">        f[x] = find(f[x]);</span><br><span class="line">        pp[x] = (pp[x]+pp[t])%<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> n,q,x,y;</span><br><span class="line">    <span class="keyword">char</span> op[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> pr = <span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;q);</span><br><span class="line">    rep(i,<span class="number">1</span>,q)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %s"</span>,&amp;x,&amp;y,op);</span><br><span class="line">        <span class="keyword">if</span>(pr != <span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        x--;</span><br><span class="line">        <span class="keyword">if</span>(!f.count(x))</span><br><span class="line">        &#123;</span><br><span class="line">            f[x] = x;</span><br><span class="line">            pp[x] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!f.count(y))</span><br><span class="line">        &#123;</span><br><span class="line">            f[y] = y;</span><br><span class="line">            pp[y] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> fx = find(x);</span><br><span class="line">        <span class="keyword">int</span> fy = find(y);</span><br><span class="line">        <span class="comment">// printf("fx = %d fy = %d\n",fx,fy);</span></span><br><span class="line">        <span class="keyword">if</span>(fx == fy)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(pp[x] == pp[y] &amp;&amp; op[<span class="number">0</span>] == <span class="string">'e'</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                <span class="keyword">if</span>(pp[x] != pp[y] &amp;&amp; op[<span class="number">0</span>] == <span class="string">'o'</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                    pr = i<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// printf("f[%d] = %d\n",fx,fy);</span></span><br><span class="line">            f[fx] = fy;</span><br><span class="line">            <span class="keyword">if</span>(op[<span class="number">0</span>] == <span class="string">'o'</span>)</span><br><span class="line">                pp[fx] = (pp[x]+pp[y]+<span class="number">1</span>)%<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                pp[fx] = (pp[x]+pp[y])%<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(pr == <span class="number">-1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,q);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,pr);</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 并查集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> 带权并查集 </tag>
            
            <tag> 离散化 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>操作系统 实验一 操作系统接口</title>
      <link href="/2018/09/19/Operating-System-pratice-01/"/>
      <url>/2018/09/19/Operating-System-pratice-01/</url>
      <content type="html"><![CDATA[<h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><blockquote><ol><li>理解操作操作系统的接口设计</li></ol></blockquote><h1 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h1><blockquote><ol><li>熟悉 DOS 的基本命令，包括 md，cd，copy，move，del，type 等的使用 </li></ol><blockquote><p>1 当前目录下建立子目录 TEMP1 和 TEMP2，将当前目录设定为 TEMP; 2 在当前目录下创建新文件 1.txt,其内容为:这是我的记事本;<br> 3 使用 type 命令显示 1.txt 的内容，检查正确后，执行它;<br> 4 拷贝 1.txt 到路径 MYTEMP 中; </p><p>5 删除 TEMP2 中的文件 1.txt，删除目录 TEMP2;</p></blockquote><ol><li>编写一个备份桌面所有文件到 D:\desktop 目录的批处理文件，包括 echo，attrib，xcopy 命令的使用 </li></ol><blockquote><ol><li><p>修改该批处理文件的属性为只读、系统、隐藏，这样该文件对于普通用户不可见。 </p></li><li><p>使用 xcopy 命令在 d 盘创建一个新文件夹名为 desktopbak，然后将桌面上所有文件 及文件夹(包括子文件夹)都复制到 d:\desktopbak。 </p></li><li><p>修改 d:\desktopbak 文件夹属性为只读、系统、隐藏，这样该文件对于普通用户不 可见。 </p></li><li><p>批处理文件建立、编辑。使用记事本编辑后，另存为的文件名称:Desktopycopy.bat。 即创建了文件名为 Desktopycopy 批处理文件。</p></li></ol></blockquote><ol><li>理解 WINDOWS 下的编程接口原理，了解 WINAPI，利用 WINAPI 实现 WINDOWS 下的打印。 </li></ol><blockquote><ol><li><p>登录进入 Windows </p></li><li><p>在“开始”菜单中单击“程序”-“Microsoft Visual Studio 6.0”-“Microsoft Visual C++ 6.0”命令，进入 Visual C++ 窗口。 </p></li><li><p>在 File 菜单单击 New Workspace…命令，创建 PrintApp.dsw 项目文件。 </p></li><li><p>在 File 菜单单击 New C++ Source file 命令，创建新的原文件。</p></li><li>实验运行结果中所示的源代码，调试、编译并运行。</li><li>执行结果，理解各个函数的功能。 </li></ol></blockquote></blockquote><h1 id="实验准备"><a href="#实验准备" class="headerlink" title="实验准备"></a>实验准备</h1><blockquote><p> 在 Windows 下，基本的打印过程一般有如下六步:<br> 1 调用 CreateDC() 函数获得打印机 DC (设备描述环境) 。<br> 2 调用 StartDoc() 函数启动文档。<br> 3 调用 StartPage() 函数打印一页。<br> 4 把文档提交给打印机 DC。<br> 5 调用 EndPage() 函数结束一页。<br> 对文档中要打印的每一页都重复步骤 3) 至 5) 。<br> 6 调用 EndDoc() 函数结束打印任务。 为了确定与系统相连接的打印机的型号，应用程序必须搜索用户的 WIN.INI 文件或调用 </p><p>Windows 的 EnumPrinters() API 函数。而调用 EnumPrinters() 函数是最容易的方法。 EnumPrinters() 函数的定义如下所示: </p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">EnumPrinters</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">DWORD Flags,</span></span></span><br><span class="line"><span class="function"><span class="params">    LPTSTR Name,</span></span></span><br><span class="line"><span class="function"><span class="params">    DWORD Level,</span></span></span><br><span class="line"><span class="function"><span class="params">    LPBYTE pPrinterEnum, </span></span></span><br><span class="line"><span class="function"><span class="params">    DWORD cbBuf,</span></span></span><br><span class="line"><span class="function"><span class="params"> LPDWORD pcbNeeded, </span></span></span><br><span class="line"><span class="function"><span class="params"> LPDWORD pcReturned, </span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><blockquote><p>函数各参数按顺序描述如下:</p></blockquote><div class="table-container"><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">Flags</td><td style="text-align:center">表明所需打印机类型的标志</td></tr><tr><td style="text-align:center">Name</td><td style="text-align:center">打印机对象的名称</td></tr><tr><td style="text-align:center">Level</td><td style="text-align:center">打印机信息结构的类型</td></tr><tr><td style="text-align:center">pPrinterEum</td><td style="text-align:center">指向打印机信息结构的指针</td></tr><tr><td style="text-align:center">cbBuf</td><td style="text-align:center">打印机信息数组的大小</td></tr><tr><td style="text-align:center">pcbNeeded</td><td style="text-align:center">指向保存复制到打印机信息数组中的字节数变量的指针</td></tr><tr><td style="text-align:center">pcReturned</td><td style="text-align:center">指向保存复制到数组中的打印机信息结构的变量的指针</td></tr></tbody></table></div><blockquote><p>其中某些参数根据打印机的不同描述而具有许多不同的值。但是，大部分情况下，我们<br>关心的只是获得缺省的打印机。为了对应用程序进行编程，以便要求 Windows 提供缺省的打印机，可使用如下代码:</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PRINTER_INFO_5 printerInfo5[<span class="number">3</span>] ;</span><br><span class="line">DWORD needed, returned;</span><br><span class="line">EnumPrinters(PRINTER_ENUM_DEFAULT, <span class="literal">NULL</span>, <span class="number">5</span>, (LPBYTE) printerInfo5,</span><br><span class="line"><span class="keyword">sizeof</span>(printerInfo5) , &amp;needed, &amp;returned) ;</span><br></pre></td></tr></table></figure><blockquote><p>如果上述代码段执行成功，那么在第一个打印机信息结构的 pPrinteName 成员中就有了 </p><p>缺省打印机的名称。可以按以下方式来访问该成员: </p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">printerInfo5[<span class="number">0</span>].pPrinterName</span><br></pre></td></tr></table></figure><blockquote><p>为了给打印机创建 DC，需要准确地知道打印机名称。为了获得该 DC，可调用<br>CreateDC() :</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HDC printDC;</span><br><span class="line">printDC = CreateDC(NULL, printerInfo5[0].pPrinterName, NULL, NULL) ;</span><br></pre></td></tr></table></figure><blockquote><p>这里，把打印机的系统名称作为第二个参数，其余参数都应该为 NULL。</p><p>一旦有了用户打印机的 DC，就可以开始打印文档。首先，调用 Windows API 函数 StartDoc() ，开始把文档发送到系统的后台打印程序中。函数调用成功则返回打印机任务 的标识符;否则返回小于或等于零的值。 </p><p>StartDoc() 的一个参数是指向 DOCINFO 结构的指针。必须初始化此结构的成员才能调 用 StartDoc() 。在大多数情况下，只需将此结构的大小放在 cbSize 成员中，把指向文档 名称的指针放在 lpszDocName 成员中，其余成员可以是 NULL 或零。整个过程类似于如下形 式: </p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> docName[] = “RectangleDoc” ; </span><br><span class="line">DOCINFO docInfo;</span><br><span class="line">docInfo.cbSize = <span class="keyword">sizeof</span>(docInfo) ; </span><br><span class="line">docInfo.lpszDocName = docName; </span><br><span class="line">docInfo.lpszOutput = <span class="literal">NULL</span>; </span><br><span class="line">docInfo.lpszDatatype = <span class="literal">NULL</span>; </span><br><span class="line">docInfo.fwType = <span class="number">0</span>;</span><br><span class="line">result = StartDoc(printDC, &amp;docInfo) ; </span><br><span class="line"><span class="keyword">if</span> (result &lt;=<span class="number">0</span> )</span><br><span class="line">&#123;</span><br><span class="line">MessageBox(<span class="number">0</span>, “StartDoc() failed” ,</span><br><span class="line">“Basic Print App”, MB_OK | MB_ICONERROR) ;</span><br><span class="line"><span class="keyword">return</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>如果调用 StartDoc() 成功，则可以通过调用 StartPage() 来打印第一页。StartPage()<br>函数只有单一参数，即打印机的 DC。函数调用成功则返回大于零的值，否则返回小于或等<br>于零的值。打印第一页的代码类似如下程序片断:</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">result = StartPage(printDC) ; <span class="keyword">if</span> (result &lt;= <span class="number">0</span> )</span><br><span class="line">&#123;</span><br><span class="line">MessageBox(<span class="number">0</span>, “StartPage() failed”,</span><br><span class="line">“Basic Print App” , MB_OK | MB_ICONERROR</span><br><span class="line"><span class="keyword">return</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>一旦开始打印第一页，那么只需要把输出导向打印机 DC。由于屏幕上的点的大小与大 多数打印机上的点的大小不同，所以通常还需要缩放发往打印机的数据。 </p><p>打印一页之后，可调用 EndPage() 函数以结束当前页。与 StartPage() 一样，EndPage() 需要打印机 DC 作为其惟一的参数。EndPage() 调用成功，则返回大于零的值;如果不成功， 返回零或小于零的值。结束一页的代码类似于如下片断: </p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">result = EndPage(printDC) ; </span><br><span class="line"><span class="keyword">if</span> (result &lt;= <span class="number">0</span> )</span><br><span class="line">&#123;</span><br><span class="line">MessageBox(<span class="number">0</span>, “EndPage() = failed” ,</span><br><span class="line">“Basic Print App” , MB_OK | MB_ICONERROR</span><br><span class="line"><span class="keyword">return</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>至此，应用程序可再一次调用 StartPage() 以打印另一页，也可调用 EndDoc() 以结束<br>打印任务:</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EndDoc(printDC) ;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 操作系统 </category>
          
          <category> 上机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU3038 How Many Answers Are Wrong</title>
      <link href="/2018/09/18/HDU3038-How-Many-Answers-Are-Wrong/"/>
      <url>/2018/09/18/HDU3038-How-Many-Answers-Are-Wrong/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=3038" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>TT and FF are … friends. Uh… very very good friends -<strong><em>__</em></strong>-b</p><p>FF is a bad boy, he is always wooing TT to play the following game with him. This is a very humdrum game. To begin with, TT should write down a sequence of integers-_-!!(bored).</p><p><img src="http://acm.hdu.edu.cn/data/images/exe3038-1.JPG" alt="图"></p><a id="more"></a><p>Then, FF can choose a continuous subsequence from it(for example the subsequence from the third to the fifth integer inclusively). After that, FF will ask TT what the sum of the subsequence he chose is. The next, TT will answer FF’s question. Then, FF can redo this process. In the end, FF must work out the entire sequence of integers.</p><p>Boring<del>Boring</del>a very very boring game!!! TT doesn’t want to play with FF at all. To punish FF, she often tells FF the wrong answers on purpose.</p><p>The bad boy is not a fool man. FF detects some answers are incompatible. Of course, these contradictions make it difficult to calculate the sequence.</p><p>However, TT is a nice and lovely girl. She doesn’t have the heart to be hard on FF. To save time, she guarantees that the answers are all right if there is no logical mistakes indeed.</p><p>What’s more, if FF finds an answer to be wrong, he will ignore it when judging next answers.</p><p>But there will be so many questions that poor FF can’t make sure whether the current answer is right or wrong in a moment. So he decides to write a program to help him with this matter. The program will receive a series of questions from FF together with the answers FF has received from TT. The aim of this program is to find how many answers are wrong. Only by ignoring the wrong answers can FF work out the entire sequence of integers. Poor FF has no time to do this job. And now he is asking for your help~(Why asking trouble for himself~~Bad boy)</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>Line 1: Two integers, N and M (1 &lt;= N &lt;= 200000, 1 &lt;= M &lt;= 40000). Means TT wrote N integers and FF asked her M questions.</p><p>Line 2..M+1: Line i+1 contains three integer: Ai, Bi and Si. Means TT answered FF that the sum from Ai to Bi is Si. It’s guaranteed that 0 &lt; Ai &lt;= Bi &lt;= N.</p><p>You can assume that any sum of subsequence is fit in 32-bit integer.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>A single line with a integer denotes how many answers are wrong.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>10   5<br>1    10    100<br>7    10     28<br>1      3     32<br>4      6     41<br>6      6       1</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>1</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>刚开始想不到这道题用并查集应该怎么写，后来看了别人的题解才明白原来并查集还可以这么用。</p><p>这道题让我们找出冲突的个数，证明冲突是很简单的，因为只有在所给区间我们恰好都知道的情况下(比如我们知道1-10前缀和是50，1-5前缀和是20，当给出的Ai，Bi为6，10时，我们才能够验证这组数据是否正确，如果Ai不为6，我们则无法进行验证，也无法证明它是错误的，只能将其当做正确答案来处理)才能证明是否冲突，否则全部认为正确并进行更新</p><p>pre[i]表示i的前缀和</p><p>f[i]表示已知的i所在区间的开始位置(语言描述能力太烂，可以看一下图)</p><p>u、v表示x、y<br>fu、fv表示f[u]、f[v]</p><p>图一：</p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-18/18805840.jpg" alt="图一"></p><p>图二：</p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-18/7622314.jpg" alt="图二"></p><p>图一图二所表示的情况便是我们无法验证是否冲突的情况，这种情况我们只能进行更新。</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  D.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.hdu.edu.cn/showproblem.php?pid=3038</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/09/18 19时47分44秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">200100</span>;</span><br><span class="line"><span class="keyword">int</span> f[N],pre[N];</span><br><span class="line"><span class="keyword">int</span> n,m,pr;</span><br><span class="line"><span class="keyword">int</span> x,y,sum;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = f[x];</span><br><span class="line">    <span class="keyword">if</span>(f[x] != x)</span><br><span class="line">    &#123;</span><br><span class="line">        f[x] = find(f[x]);</span><br><span class="line">        pre[x] += pre[t];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m)!=EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        pr = <span class="number">0</span>;</span><br><span class="line">    rep(i,<span class="number">0</span>,n)</span><br><span class="line">        f[i] = i;</span><br><span class="line">    clr(pre,<span class="number">0</span>);</span><br><span class="line">    rep(i,<span class="number">1</span>,m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;x,&amp;y,&amp;sum);</span><br><span class="line">        x -= <span class="number">1</span>;   </span><br><span class="line">            <span class="comment">// x-y的和为sum  sum = (x+(x+1)+···+(y-1)+y)</span></span><br><span class="line">            <span class="comment">// 为此,x应该-1</span></span><br><span class="line">        <span class="keyword">int</span> fx = find(x);</span><br><span class="line">        <span class="keyword">int</span> fy = find(y);</span><br><span class="line">        <span class="keyword">if</span>(fx == fy &amp;&amp; pre[x]+sum != pre[y])   </span><br><span class="line">            <span class="comment">// 只有这种情况才能证明这个情况是错误的</span></span><br><span class="line">        &#123;</span><br><span class="line">                </span><br><span class="line">            pr++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(fx &lt; fy)</span><br><span class="line">            &#123;</span><br><span class="line">                f[fy] = fx;</span><br><span class="line">                pre[fy] = pre[x]-pre[y]+sum;</span><br><span class="line">                <span class="comment">// 为什么这样写可以看图一</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(fx &gt; fy)</span><br><span class="line">                &#123;</span><br><span class="line">                    f[fx] = fy;</span><br><span class="line">                    pre[fx] = pre[y]-pre[x]-sum;</span><br><span class="line">                    <span class="comment">// 图二</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,pr);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 并查集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> 带权并查集 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ2236 Wireless Network(并查集)</title>
      <link href="/2018/09/18/POJ2236-Wireless-Network/"/>
      <url>/2018/09/18/POJ2236-Wireless-Network/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="https://vjudge.net/problem/11125/origin" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>南亚发生了一次地震。ACM (Asia Cooperated Medical 亚洲联合医疗队) 已经为膝上型电脑搭建了一个无线网络，但受到了一次不可预知的余震攻击，因此网络中的所有电脑都被破坏了。电脑被逐台修复，网络逐步恢复了工作。由于受到硬件的约束，每台电脑只能与距离它不超过 d 米的其它电脑直接通信。但每台电脑可被看作其它两台电脑的通信中转点，也就是说，如果电脑 A 和电脑 B 可以直接通信，或存在一台电脑 C 既可与 A 也可与 B 通信，那么电脑 A 和电脑 B 之间就能够通信。 </p><p>在处理网络修复的过程中，工作人员们在任何一个时刻，可以执行两种操作：维修一台电脑，或测试两台电脑是否能够通信。请您找出全部的测试操作。 </p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行包含了两个整数 $N$ 和 $d (1 &lt;= N &lt;= 1001, 0 &lt;= d &lt;= 20000)$。此处 $N$ 是电脑的数目，编号从 $1$ 到 $N$；同时，$D$ 是两台电脑之间能够直接通信的最大距离。接下来的 $N$ 行，每行包含两个整数 $xi, yi (0 &lt;= xi, yi &lt;= 10000)$，表示 $N$ 台电脑的坐标。从第 $(N+1)$ 行到输入结束，是逐一执行的操作，每行包含一个操作，格式是以下两者之一： </p><ol><li><p>“O p” $(1 &lt;= p &lt;= N)$，表示维护电脑 p 。 </p></li><li><p>“S p q” $(1 &lt;= p, q &lt;= N)$，表示测试电脑 p 和 q 是否能够通信。 </p></li></ol><p>输入不超过 300000 行。 </p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>对于每个测试操作，如果两台电脑能够通信，则打印 “SUCCESS”；否则，打印 “FAIL”。</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>4 1<br>0 1<br>0 2<br>0 3<br>0 4<br>O 1<br>O 2<br>O 4<br>S 1 4<br>O 3<br>S 1 4</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>FAIL<br>SUCCESS</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>简单的并查集问题，主要是注意处理距离比较问题</p><p>为避免因为计算距离的时候出现精度误差，直接d取平方，不进行开方<br>用use数组标记修过的网络，只有修过的才对其进行更新</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  A.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://poj.org/problem?id=2236</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/09/18 10时15分26秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> f[N],x[N],y[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> i)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(i!=f[i]) </span><br><span class="line">        f[i]=find(f[i]);  </span><br><span class="line">    <span class="keyword">return</span> f[i];  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dis</span><span class="params">(<span class="keyword">int</span> xx,<span class="keyword">int</span> yy)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x1 = x[xx]-x[yy];</span><br><span class="line">    x1 *= x1;</span><br><span class="line">    <span class="keyword">int</span> x2 = y[xx]-y[yy];</span><br><span class="line">    x2 *= x2;</span><br><span class="line">    <span class="keyword">return</span> (x1+x2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,d,cx,cy;</span><br><span class="line"><span class="keyword">int</span> use[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="comment">// scanf("%d %d",&amp;n,&amp;d);</span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; d;</span><br><span class="line">    clr(use,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> t = d*d;</span><br><span class="line">    rep(i,<span class="number">1</span>,n)</span><br><span class="line">    &#123;</span><br><span class="line">        f[i] = i;</span><br><span class="line">        <span class="comment">// scanf("%d %d",&amp;x[i],&amp;y[i]);</span></span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; x[i] &gt;&gt; y[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">char</span> op;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; op)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="string">'O'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// scanf("%d",&amp;cx);</span></span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; cx;</span><br><span class="line"></span><br><span class="line">            use[cx] = <span class="number">1</span>;</span><br><span class="line">            rep(i,<span class="number">1</span>,n)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(cx != i &amp;&amp; use[i] &amp;&amp; dis(i,cx) &lt;= t)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> k1 = find(cx);</span><br><span class="line">                    <span class="keyword">int</span> k2 = find(i);</span><br><span class="line">                    <span class="keyword">if</span>(k1 &lt; k2)</span><br><span class="line">                        f[k1] = k2;</span><br><span class="line">                    <span class="keyword">else</span> </span><br><span class="line">                        f[k2] = k1;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// scanf("%d %d",&amp;cx,&amp;cy);</span></span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; cx &gt;&gt; cy;</span><br><span class="line">            <span class="keyword">int</span> fx = find(cx);</span><br><span class="line">            <span class="keyword">int</span> fy = find(cy);</span><br><span class="line">            <span class="keyword">if</span>(fx == fy)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"SUCCESS"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"FAIL"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 并查集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
            <tag> POJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU3974 Assign the task</title>
      <link href="/2018/09/17/HDU3974-Assign-the-task/"/>
      <url>/2018/09/17/HDU3974-Assign-the-task/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=3974" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>有一家公司有$N$个员工$(从1到N)$，公司里每个员工都有一个直接的老板(除了整个公司的领导)。如果你是某人的直接老板，那个人就是你的下属，他的所有下属也都是你的下属。如果你是没有人的老板，那么你就没有下属，没有直接老板的员工就是整个公司的领导，也就是说$N$个员工构成了一棵树。公司通常把一些任务分配给一些员工来完成，当一项任务分配给某个人时，他/她会把它分配给他/她的所有下属，换句话说，这个人和他/她的所有下属在同一时间接受了一项任务。此外，每当员工收到一个任务，他/她将停止当前任务(如果他/她有)，并开始新的任务。在公司将某些任务分配给某个员工后，编写一个程序来帮助找出某个员工当前的任务。</p><p>(直接贴中文题面，下边就不写题意了)</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行包含单个正整数<script type="math/tex">T(T<=10)</script>，表示测试用例的数量。对于每个测试用例：第一行包含一个整数$N(N≤50，000)$，它是雇员的数目。下面的$N-1$行分别包含两个整数$u$和$v$，这意味着雇员v是雇员u的直接老板$1&lt;=u，v&lt;=N)$。下一行包含一个整数$(M≤50，000)$。下面的M行分别包含一条消息，“$C  x$”表示对员工x的当前任务的查询，“$T  x  y$”表示公司将任务$y$分配给员工$x$。$(1&lt;=x&lt;=N，0&lt;=y&lt;=10^9)$</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>对于每个测试用例，在第一行打印测试用例编号(以1开头)，然后为每个查询输出相应的答案。</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>1<br>5<br>4 3<br>3 2<br>1 3<br>5 2<br>5<br>C 3<br>T 2 1<br>C 3<br>T 3 2<br>C 3</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>Case #1:<br>-1<br>1<br>2</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>学习了别人的代码才会写，CF马上开始了  下次补上代码中的注释以及自己对这道题的理解</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ===========================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  J.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.hdu.edu.cn/showproblem.php?pid=3974</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/09/15 17时29分26秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ===========================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">5e4</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> T,N,M,u,v,x,y;</span><br><span class="line"><span class="keyword">char</span> op[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; G;</span><br><span class="line"><span class="keyword">int</span> s[MAXN],e[MAXN],du[MAXN],Index;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    s[u] = ++Index;  <span class="comment">// 相当于是记录u的起始下属下标，结束下标在递归回来的时候确定的</span></span><br><span class="line">    <span class="keyword">int</span> len = G[u].size();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">        dfs(G[u][i]);</span><br><span class="line">    e[u] = Index;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    <span class="keyword">int</span> task,flag;   <span class="comment">// flag表示区间是否被全部覆盖,task表示此区间的工作室什么</span></span><br><span class="line">&#125;tree[MAXN&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Build</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> L,<span class="keyword">int</span> R)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tree[rt].l = L; tree[rt].r = R; tree[rt].task = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(L == R)</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">int</span> mid = (L+R)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    Build(rt&lt;&lt;<span class="number">1</span>,L,mid);</span><br><span class="line">    Build(rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,R);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Down</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tree[rt].flag &amp;&amp; tree[rt].l != tree[rt].r)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[rt&lt;&lt;<span class="number">1</span>].flag = tree[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].flag = tree[rt].flag;</span><br><span class="line">        tree[rt&lt;&lt;<span class="number">1</span>].task = tree[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].task = tree[rt].task;</span><br><span class="line">        tree[rt].flag = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> task)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tree[rt].l == L &amp;&amp; tree[rt].r == R)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[rt].flag = <span class="number">1</span>;</span><br><span class="line">        tree[rt].task = task;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    Down(rt);</span><br><span class="line">    <span class="keyword">int</span> mid = (tree[rt].l+tree[rt].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(R &lt;= mid)</span><br><span class="line">        Update(rt&lt;&lt;<span class="number">1</span>,L,R,task);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">if</span>(L &gt; mid)</span><br><span class="line">            Update(rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,L,R,task);</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            Update(rt&lt;&lt;<span class="number">1</span>,L,mid,task);</span><br><span class="line">            Update(rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,R,task);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> pos)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Down(rt);   <span class="comment">// 因为上面可能没有更新到最底部</span></span><br><span class="line">    <span class="keyword">if</span>(tree[rt].l == tree[rt].r)   <span class="comment">// 找到叶子节点，并返回</span></span><br><span class="line">        <span class="keyword">return</span> tree[rt].task;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mid = (tree[rt].l+tree[rt].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(pos &lt;= mid)</span><br><span class="line">        <span class="keyword">return</span> Query(rt&lt;&lt;<span class="number">1</span>,pos);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">return</span> Query(rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,pos);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    rep(cas,<span class="number">1</span>,T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d:\n"</span>,cas);</span><br><span class="line">        clr(du,<span class="number">0</span>);  clr(s,<span class="number">0</span>);   clr(e,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;N);</span><br><span class="line">        G.clear();</span><br><span class="line">        G.resize(N+<span class="number">5</span>);</span><br><span class="line">        rep(i,<span class="number">2</span>,N)</span><br><span class="line">        &#123;   </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;u,&amp;v);</span><br><span class="line">            G[v].push_back(u);</span><br><span class="line">            du[u] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Index = <span class="number">0</span>;</span><br><span class="line">        rep(i,<span class="number">1</span>,N)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!du[i])   <span class="comment">// 找到根节点,然后按照递归的形式找到自己连续的下属</span></span><br><span class="line">            &#123;</span><br><span class="line">                dfs(i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 建树</span></span><br><span class="line">        Build(<span class="number">1</span>,<span class="number">1</span>,N);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;M);</span><br><span class="line">        rep(i,<span class="number">1</span>,M)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,op);</span><br><span class="line">            <span class="keyword">if</span>(op[<span class="number">0</span>] == <span class="string">'C'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Query(<span class="number">1</span>,s[x]));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;x,&amp;y);</span><br><span class="line">                Update(<span class="number">1</span>,s[x],e[x],y);   <span class="comment">// 更新的是x这个人的所有下属</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 线段树 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> 线段树 </tag>
            
            <tag> DFS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codeforces1041C. Coffee Break</title>
      <link href="/2018/09/17/Codeforces1041/"/>
      <url>/2018/09/17/Codeforces1041/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://codeforces.com/contest/1041/problem/C" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>Recently Monocarp got a job. His working day lasts exactly $m$ minutes. During work, Monocarp wants to drink coffee at certain moments: there are $n$ minutes $a1,a2,…,an$, when he is able and willing to take a coffee break (for the sake of simplicity let’s consider that each coffee break lasts exactly one minute). </p><p>However, Monocarp’s boss doesn’t like when Monocarp takes his coffee breaks too often. So for the given coffee break that is going to be on minute $ai$, Monocarp must choose the day in which he will drink coffee during the said minute, so that every day at least dd minutes pass between any two coffee breaks. Monocarp also wants to take these $n$ coffee breaks in a minimum possible number of working days (he doesn’t count days when he is not at work, and he doesn’t take coffee breaks on such days). Take into account that more than $d$ minutes pass between the end of any working day and the start of the following working day.</p><p>For each of the $n$ given minutes determine the day, during which Monocarp should take a coffee break in this minute. You have to minimize the number of days spent.</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The first line contains three integers $n, m, d$ $(1≤n≤2⋅105,n≤m≤109,1≤d≤m)$ — the number of coffee breaks Monocarp wants to have, the length of each working day, and the minimum number of minutes between any two consecutive coffee breaks.</p><p>The second line contains nn distinct integers $a1,a2,…,an  (1≤ai≤m)$, where $ai$ is some minute when Monocarp wants to have a coffee break.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>In the first line, write the minimum number of days required to make a coffee break in each of the $n$ given minutes. </p><p>In the second line, print nn space separated integers. The $i$-th of integers should be the index of the day during which Monocarp should have a coffee break at minute $ai$. Days are numbered from $1$. If there are multiple optimal solutions, you may print any of them.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>4 5 3<br>3 5 1 2</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>3<br>3 1 1 2 </p></blockquote><h4 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h4><blockquote><p>10 10 1<br>10 5 7 4 6 3 2 1 9 8</p></blockquote><h4 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h4><blockquote><p>2<br>2 1 1 2 2 1 2 1 1 2 </p></blockquote><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><blockquote><p>In the first example, Monocarp can take two coffee breaks during the first day (during minutes $1$ and $5$, $3$ minutes will pass between these breaks). One break during the second day (at minute $2$), and one break during the third day (at minute $3$).</p><p>In the second example, Monocarp can determine the day of the break as follows: if the minute when he wants to take a break is odd, then this break is on the first day, if it is even, then this break is on the second day.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>每天有m分钟，A先生喜欢喝咖啡，但是两次喝咖啡的时间至少要间隔d分钟，每次喝咖啡需要1分钟，共有n种喝咖啡的时间可供选择</p><p>输出至少需要几天，以及第i杯咖啡是在第几天喝的</p><p>又是一次有了大致想法但是由于不太了解STL的用法而没办法A掉的题······</p><p>不知道set.lower_bound()这种用法</p><p>set+lower_bound 就可以解决了</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *==========================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  C.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://codeforces.com/contest/1041/problem/C</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/09/16 18时50分11秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *==========================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">200100</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,d;</span><br><span class="line"><span class="keyword">int</span> ans[N],a[N];</span><br><span class="line"><span class="built_in">set</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt; q;</span><br><span class="line">pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; p;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;n,&amp;m,&amp;d);</span><br><span class="line">    rep(i,<span class="number">1</span>,n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        p = make_pair(a[i],i);</span><br><span class="line">        q.insert(p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        ++cnt;</span><br><span class="line">        <span class="keyword">int</span> pos = q.begin()-&gt;second;</span><br><span class="line">        ans[pos] = cnt;</span><br><span class="line">        q.erase(q.begin());</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            p = make_pair(a[pos]+<span class="number">1</span>+d,<span class="number">0</span>);</span><br><span class="line">            <span class="built_in">set</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;::iterator it;</span><br><span class="line">            it = q.lower_bound(p);</span><br><span class="line">            <span class="keyword">if</span>(it == q.end())</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            pos = it-&gt;second;</span><br><span class="line">            q.erase(it);</span><br><span class="line">            ans[pos] = cnt;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,cnt);</span><br><span class="line">    rep(i,<span class="number">1</span>,n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> STL </category>
          
          <category> set,lower_bound </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
            <tag> STL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU1540 Tunnel Warfare(线段树区间更新)</title>
      <link href="/2018/09/15/HDU1540-Tunnel-Warfare/"/>
      <url>/2018/09/15/HDU1540-Tunnel-Warfare/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1540" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>During the War of Resistance Against Japan, tunnel warfare was carried out extensively in the vast areas of north China Plain. Generally speaking, villages connected by tunnels lay in a line. Except the two at the ends, every village was directly connected with two neighboring ones.</p><p>Frequently the invaders launched attack on some of the villages and destroyed the parts of tunnels in them. The Eighth Route Army commanders requested the latest connection state of the tunnels and villages. If some villages are severely isolated, restoration of connection must be done immediately!</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The first line of the input contains two positive integers n and m (n, m ≤ 50,000) indicating the number of villages and events. Each of the next m lines describes an event.</p><p>There are three different events described in different format shown below:</p><p>D x: The x-th village was destroyed.</p><p>Q x: The Army commands requested the number of villages that x-th village was directly or indirectly connected with including itself.</p><p>R: The village destroyed last was rebuilt.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>Output the answer to each of the Army commanders’ request in order on a separate line.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>7 9<br>D 3<br>D 6<br>D 5<br>Q 4<br>Q 5<br>R<br>Q 4<br>R<br>Q 4</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>1<br>0<br>2<br>4</p></blockquote><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><blockquote><p>有三种操作</p><p>D x 破坏掉x点</p><p>Q x 查询x点左右联通的点数(最长的连续区间)</p><p>R     恢复上一个破坏掉的点</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>由于操作’R’的存在，需要将操作D依次存下来，或者单独一个变量来记录上一个破坏的点，在这里我选择用数组存。</p><p>每次都新建一棵线段树，线段树需要保存的值除了左右端点外要加上三个最值。即：区间内左端连续的最长的区间、区间内右端连续的最长区间、区间内连续的最长的区间</p><p>以上这些在开始写之前还是能想到的，但是在处理区间合并的时候有些不太会处理，因此<del>参考</del>(抄)了bin神的代码，感觉bin神在合并的时候处理的非常巧妙。</p><p>如果对于更新与查询操作不是很理解，可以自己在纸上试一试，对整个过程会更清晰</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *==========================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  I.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.hdu.edu.cn/showproblem.php?pid=1540</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/09/15 12时22分38秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *==========================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">bool</span> Finish_read;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;<span class="title">inline</span> <span class="title">void</span> <span class="title">read</span>(<span class="title">T</span> &amp;<span class="title">x</span>)&#123;</span>Finish_read=<span class="number">0</span>;x=<span class="number">0</span>;<span class="keyword">int</span> f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=<span class="number">-1</span>;<span class="keyword">if</span>(ch==EOF)<span class="keyword">return</span>;ch=getchar();&#125;<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>,ch=getchar();x*=f;Finish_read=<span class="number">1</span>;&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;<span class="title">inline</span> <span class="title">void</span> <span class="title">print</span>(<span class="title">T</span> <span class="title">x</span>)&#123;</span><span class="keyword">if</span>(x/<span class="number">10</span>!=<span class="number">0</span>)print(x/<span class="number">10</span>);<span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="string">'0'</span>);&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;<span class="title">inline</span> <span class="title">void</span> <span class="title">writeln</span>(<span class="title">T</span> <span class="title">x</span>)&#123;</span><span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>);x=<span class="built_in">abs</span>(x);print(x);<span class="built_in">putchar</span>(<span class="string">'\n'</span>);&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;<span class="title">inline</span> <span class="title">void</span> <span class="title">write</span>(<span class="title">T</span> <span class="title">x</span>)&#123;</span><span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>);x=<span class="built_in">abs</span>(x);print(x);&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e4</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    <span class="keyword">int</span> le,ri,mi;</span><br><span class="line">&#125;tree[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="comment">// tree[i].le 区间左端点开始的最大连续个数</span></span><br><span class="line"><span class="comment">// tree[i].ri 区间右端点开始的最大连续个数</span></span><br><span class="line"><span class="comment">// tree[i].mi 区间最大的连续点的个数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Build</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tree[i].l = l;</span><br><span class="line">    tree[i].r = r;</span><br><span class="line">    tree[i].le = tree[i].ri = tree[i].mi = r-l+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(r == l)</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    Build(i&lt;&lt;<span class="number">1</span>,l,mid);</span><br><span class="line">    Build(i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// val = 1 恢复这个点</span></span><br><span class="line"><span class="comment">// val = 0 破坏这个点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> t,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tree[i].l == tree[i].r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(val == <span class="number">1</span>)</span><br><span class="line">            tree[i].le = tree[i].ri = tree[i].mi = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            tree[i].le = tree[i].ri = tree[i].mi = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (tree[i].l+tree[i].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(t &lt;= mid)</span><br><span class="line">        Update(i&lt;&lt;<span class="number">1</span>,t,val);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        Update(i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,t,val);</span><br><span class="line">    tree[i].le = tree[i&lt;&lt;<span class="number">1</span>].le;</span><br><span class="line">    tree[i].ri = tree[i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].ri;</span><br><span class="line">    tree[i].mi = max(tree[i&lt;&lt;<span class="number">1</span>].mi,tree[i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].mi);</span><br><span class="line">    tree[i].mi = max(tree[i].mi,tree[i&lt;&lt;<span class="number">1</span>].ri+tree[i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].le);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(tree[i&lt;&lt;<span class="number">1</span>].le == tree[i&lt;&lt;<span class="number">1</span>].r-tree[i&lt;&lt;<span class="number">1</span>].l+<span class="number">1</span>)</span><br><span class="line">        tree[i].le += tree[i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].le;</span><br><span class="line">    <span class="keyword">if</span>(tree[i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].ri == tree[i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].r-tree[i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].l+<span class="number">1</span>)</span><br><span class="line">        tree[i].ri += tree[i&lt;&lt;<span class="number">1</span>].ri;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tree[i].l == tree[i].r || tree[i].mi == <span class="number">0</span> || tree[i].mi == tree[i].r-tree[i].l+<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> tree[i].mi;</span><br><span class="line">    <span class="keyword">int</span> mid = (tree[i].l+tree[i].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(t &lt;= mid)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(t &gt;= tree[i&lt;&lt;<span class="number">1</span>].r-tree[i&lt;&lt;<span class="number">1</span>].ri+<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> Query(i&lt;&lt;<span class="number">1</span>,t)+Query(i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="keyword">return</span> Query(i&lt;&lt;<span class="number">1</span>,t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(t &lt;= tree[i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].l+tree[i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].le<span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">return</span> Query(i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,t)+Query(i&lt;&lt;<span class="number">1</span>,mid);</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="keyword">return</span> Query(i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,t);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> n,m,x;</span><br><span class="line">    <span class="keyword">char</span> op[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        tot = <span class="number">0</span>;</span><br><span class="line">        Build(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">        rep(i,<span class="number">1</span>,m)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// cin &gt;&gt; op;</span></span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,op);</span><br><span class="line">            <span class="keyword">if</span>(op[<span class="number">0</span>] == <span class="string">'D'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">                a[tot++] = x;</span><br><span class="line">                Update(<span class="number">1</span>,x,<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(op[<span class="number">0</span>] == <span class="string">'R'</span>)</span><br><span class="line">                &#123;   </span><br><span class="line">                    x = a[--tot];</span><br><span class="line">                    Update(<span class="number">1</span>,x,<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Query(<span class="number">1</span>,x));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 线段树 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> 线段树区间更新 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>LeetCode初级算法-数组</title>
      <link href="/2018/09/12/Leetcode-junior-sort/"/>
      <url>/2018/09/12/Leetcode-junior-sort/</url>
      <content type="html"><![CDATA[<div class="note danger"><p>LeetCode的评测机貌似配置不同，同一代码多次提交会有不同的耗时且差别较大</p><p>有的简直是像打了鸡血一样跑的飞快，所以下文的“结果”看看就好了，没什么参考价值</p></div><a id="more"></a><h1 id="1、合并两个有序数组"><a href="#1、合并两个有序数组" class="headerlink" title="1、合并两个有序数组"></a>1、合并两个有序数组</h1><h2 id="1-传送门"><a href="#1-传送门" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/8/sorting-and-searching/52/" target="_blank" rel="noopener">合并两个有序数组</a></p></blockquote><h2 id="2-结果1"><a href="#2-结果1" class="headerlink" title="(2).结果1"></a>(2).结果1</h2><blockquote><p>超过99.97%</p><font color="red">评测机的问题有点大。。。用sort怎么还这么快？</font></blockquote><h2 id="3-代码1"><a href="#3-代码1" class="headerlink" title="(3).代码1"></a>(3).代码1</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums1, <span class="keyword">int</span> m, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums2, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = m,j = n<span class="number">-1</span>;j &gt;= <span class="number">0</span>;i++,j--)</span><br><span class="line">            nums1[i] = nums2[j];</span><br><span class="line">        sort(nums1.begin(),nums1.end());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="2-结果2"><a href="#2-结果2" class="headerlink" title="(2).结果2"></a>(2).结果2</h2><blockquote><p>超过00.00%</p><font color="red">占坑 下次写</font></blockquote><h2 id="3-代码2"><a href="#3-代码2" class="headerlink" title="(3).代码2"></a>(3).代码2</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="2、第一个错误的版本"><a href="#2、第一个错误的版本" class="headerlink" title="2、第一个错误的版本"></a>2、第一个错误的版本</h1><h2 id="1-传送门-1"><a href="#1-传送门-1" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/8/sorting-and-searching/52/" target="_blank" rel="noopener">第一个错误的版本</a></p></blockquote><h2 id="2-结果"><a href="#2-结果" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过100.00%</p></blockquote><h2 id="3-代码"><a href="#3-代码" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Forward declaration of isBadVersion API.</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isBadVersion</span><span class="params">(<span class="keyword">int</span> version)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">firstBadVersion</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">1</span>,r = n,mid;</span><br><span class="line">        <span class="keyword">while</span>(l &lt; r) &#123;</span><br><span class="line">            mid = l+(r-l)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(isBadVersion(mid)) &#123;</span><br><span class="line">                r = mid;   </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                l = mid+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;   </span><br><span class="line">        <span class="keyword">return</span> l;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> LeetCode </category>
          
          <category> 初级算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode </tag>
            
            <tag> 排序和搜索 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>LeetCode初级算法-数组</title>
      <link href="/2018/09/12/Leetcode-junior-array/"/>
      <url>/2018/09/12/Leetcode-junior-array/</url>
      <content type="html"><![CDATA[<div class="note danger"><p>LeetCode的评测机貌似配置不同，同一代码多次提交会有不同的耗时且差别较大</p><p>有的简直是像打了鸡血一样跑的飞快，所以下文的“结果”看看就好了，没什么参考价值</p></div><a id="more"></a><h1 id="1、从排序数组中删除重复项"><a href="#1、从排序数组中删除重复项" class="headerlink" title="1、从排序数组中删除重复项"></a>1、从排序数组中删除重复项</h1><h2 id="1-传送门"><a href="#1-传送门" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/1/array/21/" target="_blank" rel="noopener">从排序数组中删除重复项</a></p></blockquote><h2 id="2-结果"><a href="#2-结果" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过99.39%</p></blockquote><h2 id="3-代码"><a href="#3-代码" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">removeDuplicates</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums.empty())</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">1</span>,i = <span class="number">1</span>,sz = nums.size();</span><br><span class="line">        <span class="keyword">for</span>(;i &lt; sz;i++)</span><br><span class="line"> &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i] != nums[i<span class="number">-1</span>])</span><br><span class="line">            &#123; </span><br><span class="line">                num++;</span><br><span class="line">                nums[num<span class="number">-1</span>] = nums[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="2、买卖股票的最佳时机-II"><a href="#2、买卖股票的最佳时机-II" class="headerlink" title="2、买卖股票的最佳时机 II"></a>2、买卖股票的最佳时机 II</h1><h2 id="1-传送门-1"><a href="#1-传送门-1" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/1/array/21/" target="_blank" rel="noopener">从排序数组中删除重复项</a></p></blockquote><h2 id="2-结果-1"><a href="#2-结果-1" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过100.00%</p><p>缺点：代码太长了。。。即使是这种风格，它也太长了</p></blockquote><h2 id="3-代码-1"><a href="#3-代码-1" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sz = prices.size(),p = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">bool</span> buy = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; sz;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">0</span> || i == sz<span class="number">-1</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(prices[i+<span class="number">1</span>] &gt; prices[i])&#123;</span><br><span class="line">                        p -= prices[i];</span><br><span class="line">                        buy = <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(buy)</span><br><span class="line">                        p += prices[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(buy)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(prices[i] &gt; prices[i+<span class="number">1</span>])</span><br><span class="line">                    &#123;</span><br><span class="line">                        buy = <span class="number">0</span>;</span><br><span class="line">                        p += prices[i];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span>(prices[i] &lt; prices[i+<span class="number">1</span>])</span><br><span class="line">                    &#123;</span><br><span class="line">                        buy = <span class="number">1</span>;</span><br><span class="line">                        p -= prices[i];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="3、旋转数组"><a href="#3、旋转数组" class="headerlink" title="3、旋转数组"></a>3、旋转数组</h1><h2 id="1-传送门-2"><a href="#1-传送门-2" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/1/array/23/" target="_blank" rel="noopener">旋转数组</a></p></blockquote><h2 id="2-结果-2"><a href="#2-结果-2" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过99.97%</p><p>缺点：空间复杂读应该还可以继续优化，另外此题说有三种解法，还有两种懒得想了</p></blockquote><h2 id="3-代码-2"><a href="#3-代码-2" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sz = nums.size();</span><br><span class="line">        <span class="keyword">if</span>(k == <span class="number">0</span> || k == sz)</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        <span class="keyword">if</span>(k &gt; sz)</span><br><span class="line">            k %= sz;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator it1,it2,it3;</span><br><span class="line">        it1 = nums.begin();</span><br><span class="line">        it3 = nums.end();</span><br><span class="line">        it2 = it3 - k;</span><br><span class="line">        nums.insert(it1,it2,it3);</span><br><span class="line">        it3 = nums.end();</span><br><span class="line">        it2 = it3-k;</span><br><span class="line">        nums.erase(it2,it3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="4、存在重复"><a href="#4、存在重复" class="headerlink" title="4、存在重复"></a>4、存在重复</h1><h2 id="1-传送门-3"><a href="#1-传送门-3" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/1/array/24/" target="_blank" rel="noopener">存在重复</a></p></blockquote><h2 id="2-结果-3"><a href="#2-结果-3" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过63.83%</p><p>缺点：偷懒了，直接使用了两个STL函数来解决这个问题，结果也如所预料的那样比较慢</p></blockquote><h2 id="3-代码-3"><a href="#3-代码-3" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">containsDuplicate</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sz = nums.size();</span><br><span class="line">        sort(nums.begin(),nums.end());</span><br><span class="line">        <span class="keyword">int</span> m = unique(nums.begin(),nums.end())-nums.begin();</span><br><span class="line">        <span class="keyword">if</span>(m == sz)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="5、只出现一次的数字"><a href="#5、只出现一次的数字" class="headerlink" title="5、只出现一次的数字"></a>5、只出现一次的数字</h1><h2 id="1-传送门-4"><a href="#1-传送门-4" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/1/array/25/" target="_blank" rel="noopener">只出现一次的数字</a></p></blockquote><h2 id="2-结果-4"><a href="#2-结果-4" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过97.67%</p></blockquote><h2 id="3-代码-4"><a href="#3-代码-4" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sz = nums.size();</span><br><span class="line">        <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; sz;i++)</span><br><span class="line">            p ^= nums[i];</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="6、两个数组的交集-II"><a href="#6、两个数组的交集-II" class="headerlink" title="6、两个数组的交集 II"></a>6、两个数组的交集 II</h1><h2 id="1-传送门-5"><a href="#1-传送门-5" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/1/array/26/" target="_blank" rel="noopener">两个数组的交集 II</a></p></blockquote><h2 id="2-结果-5"><a href="#2-结果-5" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过100.00%</p></blockquote><h2 id="3-代码-5"><a href="#3-代码-5" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; intersect(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; num1, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; num2) &#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator pos1,pos2;</span><br><span class="line">        sort(num1.begin(),num1.end());</span><br><span class="line">        sort(num2.begin(),num2.end());</span><br><span class="line">        pos1 = num1.begin();    pos2 = num2.begin();</span><br><span class="line">        <span class="keyword">while</span>(pos1 != num1.end() &amp;&amp; pos2 != num2.end())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(*pos1 == *pos2)</span><br><span class="line">            &#123;</span><br><span class="line">                v.push_back(*pos1);</span><br><span class="line">                pos1++;</span><br><span class="line">                pos2++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(*pos1 &gt; *pos2)</span><br><span class="line">                &#123;</span><br><span class="line">                    pos2++;   </span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                &#123;</span><br><span class="line">                    pos1++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="7、加一"><a href="#7、加一" class="headerlink" title="7、加一"></a>7、加一</h1><h2 id="1-传送门-6"><a href="#1-传送门-6" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/1/array/27/" target="_blank" rel="noopener">加一</a></p></blockquote><h2 id="2-结果-6"><a href="#2-结果-6" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过100.00%</p><p>直接模拟，考虑进位</p></blockquote><h2 id="3-代码-6"><a href="#3-代码-6" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; plusOne(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; digits) &#123;</span><br><span class="line">        <span class="keyword">int</span> sz = digits.size();</span><br><span class="line">        sz--;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(flag &amp;&amp; sz &gt;= <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(digits[sz] == <span class="number">9</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                digits[sz] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                digits[sz] += <span class="number">1</span>;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sz--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)</span><br><span class="line">            digits.insert(digits.begin(),<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> digits;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="8、移动零"><a href="#8、移动零" class="headerlink" title="8、移动零"></a>8、移动零</h1><h2 id="1-传送门-7"><a href="#1-传送门-7" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/1/array/28/" target="_blank" rel="noopener">移动零</a></p></blockquote><h2 id="2-结果-7"><a href="#2-结果-7" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过99.55%</p></blockquote><h2 id="3-代码-7"><a href="#3-代码-7" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">moveZeroes</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> cou = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator it;</span><br><span class="line">        <span class="keyword">for</span>(it = nums.begin();it != nums.end();)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(*it == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cou++;</span><br><span class="line">                nums.erase(it);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                it++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= cou;i++)</span><br><span class="line">            nums.push_back(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="9、两数之和"><a href="#9、两数之和" class="headerlink" title="9、两数之和"></a>9、两数之和</h1><h2 id="1-传送门-8"><a href="#1-传送门-8" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/1/array/29/" target="_blank" rel="noopener">两数之和</a></p></blockquote><h2 id="2-结果-8"><a href="#2-结果-8" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过66.08%</p></blockquote><h2 id="3-代码-8"><a href="#3-代码-8" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; twoSum(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; re(<span class="number">2</span>);</span><br><span class="line">        <span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; m;</span><br><span class="line">        <span class="keyword">int</span> sz = nums.size();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; sz;++i)</span><br><span class="line">            m[nums[i]] = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; sz<span class="number">-1</span>;++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(m[target-nums[i]] &gt; <span class="number">0</span> &amp;&amp; m[target-nums[i]]!= i)</span><br><span class="line">            &#123;</span><br><span class="line">                re[<span class="number">0</span>] = i;</span><br><span class="line">                re[<span class="number">1</span>] = m[target-nums[i]];</span><br><span class="line">                <span class="keyword">return</span> re;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> re;</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="10、有效的数独"><a href="#10、有效的数独" class="headerlink" title="10、有效的数独"></a>10、有效的数独</h1><h2 id="1-传送门-9"><a href="#1-传送门-9" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/1/array/30/" target="_blank" rel="noopener">有效的数独</a></p></blockquote><h2 id="2-结果-9"><a href="#2-结果-9" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过84.09%</p><p>缺点：暴力枚举，复杂度大</p></blockquote><h2 id="3-代码-9"><a href="#3-代码-9" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isValidSudoku</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt;&gt;&amp; board)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; m,m1,m2;</span><br><span class="line">        <span class="comment">// 枚举9个3x3的小宫</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">9</span>;i += <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; <span class="number">9</span>;j += <span class="number">3</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; <span class="number">3</span>;k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> l = <span class="number">0</span>;l &lt; <span class="number">3</span>;l++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(board[i+k][j+l] != <span class="string">'.'</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            m[board[i+k][j+l]-<span class="string">'0'</span>]++;</span><br><span class="line">                            <span class="keyword">if</span>(m[board[i+k][j+l]-<span class="string">'0'</span>] &gt; <span class="number">1</span>)</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                m.clear();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 枚举大的9x9</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">9</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; <span class="number">9</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(board[i][j] != <span class="string">'.'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    m1[board[i][j]-<span class="string">'0'</span>]++;</span><br><span class="line">                    <span class="keyword">if</span>(m1[board[i][j]-<span class="string">'0'</span>] &gt; <span class="number">1</span>)</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            m1.clear();</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; <span class="number">9</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(board[j][i] != <span class="string">'.'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    m2[board[j][i]-<span class="string">'0'</span>]++;</span><br><span class="line">                    <span class="keyword">if</span>(m2[board[j][i]-<span class="string">'0'</span>] &gt; <span class="number">1</span>)</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            m2.clear();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="11、旋转图像"><a href="#11、旋转图像" class="headerlink" title="11、旋转图像"></a>11、旋转图像</h1><h2 id="1-传送门-10"><a href="#1-传送门-10" class="headerlink" title="(1).传送门"></a>(1).传送门</h2><blockquote><p>传送门:<a href="https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/1/array/31/" target="_blank" rel="noopener">旋转图像</a></p></blockquote><h2 id="2-结果-10"><a href="#2-结果-10" class="headerlink" title="(2).结果"></a>(2).结果</h2><blockquote><p>超过24.60%</p><p>牛客网算法课初级班左神有讲</p></blockquote><h2 id="3-代码-10"><a href="#3-代码-10" class="headerlink" title="(3).代码"></a>(3).代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sz = matrix[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">if</span>(sz == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        <span class="keyword">int</span> tR = <span class="number">0</span>,tC = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dR = sz<span class="number">-1</span>,dC = sz<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(tR &lt; dR)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> times = dC-tC;</span><br><span class="line">            <span class="keyword">int</span> tmp;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; times;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                tmp = matrix[tR][tC+i];</span><br><span class="line">                matrix[tR][tC+i] = matrix[dR-i][tC];</span><br><span class="line">                matrix[dR-i][tC] = matrix[dR][dC-i];</span><br><span class="line">                matrix[dR][dC-i] = matrix[tR+i][dC];</span><br><span class="line">                matrix[tR+i][dC] = tmp;</span><br><span class="line">            &#125;</span><br><span class="line">            tR++,tC++,dR--,dC--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> LeetCode </category>
          
          <category> 初级算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>操作系统原理与实践(二)</title>
      <link href="/2018/09/11/Operating-System-two/"/>
      <url>/2018/09/11/Operating-System-two/</url>
      <content type="html"><![CDATA[<h2 id="实验2-操作系统的引导"><a href="#实验2-操作系统的引导" class="headerlink" title="实验2 操作系统的引导"></a>实验2 操作系统的引导</h2><p>课程地址：<a href="https://www.shiyanlou.com/courses/115" target="_blank" rel="noopener">操作系统原理与实践-实验楼</a></p><blockquote><p>《Linux内核完全注释》<a href="https://pan.baidu.com/s/1DMoY0Luv-5vaBNr2QXP7rQ" target="_blank" rel="noopener">下载地址</a>  密码:n6f2</p></blockquote><a id="more"></a><h2 id="一、实验目的"><a href="#一、实验目的" class="headerlink" title="一、实验目的"></a>一、实验目的</h2><ul><li>熟悉hit-oslab实验环境；</li><li>建立对操作系统引导过程的深入认识；</li><li>掌握操作系统的基本开发过程；</li><li>能对操作系统代码进行简单的控制，揭开操作系统的神秘面纱。</li></ul><h2 id="二、实验内容"><a href="#二、实验内容" class="headerlink" title="二、实验内容"></a>二、实验内容</h2><blockquote><p>基本内容：</p><ol><li>阅读《Linux内核完全注释》的第6章，对计算机和Linux 0.11的引导过程进行初步的了解；</li><li>按照下面的要求改写0.11的引导程序bootsect.s</li><li>有兴趣同学可以做做进入保护模式前的设置程序setup.s。</li></ol><p>改写bootsect.s主要完成如下功能：</p><ol><li>bootsect.s能在屏幕上打印一段提示信息“XXX is booting…”，其中XXX是你给自己的操作系统起的名字，例如LZJos、Sunix等（可以上论坛上秀秀谁的OS名字最帅，也可以显示一个特色logo，以表示自己操作系统的与众不同。）</li></ol><p>改写setup.s主要完成如下功能：</p><ol><li>bootsect.s能完成setup.s的载入，并跳转到setup.s开始地址执行。而setup.s向屏幕输出一行”Now we are in SETUP”。</li><li>setup.s能获取至少一个基本的硬件参数（如内存参数、显卡参数、硬盘参数等），将其存放在内存的特定地址，并输出到屏幕上。</li><li>setup.s不再加载Linux内核，保持上述信息显示在屏幕上即可。</li></ol></blockquote><h2 id="三、开始实验"><a href="#三、开始实验" class="headerlink" title="三、开始实验"></a>三、开始实验</h2><div class="note info"><p>引导过程仍然不是很理解，此处略过，日后复习</p></div><h3 id="1-改写”bootsect-s”"><a href="#1-改写”bootsect-s”" class="headerlink" title="1. 改写”bootsect.s”"></a>1. 改写”bootsect.s”</h3><blockquote><p>通过阅读《Linux内核完全注释》的P193-201的代码详细注释可以发现有关显示的字符串的代码在94行</p></blockquote><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-11/43551494.jpg" alt="代码"></p><blockquote><p><del>显然</del>打印的字符串跟 msg1 有关</p><p>继续往下读代码的话可以在第244行找到它，如果没猜错的话，最关键的就是246这一行了  </p></blockquote><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-11/49962227.jpg" alt="msg1"></p><blockquote><p> 现在我们去Ubuntu系统里打开bootsect.s</p></blockquote><div class="note info"><p>bootsect.s与setup.s均在~/oslab/linux-0.11/boot/文件夹下</p></div><blockquote><p>打开bootsect.s后确实可以在第244行找到它</p></blockquote><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-11/72915266.jpg" alt="bootsect.s"></p><div class="note info"><p>编辑器我用的是vim，可能系统自带的有些许问题，需要用apt安装一下新的</p><p>具体方法与.vimrc的配置可以进行百度，在此不作介绍</p><p>配色不太好看，不过重要的是操作系统，所以不用纠结这个</p></div><blockquote><p>现在我们将它改为Dunix is booting … 然后保存</p></blockquote><div class="note danger"><p>如果要显示的字符比较多，记得回到98行对’#’后的数字进行修改</p></div><blockquote><p>然后回到/linux-0.11文件夹执行make命令</p><p>这次会很快，因为我们只修改了一个文件</p></blockquote><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-11/16661410.jpg" alt="make"></p><blockquote><p>然后回到/oslab文件夹启动它</p></blockquote><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-11/73673315.jpg" alt="启动后"></p><div class="note danger"><p>如果第98行的数值设置的过多的话会显示异常</p><p>多很多空格出来</p></div><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-11/74776567.jpg" alt="异常"></p><h3 id="2-改写”setup-s”"><a href="#2-改写”setup-s”" class="headerlink" title="2. 改写”setup.s”"></a>2. 改写”setup.s”</h3><blockquote><p>继续阅读《Linux内核完全注释》P205-212</p><p>在setup.s刚开始的时候(35-36行)添加代码</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mov     ax, #SETUPSEG</span><br><span class="line">   mov     es, ax       !</span><br><span class="line">   mov     ah, #0x03    !首先读取光标</span><br><span class="line">   mov     bh, #0</span><br><span class="line">   int     0x10         !BOIS中断</span><br><span class="line">   mov     cx, #26      !共显示26个字符</span><br><span class="line">   mov     bx, #0x0007  !page 0,attribute 7(normal)</span><br><span class="line">   mov     bp, #msg2    !es:bp寄存器对指向要显示的字符</span><br><span class="line">   mov     ax, #0x1301  !写字符串并移动光标到结尾处</span><br><span class="line">   int     0x10         !BOIS中断</span><br></pre></td></tr></table></figure><div class="note danger"><p>由于还不是很会汇编，因此只能看个大概，可能注释有错误，欢迎指出（如果有人读的话），以后应该会回来修正</p></div><blockquote><p>然后到235行与236行中间添加如下代码</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msg2:</span><br><span class="line">    .byte 13,10</span><br><span class="line">    .ascii &quot;Now we are in SETUP.&quot;</span><br><span class="line">    .byte 13,10,13,10</span><br></pre></td></tr></table></figure><blockquote><p>保存退出</p><p>回到上级文件夹执行make，然后回到/oslab文件夹运行（如上文）</p></blockquote><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-12/91576519.jpg" alt="正确运行"></p><div class="note info"><p>手抖将 .byte 13,10,13,10 输入成了 .byte <font color="red">12</font>,10,13,10</p><p>意外发现12对应的是♀</p></div><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-12/58260957.jpg" alt="有趣"></p><h3 id="3-使”setup”获取硬件参数"><a href="#3-使”setup”获取硬件参数" class="headerlink" title="3. 使”setup”获取硬件参数"></a>3. 使”setup”获取硬件参数</h3><div class="note info"><p>先到这里，日后代码写累了再来研究这一块</p></div>]]></content>
      
      <categories>
          
          <category> 操作系统 </category>
          
          <category> 操作系统原理与实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
            <tag> linux0.11 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>操作系统原理与实践(一)</title>
      <link href="/2018/09/10/Operating-System-one/"/>
      <url>/2018/09/10/Operating-System-one/</url>
      <content type="html"><![CDATA[<h2 id="实验1-熟悉实验环境"><a href="#实验1-熟悉实验环境" class="headerlink" title="实验1 熟悉实验环境"></a>实验1 熟悉实验环境</h2><p>课程地址：<a href="https://www.shiyanlou.com/courses/115" target="_blank" rel="noopener">操作系统原理与实践-实验楼</a></p><blockquote><p>初衷是为了任务驱动学习操作系统，同时记录自己学习过程中碰到的问题，日后补坑。</p><p>初步目标是能够在学期末之前写出来自己的操作系统。</p></blockquote><a id="more"></a><h2 id="一、实验平台"><a href="#一、实验平台" class="headerlink" title="一、实验平台"></a>一、实验平台</h2><blockquote><p>ubuntu-16.04.5-desktop-amd64</p></blockquote><div class="note info"><p>刚安装的系统务必先执行以下两个命令确保系统和软件都更新完毕</p></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt update</span><br><span class="line">$ sudo apt upgrade</span><br></pre></td></tr></table></figure><div class="note info"><p>终端类型使用的是<strong>oh-my-zsh</strong>，可不更换</p><p>更换方法</p></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install git</span><br><span class="line">$ sudo apt-get install zsh</span><br><span class="line">$ wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</span><br><span class="line">$ chsh -s /usr/bin/zsh</span><br></pre></td></tr></table></figure><div class="note info"><p>重启后生效</p></div><h2 id="二、主要工具"><a href="#二、主要工具" class="headerlink" title="二、主要工具"></a>二、主要工具</h2><blockquote><ol><li>x86模拟器Bochs</li><li>GCC编译器</li><li>/GDB调试器</li><li>as86: 汇编语言编译器</li><li>ld86: 汇编语言链接器</li><li>linux-0.11源代码</li></ol></blockquote><div class="note info"><p>以上工具均已打包好<br><a href="https://github.com/DeathKing/hit-oslab" target="_blank" rel="noopener">hit-oslab</a></p></div><h2 id="三、准备工作"><a href="#三、准备工作" class="headerlink" title="三、准备工作"></a>三、准备工作</h2><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h3><blockquote><p>本安装脚本会将实验环境安装在用户目录下，文件名为oslab。如果有特殊需要，请自行移动文件夹位置。注意，请不要使用超级用户执行此安装命令，当有需要时hit-oslab会请求超级用户权限。</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https:<span class="comment">//github.com/DeathKing/hit-oslab.git ~/hit-oslab</span></span><br></pre></td></tr></table></figure><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-10/20619151.jpg" alt="下载"></p><blockquote><p>下载过程可能比$fei$较$chang$慢，待下载完毕后移动到$hit-oslab$文件夹内执行$./setup.sh$命令</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/hit-oslab</span><br><span class="line">$ ./setup.sh</span><br></pre></td></tr></table></figure><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-10/40506884.jpg" alt="setup.sh"></p><blockquote><p>倒计时结束后输入密码便会自动执行命令</p></blockquote><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-10/77462197.jpg" alt="执行命令结束"></p><blockquote><p>此时在用户目录下便会出现$oslab$文件夹，这个便是我们做实验需要使用的环境</p></blockquote><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-10/23659478.jpg" alt="文件夹"></p><h3 id="2-复原"><a href="#2-复原" class="headerlink" title="2.复原"></a>2.复原</h3><blockquote><p>操作系统试验每次需要重置linux-0.11目录，oslab特别添加了重置功能。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># in oslab directory</span><br><span class="line">$ ./run init</span><br></pre></td></tr></table></figure><h2 id="四、开始试验"><a href="#四、开始试验" class="headerlink" title="四、开始试验"></a>四、开始试验</h2><div class="note info"><p>因为所有内容均由脚本自动完成，因此跳过解压缩的步骤</p></div><h3 id="1-编译内核"><a href="#1-编译内核" class="headerlink" title="1.编译内核"></a>1.编译内核</h3><blockquote><p>切换至 ~/oslab/linux-0.11 目录，执行下列命令编译内核</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ make all</span><br></pre></td></tr></table></figure><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-10/15569909.jpg" alt="编译内核"></p><h3 id="2-启动Bochs"><a href="#2-启动Bochs" class="headerlink" title="2.启动Bochs"></a>2.启动Bochs</h3><blockquote><p>切换至 ~/oslab 然后执行下列命令</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./run</span><br></pre></td></tr></table></figure><blockquote><p>按照实验说明应当出现的情况</p></blockquote><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-10/56747692.jpg" alt="应当看到的状况"></p><blockquote><p>在本机操作出现的状况</p></blockquote><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-10/69047350.jpg" alt="本机出现的状况"></p><blockquote><p>提示内容如下</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Next at t=0 (0) </span><br><span class="line">[0x00000000fffffff0] f000:fff0 (unk. ctxt): jmp far f000:e05b         ; ea5be000f0</span><br></pre></td></tr></table></figure><blockquote><p>在输入c与回车以后能够正确进入系统，具体原因将会在我搞清楚以后进行补充</p></blockquote><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-10/78821173.jpg" alt="输入c后的界面"></p><h3 id="3-内核调试"><a href="#3-内核调试" class="headerlink" title="3.内核调试"></a>3.内核调试</h3><blockquote><p>内核调试分为两种模式：汇编级调试和C语言级调试。</p><p>汇编级调试需要执行命令：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./dbg-asm</span><br></pre></td></tr></table></figure><blockquote><p>可以用命令help来查看调试系统用的基本命令。更详细的信息请查阅Bochs使用手册。</p><p>C语言级调试稍微复杂一些。首先执行如下命令：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./dbg-c</span><br></pre></td></tr></table></figure><blockquote><p>然后再打开一个终端窗口，进入oslab目录后，执行：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./rungdb</span><br></pre></td></tr></table></figure><blockquote><p>新终端窗口中运行的是GDB调试器。关于gdb调试器请查阅GDB使用手册。</p></blockquote><div class="note info"><p>此部分内容会在以后进行详细的记录，现在能力有限先略过</p></div><blockquote></blockquote><h3 id="4-Linux-0-11与Ubuntu之间的文件交换"><a href="#4-Linux-0-11与Ubuntu之间的文件交换" class="headerlink" title="4.Linux 0.11与Ubuntu之间的文件交换"></a>4.Linux 0.11与Ubuntu之间的文件交换</h3><blockquote><p>oslab下的hdc-0.11-new.img是0.11内核启动后的根文件系统镜像文件，相当于在bochs虚拟机里装载的硬盘。在Ubuntu上访问其内容的方法是</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ./mount-hdc</span><br></pre></td></tr></table></figure><blockquote><p>之后，hdc目录下就是和0.11内核一模一样的文件系统了，可以读写任何文件（可能有些文件要用sudo才能访问）。读写完毕，不要忘了卸载这个文件系统：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo umount hdc</span><br></pre></td></tr></table></figure></p><p>经过sudo ./mount-hdc这样处理以后，我们可以在Ubuntu的hdc目录下创建一个xxx.c文件，然后利用Ubuntu上的编辑工具（如gedit等）实现对xxx.c文件的编辑工作，在编辑保存以后。执行sudo umount hdc后，再进入Linux 0.11（即run启动bochs以后）就会看到这个xxx.c（即如下图所示），这样就避免了在Linux 0.11上进行编辑xxx.c的麻烦，因为Linux 0.11作为一个很小的操作系统，其上的编辑工具只有vi，使用起来非常不便。</p></blockquote><div class="note info"><p>此部分内容也暂且略过</p></div>]]></content>
      
      <categories>
          
          <category> 操作系统 </category>
          
          <category> 操作系统原理与实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
            <tag> linux0.11 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>主席树模板</title>
      <link href="/2018/09/09/ZX-Tree-Templet/"/>
      <url>/2018/09/09/ZX-Tree-Templet/</url>
      <content type="html"><![CDATA[<h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><blockquote><p>静态: 查询区间第K大</p><p>动态: 带修改的查询区间第K大</p></blockquote><a id="more"></a><h2 id="静态"><a href="#静态" class="headerlink" title="静态"></a>静态</h2><blockquote><p><a href="https://www.luogu.org/problemnew/show/P3834" target="_blank" rel="noopener">P3834【模板】可持久化线段树 1（主席树）</a></p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=a;i&gt;=n;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span>+<span class="number">20</span>;</span><br><span class="line"><span class="keyword">int</span> a[N],b[N],T[N],L[N*<span class="number">20</span>],R[N*<span class="number">20</span>],sum[N*<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">0</span>,n,q,x,y,z,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> rt = ++tot;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        L[rt] = Build(l,mid);</span><br><span class="line">        R[rt] = Build(mid+<span class="number">1</span>,r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> pre,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> rt = ++tot;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    L[rt] = L[pre]; R[rt] = R[pre]; sum[rt] = sum[pre]+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(x &lt;= mid)</span><br><span class="line">            L[rt] = update(L[pre],l,mid,x);</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            R[rt] = update(R[pre],mid+<span class="number">1</span>,r,x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == r)</span><br><span class="line">        <span class="keyword">return</span> l;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> x = sum[L[v]]-sum[L[u]];</span><br><span class="line">    <span class="keyword">if</span>(x &gt;= k)</span><br><span class="line">        <span class="keyword">return</span> query(L[u],L[v],l,mid,k);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">return</span> query(R[u],R[v],mid+<span class="number">1</span>,r,k-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tot = <span class="number">0</span>;</span><br><span class="line">    clr(T,<span class="number">0</span>);   clr(sum,<span class="number">0</span>); clr(L,<span class="number">0</span>);   clr(R,<span class="number">0</span>);   clr(a,<span class="number">0</span>);   clr(b,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;q);</span><br><span class="line">    rep(i,<span class="number">1</span>,n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        b[i] = a[i];</span><br><span class="line">    &#125;   </span><br><span class="line">    sort(b+<span class="number">1</span>,b+<span class="number">1</span>+n);</span><br><span class="line">    m = unique(b+<span class="number">1</span>,b+<span class="number">1</span>+n)-b<span class="number">-1</span>;</span><br><span class="line">    T[<span class="number">0</span>] = Build(<span class="number">1</span>,m);</span><br><span class="line">    rep(i,<span class="number">1</span>,n)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i] = lower_bound(b+<span class="number">1</span>,b+<span class="number">1</span>+m,a[i])-b;</span><br><span class="line">        T[i] = update(T[i<span class="number">-1</span>],<span class="number">1</span>,m,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    rep(i,<span class="number">1</span>,q)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">        <span class="keyword">int</span> p = query(T[x<span class="number">-1</span>],T[y],<span class="number">1</span>,m,z);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,b[p]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动态"><a href="#动态" class="headerlink" title="动态"></a>动态</h2><blockquote><p> <a href="https://www.luogu.org/problemnew/show/P2617" target="_blank" rel="noopener">P2617 Dynamic Rankings</a></p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(a) a&amp;(-a)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">200050</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cnt,siz,dot,idx;</span><br><span class="line"><span class="comment">// 内存分配的下标,不同数值点的个数,总共的点数,修改操作的下标</span></span><br><span class="line"><span class="keyword">int</span> root[N],cpy[N],data[N];</span><br><span class="line"><span class="comment">// 静态主席树的根节点,离散化后的数据,原始数据</span></span><br><span class="line"><span class="keyword">int</span> vir[N],use[N];</span><br><span class="line"><span class="comment">// 树状数组的节点,计算前缀和时向前走的节点</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 因为主席树必须离线,所以将指令存下来</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">order</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">bool</span> typ;   <span class="comment">// biaoji查询还是修改</span></span><br><span class="line">    <span class="keyword">int</span> from,to,k;</span><br><span class="line">&#125;command[N];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span><span class="keyword">int</span> son[<span class="number">2</span>],sum;&#125;tree[N*<span class="number">250</span>];</span><br><span class="line"><span class="comment">// 内存一定要开的足够大,因为在这里静态主席树和树状数组共用这个数组内的点</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span>   <span class="comment">// 建立空树 类似线段树</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> now = cnt++;</span><br><span class="line">    tree[cnt].sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l != r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        tree[now].son[<span class="number">0</span>] = build(l,mid);</span><br><span class="line">        tree[now].son[<span class="number">1</span>] = build(mid+<span class="number">1</span>,r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> now;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> last,<span class="keyword">int</span> pos,<span class="keyword">int</span> val)</span>   <span class="comment">// 更新虚拟节点或者插入静态主席树的函数</span></span></span><br><span class="line"><span class="function"><span class="comment">// 为了方便删除,传入val代表修改的量</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> now = cnt++,tmp = now,mid;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>,r = siz<span class="number">-1</span>;   <span class="comment">// 保存的是离散化后的对应的值的编号</span></span><br><span class="line">    tree[now].sum = tree[last].sum+val;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(pos &lt;= mid)   <span class="comment">// 待插入节点在左子树</span></span><br><span class="line">        &#123;</span><br><span class="line">            tree[now].son[<span class="number">1</span>] = tree[last].son[<span class="number">1</span>];</span><br><span class="line">            <span class="comment">// 那么当前节点的右子树节点和之前的那棵权值线段树共用节点</span></span><br><span class="line">            tree[now].son[<span class="number">0</span>] = cnt++;   <span class="comment">// 向左新开一个节点</span></span><br><span class="line">            now  = tree[now].son[<span class="number">0</span>];</span><br><span class="line">            last = tree[last].son[<span class="number">0</span>];</span><br><span class="line">            r = mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>            <span class="comment">// 待插入节点在右子树 </span></span><br><span class="line">        &#123;</span><br><span class="line">            tree[now].son[<span class="number">0</span>] = tree[last].son[<span class="number">0</span>];</span><br><span class="line">            tree[now].son[<span class="number">1</span>] = cnt++;</span><br><span class="line">            now  = tree[now].son[<span class="number">1</span>];</span><br><span class="line">            last = tree[last].son[<span class="number">1</span>];</span><br><span class="line">            l = mid+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        tree[now].sum = tree[last].sum+val;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> now,<span class="keyword">int</span> pos,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(now &lt;= dot)</span><br><span class="line">    &#123;</span><br><span class="line">        vir[now] = updata(vir[now],pos,val);</span><br><span class="line">        now += lowbit(now);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getsum</span><span class="params">(<span class="keyword">int</span> now)</span>   <span class="comment">// 查询当前点更改值的左子树的大小</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(now &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ret += tree[tree[use[now]].son[<span class="number">0</span>]].sum;</span><br><span class="line">        now -= lowbit(now);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> kth)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left_root  = root[l<span class="number">-1</span>];  <span class="comment">// 静态主席树的两个相减的根节点</span></span><br><span class="line">    <span class="keyword">int</span> right_root = root[r];</span><br><span class="line">    <span class="keyword">int</span> lef = <span class="number">0</span>,rig = siz<span class="number">-1</span>;     <span class="comment">// 查询时左右范围</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = l<span class="number">-1</span>;i;i -= lowbit(i))  use[i] = vir[i];</span><br><span class="line">    <span class="comment">// 初始化更改值的路径</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = r;i;i -= lowbit(i))    use[i] = vir[i];</span><br><span class="line">    <span class="keyword">while</span>(lef &lt; rig)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (lef+rig)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> now_sum = getsum(r)-getsum(l<span class="number">-1</span>)+tree[tree[right_root].son[<span class="number">0</span>]].sum-tree[tree[left_root].son[<span class="number">0</span>]].sum;</span><br><span class="line">        <span class="comment">// 查询当前点的左儿子是否满足达到了k个</span></span><br><span class="line">        <span class="comment">// 在静态主席树和树状数组上一起算</span></span><br><span class="line">        <span class="keyword">if</span>(now_sum &gt;= kth)   <span class="comment">// 达到了</span></span><br><span class="line">        &#123;</span><br><span class="line">            rig = mid;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = l<span class="number">-1</span>;i;i -= lowbit(i))   use[i] = tree[use[i]].son[<span class="number">0</span>];</span><br><span class="line">            <span class="comment">// 将查询范围缩小至左子树内</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = r;i;i -= lowbit(i))     use[i] = tree[use[i]].son[<span class="number">0</span>];</span><br><span class="line">            left_root  = tree[left_root].son[<span class="number">0</span>];   <span class="comment">// 同时静态主席树也要如此</span></span><br><span class="line">            right_root = tree[right_root].son[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>   <span class="comment">// 没达到就在右子树范围内继续查找 </span></span><br><span class="line">        &#123;</span><br><span class="line">            lef = mid+<span class="number">1</span>;</span><br><span class="line">            kth -= now_sum;   <span class="comment">// 因为有了左子树的一部分点,所以要减去</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = l<span class="number">-1</span>;i;i -= lowbit(i))   use[i] = tree[use[i]].son[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = r;i;i -= lowbit(i))     use[i] = tree[use[i]].son[<span class="number">1</span>];</span><br><span class="line">            left_root  = tree[left_root].son[<span class="number">1</span>];</span><br><span class="line">            right_root = tree[right_root].son[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> lef;   <span class="comment">// 返回是第几个离散出来的数据</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">id</span><span class="params">(<span class="keyword">int</span> now)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> lower_bound(cpy,cpy+siz,now)-cpy;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;dot,&amp;num);</span><br><span class="line">    idx = dot;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= dot;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;data[i]);</span><br><span class="line">        cpy[i<span class="number">-1</span>] = data[i];   <span class="comment">// cpy从0开始存方便unique和sort</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">char</span> c[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= num;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,c);</span><br><span class="line">        <span class="keyword">if</span>(c[<span class="number">0</span>] == <span class="string">'Q'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            command[i].typ = <span class="literal">false</span>;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;command[i].from,&amp;command[i].to,&amp;command[i].k);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            command[i].typ = <span class="literal">true</span>;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;command[i].from,&amp;command[i].k);</span><br><span class="line">            cpy[idx++] = command[i].k;   <span class="comment">// 如果是修改的话存入cpy中</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(cpy,cpy+idx);</span><br><span class="line">    siz = unique(cpy,cpy+idx)-cpy;</span><br><span class="line">    root[<span class="number">0</span>] = build(<span class="number">0</span>,siz<span class="number">-1</span>);    <span class="comment">// 建立空静态主席树</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= dot;i++)</span><br><span class="line">        root[i] = updata(root[i<span class="number">-1</span>],id(data[i]),<span class="number">1</span>);   <span class="comment">// 建立满的静态主席树</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= dot;++i)</span><br><span class="line">        vir[i] = root[<span class="number">0</span>];         <span class="comment">// 初始化树状数组</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= num;i++)   <span class="comment">// 处理指令</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!command[i].typ)</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,cpy[query(command[i].from,command[i].to,command[i].k)]);</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            add(command[i].from,id(data[command[i].from]),<span class="number">-1</span>);</span><br><span class="line">            add(command[i].from,id(command[i].k),<span class="number">1</span>);</span><br><span class="line">            data[command[i].from] = command[i].k;   <span class="comment">// 将原数据修改至新数据</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 主席树 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模板 </tag>
            
            <tag> 主席树 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>软件工程导论课设</title>
      <link href="/2018/09/07/Software-Engineering/"/>
      <url>/2018/09/07/Software-Engineering/</url>
      <content type="html"><![CDATA[<h1 id="课程设计题目-三选一"><a href="#课程设计题目-三选一" class="headerlink" title="课程设计题目(三选一)"></a>课程设计题目(三选一)</h1><blockquote><ol><li>学生成绩管理系统;</li><li>火车订票系统;</li><li><font color="red">校园超市进销管理系统;</font></li></ol></blockquote><div class="note info"><p>以小组为单位</p></div><a id="more"></a><h1 id="可行性研究阶段的任务"><a href="#可行性研究阶段的任务" class="headerlink" title="可行性研究阶段的任务"></a>可行性研究阶段的任务</h1><div class="note danger"><p>针对拟设计的系统,画下图</p><ol><li><p>系统流程图</p></li><li><p>数据流图</p></li><li><p>数据字典</p></li></ol></div><h2 id="系统流程图"><a href="#系统流程图" class="headerlink" title="系统流程图"></a>系统流程图</h2><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-19/30312058.jpg" alt="系统流程图-采购与销售"></p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-28/79733857.jpg" alt="111"></p><h2 id="数据流图"><a href="#数据流图" class="headerlink" title="数据流图"></a>数据流图</h2><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-19/22654513.jpg" alt="数据流图-采购与销售"></p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-28/14604016.jpg" alt="12"></p><h2 id="数据字典"><a href="#数据字典" class="headerlink" title="数据字典"></a>数据字典</h2><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-28/13439392.jpg" alt="供货表"></p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-28/59031391.jpg" alt="购物清单"></p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-28/28342721.jpg" alt="销售清单"></p><h1 id="需求分析阶段的任务"><a href="#需求分析阶段的任务" class="headerlink" title="需求分析阶段的任务"></a>需求分析阶段的任务</h1><div class="note danger"><p>针对拟设计的系统,画下图</p><ol><li>实体联系图</li><li>状态转换图</li><li>层次方框图</li></ol></div><h2 id="实体联系图-E-R图"><a href="#实体联系图-E-R图" class="headerlink" title="实体联系图(E-R图)"></a>实体联系图(E-R图)</h2><h3 id="实体与联系"><a href="#实体与联系" class="headerlink" title="实体与联系"></a>实体与联系</h3><blockquote><p>实体: 商品类别、供货商、业务员、商品、仓库<br>联系: 所属、供应、管理、库存、入库、出库、转库</p></blockquote><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><blockquote><p>商品类别(商品类别号,商品类别名)<br>供货商(供货商号,供货商名,供货商地址,联系电话)<br>员工(员工号,员工名,工作,性别)<br>商品(商品号,商品名,商品类别号,商品单位,商品价格,商品数量)<br>仓库(仓库号,仓库名,仓库地址)<br>库存(商品号,商品名,仓库号,仓库名,入库数量,入库时间)<br>入库(商品号,商品名,仓库号,仓库名,入库数量,入库时间)<br>出库(商品号,商品名,仓库号,仓库名,出库数量,出库时间,商品价格)<br>转库(商品号,商品名,原仓库号,目标仓库号,转库数量,转库时间)</p></blockquote><h3 id="E-R图"><a href="#E-R图" class="headerlink" title="E-R图"></a>E-R图</h3><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-8/69311477.jpg" alt="E-R图"></p><h2 id="状态转换图"><a href="#状态转换图" class="headerlink" title="状态转换图"></a>状态转换图</h2><h2 id="层次方框图"><a href="#层次方框图" class="headerlink" title="层次方框图"></a>层次方框图</h2><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-9-8/88760502.jpg" alt="层次方框图"></p><h1 id="总体设计阶段的任务"><a href="#总体设计阶段的任务" class="headerlink" title="总体设计阶段的任务"></a>总体设计阶段的任务</h1><div class="note info"><p>针对拟设计的系统图，使用面向数据流的设计方法导出软件结构。</p></div><h1 id="详细设计阶段的任务"><a href="#详细设计阶段的任务" class="headerlink" title="详细设计阶段的任务"></a>详细设计阶段的任务</h1><blockquote><p>画出程序流程图</p><p>将程序路程图转化为程序流图</p></blockquote>]]></content>
      
      <categories>
          
          <category> 软件工程导论 </category>
          
          <category> 课程设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程设计 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「ACM-ICPC 2018 南京站网络赛 A 题」An Olympian Math Problem</title>
      <link href="/2018/09/05/An-Olympian-Math-Problem/"/>
      <url>/2018/09/05/An-Olympian-Math-Problem/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="https://nanti.jisuanke.com/t/30990" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>Alice, a student of grade $6$, is thinking about an Olympian Math problem, but she feels so despair that she cries. And her classmate, Bob, has no idea about the problem. Thus he wants you to help him. The problem is:</p><p>We denote $k!$: </p><p>$k!=1×2×⋯×(k−1)×k$</p><p>We denote $S$: </p><p>$S=1×1!+2×2!+⋯+<br>(n−1)×(n−1)!$</p><p>Then $S$ module $n$ is <strong><strong><em>__</em></strong></strong></p><p>You are given an integer $n$. </p><p>You have to calculate $S$ modulo $n$.</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The first line contains an integer $T(T≤1000)$, denoting the number of test cases. </p><p>For each test case, there is a line which has an integer nn.</p><p>It is guaranteed that  2≤n≤10^18.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test case, print an integer $S$ modulo $n$.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>2<br>2<br>3</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>1<br>2</p></blockquote><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><blockquote><p>The first test is: $S=1×1!=1$, and 11 modulo $2$ is $1$.</p><p>The second test is: $S=1×1!+2×2!=5$ , and 55 modulo $3$ is $2$.</p></blockquote><h2 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h2><blockquote><p>首先我们知道</p><ol><li>$n!=n*(n-1)!$     and     $n! (mod  n) = 0$</li><li>$x-0=x$   </li></ol><p>下面开始<del>证明</del>（xjb推）<br>$1×1!+2×2!+…+(n-1)×(n-1) = 1×1!+2×2!+…+(n-1)×(n-1) -n!$</p><p>取出最后两项$(n-1)×(n-1)!-n!$  ， 因为$n! = n×(n-1)!$ ,因此可以将最后两项写为$(n-1-n)×(n-1)!=(-1)×(n-1)!$</p><p>现在原式变为$1×1!+2×2!+…+(n-2)×(n-2)!-(n-1)!$,再次取出最后两项$(n-2)×(n-2)!-(n-1)!$,此式可化为$(n-2)×(n-2)!-(n-1)×(n-2)! = (n-2-n+1)×(n-2)!$</p><p>上式最终为$(-1)*(n-2)!$<br>原式变为$1×1!+2×2!+…+(n-3)×(n-3)!-(n-2)!$</p><p>最终会变为$(-1)×1! = -1$</p><p>$(-1)(mod n)=n-1$</p><p>借用其他人的一个过程(<del>主要是因为我不太会markdown</del></p></blockquote><p><img src="https://s1.ax2x.com/2018/09/05/5Bqjhq.png" alt="5Bqjhq.png"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> T,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, n - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ICPC&amp;&amp;CCPC </tag>
            
            <tag> 数论 </tag>
            
            <tag> 递推 </tag>
            
            <tag> 计蒜客 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Different Integers(树状数组)</title>
      <link href="/2018/09/04/Different%20Integers/"/>
      <url>/2018/09/04/Different%20Integers/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="https://www.nowcoder.com/acm/contest/139/J" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>Given a sequence of integers $a_1, a_2, …, a_n$ and $q$ pairs of integers $(l_1, r_1), (l_2, r_2), …, (l_q, r_q)$, find $count(l_1, r_1), count(l_2, r_2), …, count(l_q, r_q) $where $count(i, j)$ is the number of different integers among $a_1, a_2, …, a_i, a_j, …, a_n$.</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The input consists of several test cases and is terminated by end-of-file. The first line of each test cases contains two integers $n$ and $q$. </p><p>The second line contains n integers $a1, a2, …, an$. The i-th of the following $q$ lines contains two integers $li$ and $ri$.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test case, print $q$ integers which denote the result.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>3   2<br>1   2   1<br>1   2<br>1   3<br>4   1<br>1   2   3   4<br>1   3</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>2<br>1<br>3</p></blockquote><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><blockquote><ul><li>$1 ≤ n, q ≤ 10^5$</li><li>$1 ≤ a_i ≤ n$</li><li>$1 ≤ l_i, r_i ≤ n$</li><li>The number of test cases does not exceed 10.</li></ul></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>牛客多校赛第一场的签到题,但是很遗憾当时树状数组不太会用,没能写出来,当时看其他人写的博客也是没能彻底搞懂.</p><p>现在尝试在<a href="https://www.nowcoder.com/acm/contest/profile/3789676#report" target="_blank" rel="noopener">scaufat</a>的题解<a href="https://www.nowcoder.com/discuss/87249?type=101&amp;order=0&amp;pos=2&amp;page=1" target="_blank" rel="noopener">牛客网暑期ACM多校训练营（第一场）J 题解 </a>的基础上重新捋一下思路,添加一些代码注释</p><p>希望能够对树状数组的灵活应用有更深的理解.</p><p>我认为整个题目最关键的地方在于这两个地方</p><blockquote><ul><li><p>维护一个前缀和，pre[i]表示a[1…i]有多少种不同的数字，那么对于a[l…r]的答案就为pre[r] - pre[l-1] + 在a[l…r]和a[1…l-1]同时出现的数字的种类</p></li><li><p>左端每次右移的时候把对应的数的下一个位置加入到数状数组中</p></li></ul></blockquote></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="keyword">int</span> n,q;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="keyword">int</span> pre[N];   <span class="comment">// pre[i]表示数组前i个数有多少种不同的数</span></span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> last[N];  <span class="comment">// 用来计算nxt数组用的辅助数组,记录每个数上一次出现的位置</span></span><br><span class="line"><span class="keyword">int</span> nxt[N];   <span class="comment">// 用来维护数组中每个位置的数下一次出现的位置</span></span><br><span class="line"><span class="keyword">int</span> ans[N];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r,id;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node &amp;b) <span class="keyword">const</span>   <span class="comment">// 将查询按照左端点排序</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>-&gt;l &lt; b.l;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;query[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> bit[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x &lt; N)</span><br><span class="line">        bit[x] += y,x += lowbit(x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x)</span><br><span class="line">        ret += bit[x],x -= lowbit(x);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Query(r)-Query(l<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;q) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        clr(bit,<span class="number">0</span>); clr(vis,<span class="number">0</span>); clr(nxt,<span class="number">0</span>); clr(last,<span class="number">-1</span>);</span><br><span class="line">        <span class="comment">// 输入的同时在后边复制一份</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">            a[i+n] = a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        n *= <span class="number">2</span>;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 我认为这个循环是最神奇的地方</span></span><br><span class="line">        <span class="comment">// 很强大 一个月前看的时候根本没怎么看懂</span></span><br><span class="line">        pre[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 处理前缀和</span></span><br><span class="line">            <span class="keyword">if</span>(!vis[a[i]])   <span class="comment">// 如果没出现过</span></span><br><span class="line">            &#123;</span><br><span class="line">                vis[a[i]] = <span class="literal">true</span>;</span><br><span class="line">                pre[i] = pre[i<span class="number">-1</span>]+<span class="number">1</span>;   <span class="comment">// 类似dp</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>   <span class="comment">// 如果已经出现过 </span></span><br><span class="line">            &#123;</span><br><span class="line">                pre[i] = pre[i<span class="number">-1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 处理nxt[]数组   last[]数组做辅助用</span></span><br><span class="line"><span class="comment">// a[i]首次出现时不会执行此语句 【 ~(-1) = 0 】</span></span><br><span class="line">            <span class="keyword">if</span>(~last[a[i]])   </span><br><span class="line">            &#123;</span><br><span class="line">                nxt[last[a[i]]] = i;</span><br><span class="line">            &#125;</span><br><span class="line">            last[a[i]] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; q;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 因为原来的代码增加query[i].l的值后又交换</span></span><br><span class="line">            <span class="comment">// 了query[i].l与query[i].r的值</span></span><br><span class="line">            <span class="comment">// 我直接在输入时交换一下l与r的值 然后增加r的值</span></span><br><span class="line">            <span class="comment">// 最终的结果是一样的</span></span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;query[i].r,&amp;query[i].l);</span><br><span class="line">            query[i].r += n/<span class="number">2</span>;</span><br><span class="line">            <span class="comment">// 因为在输入完成后会对query[]保存到值按照左端点重新排序</span></span><br><span class="line">            <span class="comment">// 因此需要用query[i].id来记录一下原来的顺序,即i的值</span></span><br><span class="line">            query[i].id = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 按照左端点对query[]进行排序</span></span><br><span class="line">        sort(query,query+q);</span><br><span class="line">        <span class="comment">// 从最左端的1开始向右扫描</span></span><br><span class="line">        <span class="comment">// 每次右移的时候把对应的数的下一个位置加入到数状数组中</span></span><br><span class="line">        <span class="keyword">int</span> now = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; q;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span>(now &lt; query[i].l)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(~nxt[now])</span><br><span class="line">                &#123;</span><br><span class="line">                    update(nxt[now],<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                ++now;</span><br><span class="line">            &#125;</span><br><span class="line">            ans[query[i].id] = pre[query[i].r]-pre[query[i].l<span class="number">-1</span>]+Query(query[i].l,query[i].r);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; q;i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 树状数组 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
            <tag> 牛客网 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>树状数组</title>
      <link href="/2018/09/04/Binary-Indexed-Tree/"/>
      <url>/2018/09/04/Binary-Indexed-Tree/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>参考资料：<a href="http://www.cnblogs.com/RabbitHu/p/BIT.html" target="_blank" rel="noopener">我是传送门</a></p><ol><li>一维树状数组的差分写法</li><li>二维树状数组</li></ol></blockquote><a id="more"></a><div class="note danger"><p><del>注意要差分处理</del></p></div><h2 id="一维树状数组"><a href="#一维树状数组" class="headerlink" title="一维树状数组"></a>一维树状数组</h2><h3 id="1-单点修改-区间查询"><a href="#1-单点修改-区间查询" class="headerlink" title="(1). 单点修改+区间查询"></a>(1). 单点修改+区间查询</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 给位置p增加x</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> x)</span>   </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(p &lt;= n)</span><br><span class="line">        sum[p] += x,p += p&amp;(-p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 求位置p的前缀和</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ask</span><span class="params">(<span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">        res += sum[p],p -= p&amp;(-p);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 区间求和</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">range_ask</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ask(r)-ask(l<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-区间修改-单点查询"><a href="#2-区间修改-单点查询" class="headerlink" title="(2). 区间修改+单点查询"></a>(2). 区间修改+单点查询</h3><blockquote><p>应用“差分”将问题转化</p><p>详情看顶端博客</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(p &lt;= n)</span><br><span class="line">        sum[p] += x,p += p&amp;(-p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 给区间[l,r]加上x</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">range_add</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    add(l,x),add(r+<span class="number">1</span>,-x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ask</span><span class="params">(<span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">        res += sum[p],p -= p&amp;(-p);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-区间修改-区间查询"><a href="#3-区间修改-区间查询" class="headerlink" title="(3). 区间修改+区间查询"></a>(3). 区间修改+区间查询</h3><blockquote><p>继续“差分”</p><p>无论是时间上还是空间上都比带$lazy$标记的线段树要优</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(ll p,ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = p;i &lt;= n;i += i&amp;(-i))</span><br><span class="line">        sum1[i] += x,sum2[i] += x*p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">range_add</span><span class="params">(ll l,ll r,ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    add(l,x),add(r+<span class="number">1</span>,-x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">ask</span><span class="params">(ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = p;i;i -= i&amp;(-i))</span><br><span class="line">        res += (p+<span class="number">1</span>)*sum1[i]-sum2[i];</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">range_ask</span><span class="params">(ll l,ll r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ask(r)-ask(l<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二维树状数组"><a href="#二维树状数组" class="headerlink" title="二维树状数组"></a>二维树状数组</h2><blockquote><p>$tree[x][y]$ : 记录右下角为$(x,y)$,高为lowbit(x),宽为lowbit(y)的区间的区间和</p></blockquote><h3 id="1-单点修改-区间查询-1"><a href="#1-单点修改-区间查询-1" class="headerlink" title="(1). 单点修改+区间查询"></a>(1). 单点修改+区间查询</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> memo_y = y;</span><br><span class="line">    <span class="keyword">while</span>(x &lt;= n)</span><br><span class="line">    &#123;</span><br><span class="line">        y = memo_y;</span><br><span class="line">        <span class="keyword">while</span>(y &lt;= m)</span><br><span class="line">        tree[x][y] += z,y += y&amp;(-y);</span><br><span class="line">        x += x&amp;(-x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 求左上角为(1,1)右下角为(x,y)的矩阵和</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ask</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>,memo_y = y;</span><br><span class="line">    <span class="keyword">while</span>(x)</span><br><span class="line">    &#123;</span><br><span class="line">        y = memo_y;</span><br><span class="line">        <span class="keyword">while</span>(y)</span><br><span class="line">            res += tree[x][y],y -= y&amp;(-y);</span><br><span class="line">        x -= x&amp;(-x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">range_ask</span><span class="params">(ll xa, ll ya, ll xb, ll yb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ask(xb,yb) - ask(xb,ya - <span class="number">1</span>) - ask(xa - <span class="number">1</span>,yb) + ask(xa - <span class="number">1</span>,ya - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-区间修改-单点查询-1"><a href="#2-区间修改-单点查询-1" class="headerlink" title="(2). 区间修改+单点查询"></a>(2). 区间修改+单点查询</h3><blockquote><p>我们对于一维数组进行差分，是为了使差分数组前缀和等于原数组对应位置的元素。</p><p>那么如何对二维数组进行差分呢？可以针对二维前缀和的求法来设计方案。</p><p>二维前缀和:</p></blockquote><p>$sum[i][j]=sum[i−1][j]+sum[i][j−1]−sum[i−1][j−1]+a[i][j]$</p><blockquote><p>那么我们可以令差分数组$d[i][j]$ 表示 $a[i][j]$ 与 $a[i−1][j]+a[i][j−1]−a[i−1][j−1]$ 的差。</p><p>例如下面这个矩阵</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1  4  8</span><br><span class="line">6  7  2</span><br><span class="line">3  9  5</span><br></pre></td></tr></table></figure><blockquote><p> 对应的差分数组就是</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> 1  3  4</span><br><span class="line"> 5 -2 -9</span><br><span class="line">-3  5  1</span><br></pre></td></tr></table></figure><blockquote><p>当我们想要将一个矩阵加上x时，怎么做呢？<br>下面是给最中间的3*3矩阵加上x时，差分数组的变化：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0  0  0  0  0</span><br><span class="line">0 +x  0  0 -x</span><br><span class="line">0  0  0  0  0</span><br><span class="line">0  0  0  0  0</span><br><span class="line">0 -x  0  0 +x</span><br></pre></td></tr></table></figure><blockquote><p>这样给修改差分，造成的效果就是：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0  0  0  0  0</span><br><span class="line">0  x  x  x  0</span><br><span class="line">0  x  x  x  0</span><br><span class="line">0  x  x  x  0</span><br><span class="line">0  0  0  0  0</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> memo_y = y;</span><br><span class="line">    <span class="keyword">while</span>(x &lt;= n)</span><br><span class="line">    &#123;</span><br><span class="line">        y = memo_y;</span><br><span class="line">        <span class="keyword">while</span>(y &lt;= m)</span><br><span class="line">        tree[x][y] += z,y += y&amp;(-y);</span><br><span class="line">        x += x&amp;(-x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">range_add</span><span class="params">(<span class="keyword">int</span> xa,<span class="keyword">int</span> ya,<span class="keyword">int</span> xb,<span class="keyword">int</span> yb,<span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    add(xa,ya,z);</span><br><span class="line">    add(xa,yb+<span class="number">1</span>,-z);</span><br><span class="line">    add(xb+<span class="number">1</span>,ya,-z);</span><br><span class="line">    add(xb+<span class="number">1</span>,yb+<span class="number">1</span>,z);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ask</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>,memo_y = y;</span><br><span class="line">    <span class="keyword">while</span>(x)</span><br><span class="line">    &#123;</span><br><span class="line">        y = memo_y;</span><br><span class="line">        <span class="keyword">while</span>(y)</span><br><span class="line">            res += tree[x][y],y -= y&amp;(-y);</span><br><span class="line">        x -= x&amp;(-x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-区间修改-区间查询-1"><a href="#3-区间修改-区间查询-1" class="headerlink" title="(3). 区间修改+区间查询"></a>(3). 区间修改+区间查询</h3><blockquote><p>开<font color="red">四个</font>树状数组,分别维护</p><p>$d[i][j], d[i][j]∗i, d[i][j]∗j, d[i][j]∗i∗j$</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">205</span>;</span><br><span class="line">ll n,m,Q;</span><br><span class="line">ll t1[N][N],t2[N][N],t3[N][N],t4[N][N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(ll x,ll y,ll z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> X = x;X &lt;= n;X += X&amp;(-X))</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> Y = y;Y &lt;= m;Y += Y&amp;(-Y))</span><br><span class="line">        &#123;</span><br><span class="line">            t1[X][Y] += z;</span><br><span class="line">            t2[X][Y] += z*x;</span><br><span class="line">            t3[X][Y] += z*y;</span><br><span class="line">            t4[X][Y] += z*x*y;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">range_add</span><span class="params">(ll xa,ll ya,ll xb,ll yb,ll z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    add(xa,ya,z);</span><br><span class="line">    add(xa,yb+<span class="number">1</span>,-z);</span><br><span class="line">    add(xb+<span class="number">1</span>,ya,-z);</span><br><span class="line">    add(xb+<span class="number">1</span>,yb+<span class="number">1</span>,z);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">ask</span><span class="params">(ll x,ll y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = x;i;i -= i&amp;(-i))</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = y;j;j -= j&amp;(-j))</span><br><span class="line">            res += (x+<span class="number">1</span>)*(y+<span class="number">1</span>)*t1[i][j]</span><br><span class="line">            - (y+<span class="number">1</span>)*t2[i][j] - (x+<span class="number">1</span>)*t3[i][j]</span><br><span class="line">            + t4[i][j];</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">range_ask</span><span class="params">(ll xa,ll ya,ll xb,ll yb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ask(xb,yb) - ask(xb,ya<span class="number">-1</span>) - ask(xa<span class="number">-1</span>,yb) </span><br><span class="line">           + ask(xa<span class="number">-1</span>,ya<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 树状数组 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU5658 CA Loves Palindromic(回文树)</title>
      <link href="/2018/09/03/HDU5658-CA-Loves-Palindromic/"/>
      <url>/2018/09/03/HDU5658-CA-Loves-Palindromic/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5658" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>CA loves strings, especially loves the palindrome strings. One day he gets a string, he wants to know how many palindromic substrings in the substring $S[l,r]$. Attantion, each same palindromic substring can only be counted once.</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>First line contains $T$ denoting the number of testcases. $T$ testcases follow. For each testcase: First line contains a string $S$. We ensure that it is contains only with lower case letters. Second line contains a interger $Q$, denoting the number of queries. Then $Q$ lines follow, In each line there are two intergers $l,r$, denoting the substring which is queried. $1≤T≤10$, $1≤length≤1000, 1≤Q≤100000, 1≤l≤r≤length$</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each testcase, output the answer in $Q$ lines.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>1<br>abba<br>2<br>1 2<br>1 3</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>2<br>3</p></blockquote><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><blockquote><p>In first query, the palindromic substrings in the substring $S[1,2]$ are “a”,”b”.<br>In second query, the palindromic substrings in the substring $S[1,2]$ are “a”,”b”,”bb”.<br>Note that the substring “b” appears twice, but only be counted once.<br>You may need an input-output optimization.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>利用回文树的性质暴力预处理所有子串</p><p>每次查询都是$0(1)$的复杂度</p><blockquote><p>$ 不同回文子串的数量 = P - 2 $</p></blockquote></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  C.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.hdu.edu.cn/showproblem.php?pid=5658</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/09/03 04时11分41秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=a;i&gt;=n;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">26</span>;</span><br><span class="line"><span class="keyword">char</span> s[MAXN];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next[N];   <span class="comment">// next指针,next指针和字典树类似,指向的串为</span></span><br><span class="line">                   <span class="comment">// 当前穿两端加上同一个字符构成</span></span><br><span class="line">    <span class="keyword">int</span> fail;      <span class="comment">// fail指针,失配后跳转到fail指针指向的节点</span></span><br><span class="line">    <span class="keyword">int</span> cnt;       <span class="comment">// 表示节点i的本质不同的串的个数</span></span><br><span class="line">                   <span class="comment">// 建树时求出的不是完全的，最后Count()函数跑一遍以后才是正确的</span></span><br><span class="line">    <span class="keyword">int</span> num;       <span class="comment">// 表示以节点i表示的最长回文串的最右端点为回文串结尾的回文个数</span></span><br><span class="line">    <span class="keyword">int</span> len;       <span class="comment">// 表示以当前节点表示的最长回文串长度（一个节点表示一个回文串）</span></span><br><span class="line">    <span class="keyword">int</span> S;         <span class="comment">// 存放添加的字符</span></span><br><span class="line">&#125;pam[MAXN];</span><br><span class="line"><span class="keyword">int</span> last;   <span class="comment">// 指向新添加一个字母后所形成的最长回文串表示的节点</span></span><br><span class="line"><span class="keyword">int</span> n;      <span class="comment">// 表示添加的字符个数</span></span><br><span class="line"><span class="keyword">int</span> p;      <span class="comment">// 表示添加的节点个数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">newnode</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i++)</span><br><span class="line">        pam[p].next[i] = <span class="number">0</span>;</span><br><span class="line">    pam[p].cnt = <span class="number">0</span>;</span><br><span class="line">    pam[p].num = <span class="number">0</span>;</span><br><span class="line">    pam[p].len = x;</span><br><span class="line">    <span class="keyword">return</span> p++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p = <span class="number">0</span>;</span><br><span class="line">    newnode(<span class="number">0</span>);</span><br><span class="line">    newnode(<span class="number">-1</span>);</span><br><span class="line">    last = <span class="number">0</span>;</span><br><span class="line">    n = <span class="number">0</span>;</span><br><span class="line">    pam[n].S = <span class="number">-1</span>;   <span class="comment">// 开头存放一个字符集中没有的字符,减少特判</span></span><br><span class="line">    pam[<span class="number">0</span>].fail = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_fail</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(pam[n-pam[x].len<span class="number">-1</span>].S != pam[n].S)</span><br><span class="line">        x = pam[x].fail;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    c -= <span class="string">'a'</span>;</span><br><span class="line">    pam[++n].S = c;</span><br><span class="line">    <span class="keyword">int</span> cur = get_fail(last);   <span class="comment">// 通过上一个回文串找这个回文串的匹配位置</span></span><br><span class="line">    <span class="keyword">if</span>(!pam[cur].next[c])       <span class="comment">// 如果这个回文串没有出现过，说明出现了</span></span><br><span class="line">                                <span class="comment">// 一个新的本子不同的回文串</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> now = newnode(pam[cur].len+<span class="number">2</span>);   <span class="comment">// 新建节点</span></span><br><span class="line">        pam[now].fail = pam[get_fail(pam[cur].fail)].next[c];   </span><br><span class="line">        <span class="comment">// 和AC自动机一样建立fil指针,以便失败后回跳</span></span><br><span class="line">        pam[cur].next[c] = now;</span><br><span class="line">        pam[now].num = pam[pam[now].fail].num+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    last = pam[cur].next[c];</span><br><span class="line">    pam[last].cnt++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Count</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = p<span class="number">-1</span>;i &gt;= <span class="number">0</span>;--i)</span><br><span class="line">    &#123;</span><br><span class="line">        pam[pam[i].fail].cnt += pam[i].cnt;</span><br><span class="line">        <span class="comment">// 父亲累加儿子才cnt,因为如果fail[v] = u , 则u一定是v的子回文串</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> T,que,l,r;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> pr[<span class="number">1010</span>][<span class="number">1010</span>];</span><br><span class="line">    <span class="built_in">memset</span>(pr,<span class="number">0</span>,<span class="keyword">sizeof</span> pr);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            Init();</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i;j &lt; len;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                Add(s[j]);</span><br><span class="line">                pr[i][j] = p<span class="number">-2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;que);</span><br><span class="line">        <span class="keyword">while</span>(que--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;l,&amp;r);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,pr[l<span class="number">-1</span>][r<span class="number">-1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 字符串 </category>
          
          <category> 回文树 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> 回文树 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>回文树</title>
      <link href="/2018/09/03/Palindromic-Tree/"/>
      <url>/2018/09/03/Palindromic-Tree/</url>
      <content type="html"><![CDATA[<h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><blockquote><p>1.求串S<font color="red">前缀</font>font&gt;0~i内本质不同回文串的个数（两个串长度不同或者长度相同且至少有一个字符不同便是本质不同）</p><p>2.求串S内每一个本质不同回文串出现的次数</p><p>3.求串S内回文串的个数（其实就是1和2结合起来）</p><p>4.求以下标i结尾的回文串的个数</p><blockquote><p>参考资料:</p><p><a href="https://blog.csdn.net/u013368721/article/details/42100363" target="_blank" rel="noopener">Palindromic Tree——回文树【处理一类回文串问题的强力工具】</a></p><p>17年国家集训队论文《回文树及其应用》</p></blockquote></blockquote><a id="more"></a><h2 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h2><blockquote><p>1.len 表示编号为i的节点表示的回文串的长度（一个节点表示一个回文串）</p><p>2.next 表示编号为i的节点表示的回文串在两边添加字符c以后变成的回文串的编号（和字典树类似）。</p><p>3.fail 表示节点i失配以后跳转不等于自身的节点i表示的回文串的最长后缀回文串（和AC自动机类似）。</p><p>4.cnt 表示节点i表示的本质不同的串的个数（建树时求出的不是完全的，最后count()函数跑一遍以后才是正确的）</p><p>5.num 表示以节点i表示的最长回文串的最右端点为回文串结尾的回文串个数。</p><p>6.last 指向新添加一个字母后所形成的最长回文串表示的节点。</p><p>7.S 表示第i次添加的字符（一开始设S[0] = -1（可以是任意一个在串S中不会出现的字符））。</p><p>8.p 表示添加的节点个数。</p><p>9.n 表示添加的字符个数。</p></blockquote><div class="note danger"><p>由于代码风格不同</p><p>本文全部代码均由上文博客地址中的代码改写而成</p><p><strong><font color="red" size="6">缺点: 速度慢</font></strong></p><p>例如:  <a href="https://vjudge.net/problem/UESTC-1999" target="_blank" rel="noopener">UESTC-1999</a></p><blockquote><p>上边的为我的模板的提交结果 TLE<br>下边的为改为原博主的模板后的提交结果,1421ms飘过<br>时限1500ms</p></blockquote><div class="table-container"><table><thead><tr><th>Status</th><th>Length</th><th>Submitted</th><th>RemoteRunId</th></tr></thead><tbody><tr><td>Time Limit Exceeded on test 59</td><td>3139</td><td>2018-09-03 01:39:57</td><td>432786</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>Status</th><th>Time</th><th>Memory</th><th>Length</th><th>Submitted</th><th>RemoteRunId</th></tr></thead><tbody><tr><td>Accepted</td><td>1421ms</td><td>1524kB</td><td>2827</td><td>2018-09-03 01:51:36</td><td>432792</td></tr></tbody></table></div></div><h2 id="预定义"><a href="#预定义" class="headerlink" title="预定义"></a>预定义</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">26</span>;</span><br><span class="line"><span class="keyword">char</span> s[MAXN];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next[N];   <span class="comment">// next指针,next指针和字典树类似,指向的串为</span></span><br><span class="line">                   <span class="comment">// 当前穿两端加上同一个字符构成</span></span><br><span class="line">    <span class="keyword">int</span> fail;      <span class="comment">// fail指针,失配后跳转到fail指针指向的节点</span></span><br><span class="line">    <span class="keyword">int</span> cnt;       <span class="comment">// 表示节点i的本质不同的串的个数</span></span><br><span class="line">                   <span class="comment">// 建树时求出的不是完全的，最后Count()函数跑一遍以后才是正确的</span></span><br><span class="line">    <span class="keyword">int</span> num;       <span class="comment">// 表示以节点i表示的最长回文串的最右端点为回文串结尾的回文个数</span></span><br><span class="line">    <span class="keyword">int</span> len;       <span class="comment">// 表示以当前节点表示的最长回文串长度（一个节点表示一个回文串）</span></span><br><span class="line">    <span class="keyword">int</span> S;         <span class="comment">// 存放添加的字符</span></span><br><span class="line">&#125;pam[MAXN];</span><br><span class="line"><span class="keyword">int</span> last;   <span class="comment">// 指向新添加一个字母后所形成的最长回文串表示的节点</span></span><br><span class="line"><span class="keyword">int</span> n;      <span class="comment">// 表示添加的字符个数</span></span><br><span class="line"><span class="keyword">int</span> p;      <span class="comment">// 表示添加的节点个数</span></span><br></pre></td></tr></table></figure><h2 id="新建节点"><a href="#新建节点" class="headerlink" title="新建节点"></a>新建节点</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">newnode</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i++)</span><br><span class="line">        pam[p].next[i] = <span class="number">0</span>;</span><br><span class="line">    pam[p].cnt = <span class="number">0</span>;</span><br><span class="line">    pam[p].num = <span class="number">0</span>;</span><br><span class="line">    pam[p].len = x;</span><br><span class="line">    <span class="keyword">return</span> p++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p = <span class="number">0</span>;</span><br><span class="line">    newnode(<span class="number">0</span>);</span><br><span class="line">    newnode(<span class="number">-1</span>);</span><br><span class="line">    last = <span class="number">0</span>;</span><br><span class="line">    n = <span class="number">0</span>;</span><br><span class="line">    pam[n].S = <span class="number">-1</span>;   <span class="comment">// 开头存放一个字符集中没有的字符,减少特判</span></span><br><span class="line">    pam[<span class="number">0</span>].fail = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="构造失配指针"><a href="#构造失配指针" class="headerlink" title="构造失配指针"></a>构造失配指针</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_fail</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(pam[n-pam[x].len<span class="number">-1</span>].S != pam[n].S)</span><br><span class="line">        x = pam[x].fail;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加字母"><a href="#添加字母" class="headerlink" title="添加字母"></a>添加字母</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    c -= <span class="string">'a'</span>;</span><br><span class="line">    pam[++n].S = c;</span><br><span class="line">    <span class="keyword">int</span> cur = get_fail(last);   <span class="comment">// 通过上一个回文串找这个回文串的匹配位置</span></span><br><span class="line">    <span class="keyword">if</span>(!pam[cur].next[c])       <span class="comment">// 如果这个回文串没有出现过，说明出现了</span></span><br><span class="line">                                <span class="comment">// 一个新的本子不同的回文串</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> now = newnode(pam[cur].len+<span class="number">2</span>);   <span class="comment">// 新建节点</span></span><br><span class="line">        pam[now].fail = pam[get_fail(pam[cur].fail)].next[c];   </span><br><span class="line">        <span class="comment">// 和AC自动机一样建立fil指针,以便失败后回跳</span></span><br><span class="line">        pam[cur].next[c] = now;</span><br><span class="line">        pam[now].num = pam[pam[now].fail].num+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    last = pam[cur].next[c];</span><br><span class="line">    pam[last].cnt++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Count函数"><a href="#Count函数" class="headerlink" title="Count函数"></a>Count函数</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Count</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = p<span class="number">-1</span>;i &gt;= <span class="number">0</span>;--i)</span><br><span class="line">    &#123;</span><br><span class="line">        pam[pam[i].fail].cnt += pam[i].cnt;</span><br><span class="line">        <span class="comment">// 父亲累加儿子才cnt,因为如果fail[v] = u , 则u一定是v的子回文串</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);   <span class="comment">// 读入字符串</span></span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">    Init();          <span class="comment">// 初始化</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">        Add(s[i]);</span><br><span class="line">    Count();         <span class="comment">// Count()函数跑一遍cnt的值以后才是正确的</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"balabalabala~~~"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="原文模板"><a href="#原文模板" class="headerlink" title="原文模板"></a>原文模板</h2><blockquote><font color="red" size="6">速度比我改写的要快</font></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">100005</span> ;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">26</span> ;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Palindromic_Tree</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> next[MAXN][N] ;<span class="comment">//next指针，next指针和字典树类似，指向的串为当前串两端加上同一个字符构成</span></span><br><span class="line"><span class="keyword">int</span> fail[MAXN] ;<span class="comment">//fail指针，失配后跳转到fail指针指向的节点</span></span><br><span class="line"><span class="keyword">int</span> cnt[MAXN] ;</span><br><span class="line"><span class="keyword">int</span> num[MAXN] ;</span><br><span class="line"><span class="keyword">int</span> len[MAXN] ;<span class="comment">//len[i]表示节点i表示的回文串的长度</span></span><br><span class="line"><span class="keyword">int</span> S[MAXN] ;<span class="comment">//存放添加的字符</span></span><br><span class="line"><span class="keyword">int</span> last ;<span class="comment">//指向上一个字符所在的节点，方便下一次add</span></span><br><span class="line"><span class="keyword">int</span> n ;<span class="comment">//字符数组指针</span></span><br><span class="line"><span class="keyword">int</span> p ;<span class="comment">//节点指针</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">newnode</span> <span class="params">( <span class="keyword">int</span> l )</span> </span>&#123;<span class="comment">//新建节点</span></span><br><span class="line"><span class="keyword">for</span> ( <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; N ; ++ i ) next[p][i] = <span class="number">0</span> ;</span><br><span class="line">cnt[p] = <span class="number">0</span> ;</span><br><span class="line">num[p] = <span class="number">0</span> ;</span><br><span class="line">len[p] = l ;</span><br><span class="line"><span class="keyword">return</span> p ++ ;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span> <span class="params">()</span> </span>&#123;<span class="comment">//初始化</span></span><br><span class="line">p = <span class="number">0</span> ;</span><br><span class="line">newnode (  <span class="number">0</span> ) ;</span><br><span class="line">newnode ( <span class="number">-1</span> ) ;</span><br><span class="line">last = <span class="number">0</span> ;</span><br><span class="line">n = <span class="number">0</span> ;</span><br><span class="line">S[n] = <span class="number">-1</span> ;<span class="comment">//开头放一个字符集中没有的字符，减少特判</span></span><br><span class="line">fail[<span class="number">0</span>] = <span class="number">1</span> ;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_fail</span> <span class="params">( <span class="keyword">int</span> x )</span> </span>&#123;<span class="comment">//和KMP一样，失配后找一个尽量最长的</span></span><br><span class="line"><span class="keyword">while</span> ( S[n - len[x] - <span class="number">1</span>] != S[n] ) x = fail[x] ;</span><br><span class="line"><span class="keyword">return</span> x ;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">( <span class="keyword">int</span> c )</span> </span>&#123;</span><br><span class="line">c -= <span class="string">'a'</span> ;</span><br><span class="line">S[++ n] = c ;</span><br><span class="line"><span class="keyword">int</span> cur = get_fail ( last ) ;<span class="comment">//通过上一个回文串找这个回文串的匹配位置</span></span><br><span class="line"><span class="keyword">if</span> ( !next[cur][c] ) &#123;<span class="comment">//如果这个回文串没有出现过，说明出现了一个新的本质不同的回文串</span></span><br><span class="line"><span class="keyword">int</span> now = newnode ( len[cur] + <span class="number">2</span> ) ;<span class="comment">//新建节点</span></span><br><span class="line">fail[now] = next[get_fail ( fail[cur] )][c] ;<span class="comment">//和AC自动机一样建立fail指针，以便失配后跳转</span></span><br><span class="line">next[cur][c] = now ;</span><br><span class="line">num[now] = num[fail[now]] + <span class="number">1</span> ;</span><br><span class="line">&#125;</span><br><span class="line">last = next[cur][c] ;</span><br><span class="line">cnt[last] ++ ;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">count</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> ( <span class="keyword">int</span> i = p - <span class="number">1</span> ; i &gt;= <span class="number">0</span> ; -- i ) cnt[fail[i]] += cnt[i] ;</span><br><span class="line"><span class="comment">//父亲累加儿子的cnt，因为如果fail[v]=u，则u一定是v的子回文串！</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; ;</span><br></pre></td></tr></table></figure><h2 id="练手习题"><a href="#练手习题" class="headerlink" title="练手习题"></a>练手习题</h2><blockquote><p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3676" target="_blank" rel="noopener">BZOJ3676</a> </p><div class="table-container"><table><thead><tr><th>RunID</th><th>Problem</th><th>Result</th><th>Memory</th><th>Time</th><th>Submit_Time</th></tr></thead><tbody><tr><td>2937794</td><td><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=3676" target="_blank" rel="noopener">3676</a></td><td>Accepted</td><td>38036 kb</td><td>1252 ms</td><td>2018-09-03 00:59:48</td></tr></tbody></table></div><p><a href="https://vjudge.net/problem/UESTC-1999" target="_blank" rel="noopener">UESTC-1999</a></p><div class="table-container"><table><thead><tr><th>Status</th><th>Time</th><th>Memory</th><th>Length</th><th>Submitted</th><th>RemoteRunId</th></tr></thead><tbody><tr><td>Accepted</td><td>1421ms</td><td>1524kB</td><td>2827</td><td>2018-09-03 01:51:36</td><td>432792</td></tr></tbody></table></div></blockquote>]]></content>
      
      <categories>
          
          <category> 字符串 </category>
          
          <category> 回文树 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模板 </tag>
            
            <tag> 回文树 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU2896 病毒侵袭(AC自动机)</title>
      <link href="/2018/09/02/HDU2896/"/>
      <url>/2018/09/02/HDU2896/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=2896" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>当太阳的光辉逐渐被月亮遮蔽，世界失去了光明，大地迎来最黑暗的时刻。。。。在这样的时刻，人们却异常兴奋——我们能在有生之年看到500年一遇的世界奇观，那是多么幸福的事儿啊~~<br>但网路上总有那么些网站，开始借着民众的好奇心，打着介绍日食的旗号，大肆传播病毒。小t不幸成为受害者之一。小t如此生气，他决定要把世界上所有带病毒的网站都找出来。当然，谁都知道这是不可能的。小t却执意要完成这不能的任务，他说：“子子孙孙无穷匮也！”（愚公后继有人了）。<br>万事开头难，小t收集了好多病毒的特征码，又收集了一批诡异网站的源码，他想知道这些网站中哪些是有病毒的，又是带了怎样的病毒呢？顺便还想知道他到底收集了多少带病毒的网站。这时候他却不知道何从下手了。所以想请大家帮帮忙。小t又是个急性子哦，所以解决问题越快越好哦~~</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行，一个整数$N（1&lt;=N&lt;=500）$，表示病毒特征码的个数。 接下来N行，每行表示一个病毒特征码，特征码字符串长度在$20—200$之间。 每个病毒都有一个编号，依此为$1-N$。 不同编号的病毒特征码不会相同。 在这之后一行，有一个整数$M（1&lt;=M&lt;=1000）$，表示网站数。 接下来$M$行，每行表示一个网站源码，源码字符串长度在$7000—10000$之间。 每个网站都有一个编号，依此为$1—M$。 以上字符串中字符都是ASCII码可见字符（不包括回车）。 </p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>依次按如下格式输出按网站编号从小到大输出，带病毒的网站编号和包含病毒编号，每行一个含毒网站信息。 web 网站编号: 病毒编号 病毒编号 … </p><p>冒号后有一个空格，病毒编号按从小到大排列，两个病毒编号之间用一个空格隔开，如果一个网站包含病毒，病毒数不会超过3个。 最后一行输出统计信息，如下格式 </p><p>total: 带病毒网站数 </p><p>冒号后有一个空格。</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>3<br>aaa<br>bbb<br>ccc<br>2<br>aaabbbccc<br>bbaacc</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>web 1: 1 2 3<br>total: 1</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>AC自动机模板题，只需要对AC自动机的代码稍微进行一下修改即可</p><p>但是有一些细节需要注意</p></blockquote><div class="note danger"><ul><li>三个坑点<ul><li>字符串中字符都是ASCII码可见字符（不包括回车）</li><li>按网站编号从小到大输出</li><li>需要多次进行匹配，因此不可以删除字符串的序列标记(详情键见代码)</li></ul></li></ul></div><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  B.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.hdu.edu.cn/showproblem.php?pid=2896</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/09/02 11时45分16秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=a;i&gt;=n;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">100</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> son[<span class="number">128</span>];</span><br><span class="line">    <span class="keyword">int</span> fail;</span><br><span class="line">    <span class="keyword">int</span> count;</span><br><span class="line">    <span class="keyword">int</span> number;</span><br><span class="line">&#125;ac[N];</span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(ac[i].son,<span class="number">0</span>,<span class="keyword">sizeof</span> ac[i].son);</span><br><span class="line">        ac[i].count = <span class="number">0</span>;</span><br><span class="line">        ac[i].fail = <span class="number">0</span>;</span><br><span class="line">        ac[i].number = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">char</span> *s,<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">int</span> now = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> tmp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        tmp = s[i];</span><br><span class="line">        <span class="keyword">if</span>(ac[now].son[tmp] == <span class="number">0</span>)</span><br><span class="line">            ac[now].son[tmp] = ++tot;</span><br><span class="line">        now = ac[now].son[tmp];</span><br><span class="line">    &#125;</span><br><span class="line">    ac[now].count++;</span><br><span class="line">    ac[now].number = num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MakeFail</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">128</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ac[<span class="number">0</span>].son[i] != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ac[ac[<span class="number">0</span>].son[i]].fail = <span class="number">0</span>;</span><br><span class="line">            q.push(ac[<span class="number">0</span>].son[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">128</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ac[u].son[i] != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ac[ac[u].son[i]].fail = ac[ac[u].fail].son[i];</span><br><span class="line">                q.push(ac[u].son[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                ac[u].son[i] = ac[ac[u].fail].son[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">char</span> *s,<span class="keyword">int</span> &amp;no,<span class="keyword">int</span> *a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">int</span> now = <span class="number">0</span>,ans = <span class="number">0</span>,tmp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        tmp = s[i];</span><br><span class="line">        now = ac[now].son[tmp];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> t = now;t &amp;&amp; ac[t].count != <span class="number">-1</span>;t = ac[t].fail)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ac[t].number &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                a[no++] = ac[t].number;</span><br><span class="line">            &#125;</span><br><span class="line">            ans += ac[t].count;</span><br><span class="line">            <span class="comment">// 注意这里 不可以在查询后将count修改为-1 </span></span><br><span class="line">            <span class="comment">// 因为需要进行多次查询</span></span><br><span class="line">            <span class="comment">// ac[t].count = -1;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">210</span>];</span><br><span class="line"><span class="keyword">char</span> Ts[<span class="number">10100</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> N,M;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;N);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        Insert(s,i);</span><br><span class="line">    &#125;</span><br><span class="line">    ac[<span class="number">0</span>].fail = <span class="number">0</span>;</span><br><span class="line">    MakeFail();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;M);</span><br><span class="line">    <span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= M;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a[<span class="number">5</span>];</span><br><span class="line">        clr(a,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">int</span> no = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,Ts);</span><br><span class="line">        <span class="comment">// printf("%s\n",Ts);</span></span><br><span class="line">        <span class="keyword">int</span> tmp = Query(Ts,no,a);</span><br><span class="line">        <span class="keyword">if</span>(tmp)</span><br><span class="line">        &#123;</span><br><span class="line">            sort(a+<span class="number">1</span>,a+no);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"web %d:"</span>,i);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt; no;j++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" %d"</span>,a[j]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">            total++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"total: %d\n"</span>,total);</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 字符串 </category>
          
          <category> AC自动机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> AC自动机 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>AC自动机</title>
      <link href="/2018/09/02/Aho-Corasick-Automaton-Templet/"/>
      <url>/2018/09/02/Aho-Corasick-Automaton-Templet/</url>
      <content type="html"><![CDATA[<h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><blockquote><p>多模式匹配问题</p><p>多串匹配一个串</p></blockquote><a id="more"></a><h2 id="预定义"><a href="#预定义" class="headerlink" title="预定义"></a>预定义</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">char</span> s[N],m[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> son[<span class="number">26</span>];</span><br><span class="line">    <span class="keyword">int</span> fail;</span><br><span class="line">    <span class="keyword">int</span> count;</span><br><span class="line">&#125;ac[N];</span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 涉及多组时需要用到</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(ac[i].son,<span class="number">0</span>,<span class="keyword">sizeof</span> ac[i].son);</span><br><span class="line">        ac[i].count = <span class="number">0</span>;</span><br><span class="line">        ac[i].fail = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="插入单词"><a href="#插入单词" class="headerlink" title="插入单词"></a>插入单词</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">char</span> *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">int</span> now = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> tmp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        tmp = s[i]-<span class="string">'a'</span>;</span><br><span class="line">        <span class="keyword">if</span>(ac[now].son[tmp] == <span class="number">0</span>)</span><br><span class="line">            ac[now].son[tmp] = ++tot;</span><br><span class="line">        now = ac[now].son[tmp];</span><br><span class="line">    &#125;</span><br><span class="line">    ac[now].count++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="构造fail指针"><a href="#构造fail指针" class="headerlink" title="构造fail指针"></a>构造fail指针</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MakeFail</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">26</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ac[<span class="number">0</span>].son[i] != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ac[ac[<span class="number">0</span>].son[i]].fail = <span class="number">0</span>;</span><br><span class="line">            q.push(ac[<span class="number">0</span>].son[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">26</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ac[u].son[i] != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ac[ac[u].son[i]].fail = ac[ac[u].fail].son[i];</span><br><span class="line">                q.push(ac[u].son[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                ac[u].son[i] = ac[ac[u].fail].son[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AC自动机匹配"><a href="#AC自动机匹配" class="headerlink" title="AC自动机匹配"></a>AC自动机匹配</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">char</span> *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">int</span> now = <span class="number">0</span>,ans = <span class="number">0</span>,tmp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        tmp = s[i]-<span class="string">'a'</span>;</span><br><span class="line">        now = ac[now].son[tmp];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> t = now;t &amp;&amp; ac[t].count != <span class="number">-1</span>;t = ac[t].fail)</span><br><span class="line">        &#123;</span><br><span class="line">            ans += ac[t].count;</span><br><span class="line">            ac[t].count = <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        Insert(s);</span><br><span class="line">    &#125;</span><br><span class="line">    ac[<span class="number">0</span>].fail = <span class="number">0</span>;   <span class="comment">// 切记</span></span><br><span class="line">    MakeFail();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,m);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Query(m));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="练手题目"><a href="#练手题目" class="headerlink" title="练手题目"></a>练手题目</h2><blockquote><p><a href="https://www.luogu.org/problemnew/show/P3808" target="_blank" rel="noopener"><strong>P3808</strong> 【模板】AC自动机（简单版）</a></p><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2222" target="_blank" rel="noopener">Keywords Search</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> 字符串 </category>
          
          <category> AC自动机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AC自动机 </tag>
            
            <tag> 模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Lpl and Energy-saving Lamps(二分+线段树)</title>
      <link href="/2018/09/01/Lpl-and-Energy-saving-Lamps/"/>
      <url>/2018/09/01/Lpl-and-Energy-saving-Lamps/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="https://nanti.jisuanke.com/t/30996" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>During tea-drinking, princess, amongst other things, asked why has such a good-natured and cute Dragon imprisoned Lpl in the Castle? Dragon smiled enigmatically and answered that it is a big secret. After a pause, Dragon added:</p><p>— We have a contract. A rental agreement. He always works all day long. He likes silence. Besides that, there are many more advantages of living here in the Castle. Say, it is easy to justify a missed call: a phone ring can’t reach the other side of the Castle from where the phone has been left. So, the imprisonment is just a tale. Actually, he thinks about everything. He is smart. For instance, he started replacing incandescent lamps with energy-saving lamps in the whole Castle…</p><a id="more"></a><p>Lpl chose a model of energy-saving lamps and started the replacement as described below. He numbered all rooms in the Castle and counted how many lamps in each room he needs to replace.</p><p>At the beginning of each month, Lpl buys mm energy-saving lamps and replaces lamps in rooms according to his list. He starts from the first room in his list. If the lamps in this room are not replaced yet and Lpl has enough energy-saving lamps to replace all lamps, then he replaces all ones and takes the room out from the list. Otherwise, he’ll just skip it and check the next room in his list. This process repeats until he has no energy-saving lamps or he has checked all rooms in his list. If he still has some energy-saving lamps after he has checked all rooms in his list, he’ll save the rest of energy-saving lamps for the next month.</p><p>As soon as all the work is done, he ceases buying new lamps. They are very high quality and have a very long-life cycle.</p><p>Your task is for a given number of month and descriptions of rooms to compute in how many rooms the old lamps will be replaced with energy-saving ones and how many energy-saving lamps will remain by the end of each month.</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>Each input will consist of a single test case.</p><p>The first line contains integers $n$ and$m$ $(1 ≤ n ≤ 100000, 1 ≤ m ≤ 100)$— the number of rooms in the Castle and the number of energy-saving lamps, which Lpl buys monthly.</p><p>The second line contains nn integers $k_1, k_2, …, k_nk1,k2,…,kn$<br>$(1 \le k_j \le 10000, j = 1, 2, …, n)(1≤kj≤10000,j=1,2,…,n)$ — the number of lamps in the rooms of the Castle. The number in position jj is the number of lamps in $j-th$ room. Room numbers are given in accordance with Lpl’s list.</p><p>The third line contains one integer $q (1 \le q \le 100000)q(1≤q≤100000)$ — the number of queries.</p><p>The fourth line contains qq integers $d_1, d_2, …, d_qd1,d2,…,dq$<br>$(1 \le d_p \le 100000, p = 1, 2, …, q)(1≤dp≤100000,p=1,2,…,q)$ — numbers of months, in which queries are formed.</p><p>Months are numbered starting with $1$; at the beginning of the first month Lpl buys the first m energy-saving lamps.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>Print $q$ lines.</p><p>Line $p$ contains two integers — the number of rooms, in which all old lamps are replaced already, and the number of remaining energy-saving lamps by the end of $d_p$ month.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>5  4<br>3  10  5  2  7<br>10<br>5  1  4  8  7  2  3  6  4  7</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>4  0<br>1  1<br>3  6<br>5  1<br>5  1<br>2  0<br>3  2<br>4  4<br>3  6<br>5  1</p></blockquote><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><blockquote><p>Explanation for the sample:</p><p>In the first month, he bought $4$ energy-saving lamps and he replaced the first room in his list and remove it. And then he had $1$ energy-saving lamps and skipped all rooms next. So, the answer for the first month is $1,1———1$ room’s lamps were replaced already, $1$ energy-saving lamp remain.</p></blockquote><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><blockquote><p>一共$m$个房间，小A$(暂且叫他小A)$每个月都要将房间的灯换成节能灯，但是小A换灯的时候有个习惯，必须要能够一次性将一个房间里的灯全部换掉才会去换掉这个房间的灯，否则就跳过这个房间去下一个房间重复这个步骤</p><p>每个月小A都会去买$m$个灯，然后一直换下去</p><p>现在每次询问都要输出两个值，当前已经换掉的房间与手中剩下的灯数</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>直接暴力肯定会超时<br>直接套用线段树模板来维护区间最小值,每次找到最左端满足条件的房间然后将该房间的灯全部换掉</p><p>查找的时候可以直接二分找到最左端满足条件的房间</p><p>每次换掉一个房间以后该房间的灯的数量加$1e5+10$ ，因为正常情况下每个房间的灯的数量不会超过$1e4$，所以当所有房间的灯都超过$1e5+10$之后，也就代表了所有房间已经全部被换成了节能灯</p><blockquote><p>二分查找的过程还可以优化一下，但是不优化也不会超时，懒得改了</p><p>线段树模板:<a href="http://duny31030.top/2018/07/23/Segment-Tree-Templet/" target="_blank" rel="noopener">线段树模板(含区间最大(小)值)</a></p></blockquote></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  G.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  https://nanti.jisuanke.com/t/30996</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/09/01 14时55分32秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(ll i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=a;i&gt;=n;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">1e6</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> have[MAXN],now[MAXN];</span><br><span class="line"><span class="keyword">int</span> n,m,q,que,haved;</span><br><span class="line"><span class="keyword">int</span> a[MAXN];</span><br><span class="line"><span class="comment">// a[]为原序列信息</span></span><br><span class="line"><span class="keyword">int</span> mn[MAXN*<span class="number">5</span>];</span><br><span class="line"><span class="comment">// mn[]区间最小值</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PushUp</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mn[rt] = min(mn[rt&lt;&lt;<span class="number">1</span>],mn[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]);   <span class="comment">// 区间最小值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == r)</span><br><span class="line">    &#123;</span><br><span class="line">        mn[rt] = a[l];</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    Build(l,mid,rt&lt;&lt;<span class="number">1</span>);</span><br><span class="line">    Build(mid+<span class="number">1</span>,r,rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>);</span><br><span class="line">    PushUp(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> C,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == r)</span><br><span class="line">    &#123;</span><br><span class="line">        mn[rt] += C;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(L &lt;= mid)</span><br><span class="line">        Add(L,C,l,mid,rt&lt;&lt;<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        Add(L,C,mid+<span class="number">1</span>,r,rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>);</span><br><span class="line">    PushUp(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> mn[rt];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> MIN = INF;</span><br><span class="line">    <span class="keyword">if</span>(L &lt;= mid)</span><br><span class="line">    &#123;</span><br><span class="line">        MIN = min(Query(L,R,l,mid,rt&lt;&lt;<span class="number">1</span>),MIN);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(R &gt; mid)</span><br><span class="line">    &#123;</span><br><span class="line">        MIN = min(Query(L,R,mid+<span class="number">1</span>,r,rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>),MIN);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> MIN;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Find</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">1</span>,r = n;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> tmp = Query(l,mid,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(tmp &lt;= haved)</span><br><span class="line">        &#123;</span><br><span class="line">            r = mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            l = mid+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">    rep(i,<span class="number">1</span>,n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    Build(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">    haved = m;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> time = <span class="number">0</span>,ca = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// time 换完的房间数量</span></span><br><span class="line">    <span class="comment">// ca 时间计数(月数)</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);</span><br><span class="line">    <span class="keyword">while</span>(Query(<span class="number">1</span>,n,<span class="number">1</span>,n,<span class="number">1</span>) &lt; inf)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = Find();</span><br><span class="line">        <span class="keyword">int</span> tmp = Query(t,t,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">while</span>(tmp &lt;= haved)</span><br><span class="line">        &#123;</span><br><span class="line">            haved -= tmp;</span><br><span class="line">            <span class="comment">// haved ： 当前手中拥有的节能灯数量</span></span><br><span class="line">            time++;</span><br><span class="line">            Add(t,inf,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">            t = Find();</span><br><span class="line">            tmp = Query(t,t,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(haved == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        have[ca] = time;</span><br><span class="line">        now[ca++] = haved;</span><br><span class="line">        haved += m;</span><br><span class="line">        <span class="keyword">if</span>(ca &gt; <span class="number">100000</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(ll i = ca;i &lt;= <span class="number">100000</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        have[i] = have[ca<span class="number">-1</span>];</span><br><span class="line">        now[i] = now[ca<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    rep(i,<span class="number">1</span>,q)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;que);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,have[que],now[que]);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 线段树 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
            <tag> 计蒜客 </tag>
            
            <tag> 线段树 </tag>
            
            <tag> 区域赛网络赛 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>字典树模板</title>
      <link href="/2018/08/31/Trie-Templet/"/>
      <url>/2018/08/31/Trie-Templet/</url>
      <content type="html"><![CDATA[<h2 id="字典树"><a href="#字典树" class="headerlink" title="字典树"></a>字典树</h2><h3 id="预定义"><a href="#预定义" class="headerlink" title="预定义"></a>预定义</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">1</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> son[<span class="number">26</span>];</span><br><span class="line">    <span class="keyword">int</span> cnt;   <span class="comment">// 特殊标记</span></span><br><span class="line">    <span class="keyword">bool</span> have;</span><br><span class="line">    node()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(son,<span class="number">0</span>,<span class="keyword">sizeof</span> son);</span><br><span class="line">        cnt = <span class="number">0</span>;</span><br><span class="line">        have = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;trie[N];</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">char</span> *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">int</span> u = <span class="number">0</span>,v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v = s[i]-<span class="string">'a'</span>;</span><br><span class="line">        <span class="keyword">if</span>(!trie[u].son[v])</span><br><span class="line">            trie[u].son[v] = tot++;</span><br><span class="line">        u = trie[u].son[v];</span><br><span class="line">    &#125;</span><br><span class="line">    trie[u].have = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Find</span><span class="params">(<span class="keyword">char</span> *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">int</span> u = <span class="number">0</span>,v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v = s[i]-<span class="string">'a'</span>;</span><br><span class="line">        <span class="keyword">if</span>(!trie[u].son[v])</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        u = trie[u].son[v];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!trie[u].have)   <span class="comment">// 没有这个单词</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(!trie[u].cnt)   <span class="comment">// 没被查询过</span></span><br><span class="line">    &#123;</span><br><span class="line">        trie[u].cnt++;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><blockquote><p> 涉及到多组输入的时候可以这样处理</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> son[<span class="number">26</span>];</span><br><span class="line">    <span class="keyword">int</span> cnt;   <span class="comment">// 特殊标记</span></span><br><span class="line">    <span class="keyword">bool</span> have;</span><br><span class="line">    <span class="keyword">void</span> clear</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(son,<span class="number">0</span>,<span class="keyword">sizeof</span> son);</span><br><span class="line">        cnt = <span class="number">0</span>;</span><br><span class="line">        have = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;trie[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    trie[<span class="number">0</span>].clear();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="01字典树"><a href="#01字典树" class="headerlink" title="01字典树"></a>01字典树</h2><h3 id="预定义-1"><a href="#预定义-1" class="headerlink" title="预定义"></a>预定义</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">1</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> son[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">int</span> size;</span><br><span class="line">    node()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(son,<span class="number">0</span>,<span class="keyword">sizeof</span> son);</span><br><span class="line">        size = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;trie[<span class="number">32</span>*N];</span><br></pre></td></tr></table></figure><h3 id="插入-1"><a href="#插入-1" class="headerlink" title="插入"></a>插入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> root = <span class="number">1</span>;</span><br><span class="line">    trie[root].size++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">30</span>;k &gt;= <span class="number">0</span>;k--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(x &amp; (<span class="number">1</span>&lt;&lt;k))</span><br><span class="line">            tmp = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(!trie[root].son[tmp])</span><br><span class="line">            trie[root].son[tmp] = ++tot;</span><br><span class="line">        root = trie[root].son[tmp];</span><br><span class="line">        trie[root].size++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delete</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> root = <span class="number">1</span>;</span><br><span class="line">    trie[root].size--;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">30</span>;k &gt;= <span class="number">0</span>;k--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(x &amp; (<span class="number">1</span>&lt;&lt;k))</span><br><span class="line">            tmp = <span class="number">1</span>;</span><br><span class="line">        root = trie[root].son[tmp];</span><br><span class="line">        trie[root].size--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> root = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">30</span>;k &gt;= <span class="number">0</span>;k--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(x &amp; (<span class="number">1</span>&lt;&lt;k))</span><br><span class="line">            tmp = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(tmp)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(trie[root].son[<span class="number">0</span>] &amp;&amp; trie[trie[root].son[<span class="number">0</span>]].size)</span><br><span class="line">                root = trie[root].son[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                root = trie[root].son[<span class="number">1</span>],x ^= (<span class="number">1</span>&lt;&lt;k);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(trie[root].son[<span class="number">1</span>] &amp;&amp; trie[trie[root].son[<span class="number">1</span>]].size)</span><br><span class="line">                root = trie[root].son[<span class="number">1</span>],x ^= (<span class="number">1</span>&lt;&lt;k);</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                root = trie[root].son[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>习题</p><p><a href="http://codeforces.com/contest/706/problem/D" target="_blank" rel="noopener">CF 706 D. Vasiliy’s Multiset</a></p><p><a href="https://nanti.jisuanke.com/t/30425" target="_blank" rel="noopener">Chip Factory</a>   (<a href="https://nanti.jisuanke.com/?kw=ACM%20Changchun%202015" target="_blank" rel="noopener">ACM Changchun 2015</a>)</p><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4825" target="_blank" rel="noopener">HDU 4825 Xor Sum</a></p><p><a href="https://nanti.jisuanke.com/t/15531" target="_blank" rel="noopener">求完美序列度</a>(待解决)</p></blockquote>]]></content>
      
      <categories>
          
          <category> 字符串 </category>
          
          <category> 字典树 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模板 </tag>
            
            <tag> Trie </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU5536 Chip Factory(01字典树)</title>
      <link href="/2018/08/31/HDU5536-Chip-Factory/"/>
      <url>/2018/08/31/HDU5536-Chip-Factory/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://codeforces.com/contest/987/problem/A" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>John is a manager of a CPU chip factory, the factory produces lots of chips everyday. To manage large amounts of products, every processor has a serial number. More specifically, the factory produces $n$ chips today, the $i-th$ chip produced this day has a serial number $si$.</p><p>At the end of the day, he packages all the chips produced this day, and send it to wholesalers. More specially, he writes a checksum number on the package, this checksum is defined as below: $max_(i,j,k) (s_i + s_j)⊕s_k$</p><p>which $i,j,k$ are three different integers between 1 and n. And $⊕$ is symbol of bitwise $XOR$.</p><p>Can you help John calculate the checksum number of today?</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The first line of input contains an integer$ T$ indicating the total number of test cases.</p><p>The first line of each test case is an integer $n$, indicating the number of chips produced today. The next line has n integers $s1,s2,..,sn$ separated with single space, indicating serial number of each chip.</p><p>$1≤T≤1000$<br>$3≤n≤1000$<br>$0≤si≤10^9$<br>There are at most 10 testcases with $n&gt;100$</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test case, please output an integer indicating the checksum number in a line.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>2<br>3<br>1 2 3<br>3<br>100 200 300</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>6<br>400</p></blockquote><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><blockquote><p><a href="http://acm.hdu.edu.cn/search.php?field=problem&amp;key=2015ACM%2FICPC%D1%C7%D6%DE%C7%F8%B3%A4%B4%BA%D5%BE-%D6%D8%CF%D6%C8%FC%A3%A8%B8%D0%D0%BB%B6%AB%B1%B1%CA%A6%B4%F3%A3%A9&amp;source=1&amp;searchmode=source" target="_blank" rel="noopener">2015ACM/ICPC亚洲区长春站-重现赛（感谢东北师大）</a></p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><ul><li>01字典树模板题</li><li>暴力求解</li></ul></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  hdu5536.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.hdu.edu.cn/showproblem.php?pid=5536</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/08/30 20时46分09秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=a;i&gt;=n;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">10100</span>;</span><br><span class="line"><span class="keyword">int</span> T,n,a[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">int</span> size;</span><br><span class="line">&#125;trie[<span class="number">32</span>*N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">1</span>,root = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    rep(i,<span class="number">1</span>,tot)</span><br><span class="line">    &#123;</span><br><span class="line">        trie[i].next[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        trie[i].next[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        trie[i].size = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    tot = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> o = root;</span><br><span class="line">    trie[o].size++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">30</span>;k &gt;= <span class="number">0</span>;k--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(x&amp;(<span class="number">1</span>&lt;&lt;k))</span><br><span class="line">            tmp = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(!trie[o].next[tmp])</span><br><span class="line">            trie[o].next[tmp] = ++tot;</span><br><span class="line"></span><br><span class="line">        o = trie[o].next[tmp];</span><br><span class="line">        trie[o].size++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delete</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> o = root;</span><br><span class="line">    trie[o].size--;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">30</span>;k &gt;= <span class="number">0</span>;k--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(x&amp;(<span class="number">1</span>&lt;&lt;k))</span><br><span class="line">            tmp = <span class="number">1</span>;</span><br><span class="line">        o = trie[o].next[tmp];</span><br><span class="line">        trie[o].size--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> o = root;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">30</span>;k &gt;= <span class="number">0</span>;k--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(x&amp;(<span class="number">1</span>&lt;&lt;k))</span><br><span class="line">            tmp = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(tmp)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(trie[o].next[<span class="number">0</span>] &amp;&amp; trie[trie[o].next[<span class="number">0</span>]].size)</span><br><span class="line">                o = trie[o].next[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                o = trie[o].next[<span class="number">1</span>], x^=(<span class="number">1</span>&lt;&lt;k);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(trie[o].next[<span class="number">1</span>] &amp;&amp; trie[trie[o].next[<span class="number">1</span>]].size)</span><br><span class="line">                o = trie[o].next[<span class="number">1</span>],x^=(<span class="number">1</span>&lt;&lt;k);</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                o = trie[o].next[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> maxn = -INF;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        rep(i,<span class="number">1</span>,n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">            Insert(a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        rep(i,<span class="number">1</span>,n<span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Delete(a[i]);</span><br><span class="line">            rep(j,i+<span class="number">1</span>,n)</span><br><span class="line">            &#123;</span><br><span class="line">                Delete(a[j]);</span><br><span class="line">                maxn = max(maxn,Query(a[i]+a[j]));</span><br><span class="line">                Insert(a[j]);</span><br><span class="line">            &#125;</span><br><span class="line">            Insert(a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,maxn);</span><br><span class="line">        Init();</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 字符串 </category>
          
          <category> 字典树 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> 模板题 </tag>
            
            <tag> 01字典树 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ2001 Shortest Prefixes</title>
      <link href="/2018/08/29/POJ2001-Shortest-Prefixes/"/>
      <url>/2018/08/29/POJ2001-Shortest-Prefixes/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://poj.org/problem?id=2001" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>A prefix of a string is a substring starting at the beginning of the given string. The prefixes of “carbon” are: “c”, “ca”, “car”, “carb”, “carbo”, and “carbon”. Note that the empty string is not considered a prefix in this problem, but every non-empty string is considered to be a prefix of itself. In everyday language, we tend to abbreviate words by prefixes. For example, “carbohydrate” is commonly abbreviated by “carb”. In this problem, given a set of words, you will find for each word the shortest prefix that uniquely identifies the word it represents.  In the sample input below, “carbohydrate” can be abbreviated to “carboh”, but it cannot be abbreviated to “carbo” (or anything shorter) because there are other words in the list that begin with “carbo”.  An exact match will override a prefix match. For example, the prefix “car” matches the given word “car” exactly. Therefore, it is understood without ambiguity that “car” is an abbreviation for “car” , not for “carriage” or any of the other words in the list that begins with “car”.  </p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The input contains at least two, but no more than 1000 lines. Each line contains one word consisting of 1 to 20 lower case letters.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>The output contains the same number of lines as the input. Each line of the output contains the word from the corresponding line of the input, followed by one blank space, and the shortest prefix that uniquely (without ambiguity) identifies this word.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>carbohydrate<br>cart<br>carburetor<br>caramel<br>caribou<br>carbonic<br>cartilage<br>carbon<br>carriage<br>carton<br>car<br>carbonate</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>carbohydrate  carboh<br>cart  cart<br>carburetor  carbu<br>caramel  cara<br>caribou  cari<br>carbonic  carboni<br>cartilage  carti<br>carbon  carbon<br>carriage  carr<br>carton  carto<br>car  car<br>carbonate  carbona</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>题目大意</p><blockquote><p>是在输出原字符串的同时找出原字符串的唯一最短前缀</p><p>$(唯一:这个前缀只在这个单词出现过)$<br>如果没找到的话则输出原字符串</p></blockquote><p>类似 <a href="http://duny31030.top/2018/08/29/HDU1251-统计难题/#more" target="_blank" rel="noopener">HDU1251 统计难题</a> 略微升级版</p><p>使用 $ num[N] $ 数组保存当前前缀出现次数</p><p>$num[i]$ 代表以当前字符串为前缀的单词数量</p><p>若 $num[i] &gt; 1$ 则说明当前前缀不止出现过一次，也就是说还需要往后找才可以找到唯一的前缀</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  poj2001.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  </span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/08/29 14时09分22秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=a;i&gt;=n;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next[<span class="number">27</span>];</span><br><span class="line">&#125;trie[N];</span><br><span class="line"><span class="keyword">int</span> num[N];</span><br><span class="line"><span class="keyword">char</span> s[N][<span class="number">30</span>];</span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">char</span> a[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,now = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = a[i]-<span class="string">'a'</span>+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> next = trie[now].next[tmp];</span><br><span class="line">        <span class="keyword">if</span>(next == <span class="number">0</span>)</span><br><span class="line">            trie[now].next[tmp] = ++tot;</span><br><span class="line">        now = trie[now].next[tmp];</span><br><span class="line">        num[now]++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">query</span><span class="params">(<span class="keyword">char</span> a[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="keyword">int</span> now = <span class="number">0</span>,i;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(num[now] == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">int</span> tmp = a[i]-<span class="string">'a'</span>+<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>,a[i]);</span><br><span class="line">        now = trie[now].next[tmp];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s[size++]) != EOF)</span><br><span class="line">        add(s[size<span class="number">-1</span>]);</span><br><span class="line">    rep(i,<span class="number">0</span>,size<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s "</span>,s[i]);</span><br><span class="line">        query(s[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 字符串 </category>
          
          <category> 字典树 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典树 </tag>
            
            <tag> 模板题 </tag>
            
            <tag> POJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU1251 统计难题</title>
      <link href="/2018/08/29/HDU1251/"/>
      <url>/2018/08/29/HDU1251/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1251" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>Ignatius最近遇到一个难题,老师交给他很多单词(只有小写字母组成,不会有重复的单词出现),现在老师要他统计出以某个字符串为前缀的单词数量(单词本身也是自己的前缀).</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>输入数据的第一部分是一张单词表,每行一个单词,单词的长度不超过10,它们代表的是老师交给Ignatius统计的单词,一个空行代表单词表的结束.第二部分是一连串的提问,每行一个提问,每个提问都是一个字符串. 注意:本题只有一组测试数据,处理到文件结束.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>对于每个提问,给出以该字符串为前缀的单词的数量.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>banana<br>band<br>bee<br>absolute<br>acm</p><p>ba<br>b<br>band<br>abc</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>2<br>3<br>1<br>0</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><ul><li>字典树模板题</li><li>用$ s[0] == 0 $来判断输入是否遇到空行</li></ul></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  hdu1251.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.hdu.edu.cn/showproblem.php?pid=1251</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/08/29 11时40分08秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=a;i&gt;=n;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1000010</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next[<span class="number">27</span>];</span><br><span class="line">&#125;trie[N];</span><br><span class="line"><span class="keyword">int</span> num[N];   <span class="comment">// 以某一字符串为前缀的单词的数量</span></span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">char</span> a[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,now = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = a[i]-<span class="string">'a'</span>+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> next = trie[now].next[tmp];</span><br><span class="line">        <span class="keyword">if</span>(!next)   <span class="comment">// 如果对应字符还没有值</span></span><br><span class="line">            trie[now].next[tmp] = tot++;</span><br><span class="line">        now = trie[now].next[tmp];</span><br><span class="line">        num[now]++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">char</span> a[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="keyword">int</span> now = <span class="number">0</span>,i;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = a[i]-<span class="string">'a'</span>+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(trie[now].next[tmp] == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        now = trie[now].next[tmp];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num[now];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">while</span>(gets(s))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!s[<span class="number">0</span>])</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        add(s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(gets(s))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,query(s));</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 字符串 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> 字典树 </tag>
            
            <tag> 模板题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CODE[VS]4189 字典 (字典树模板题)</title>
      <link href="/2018/08/29/CODE-VS-4189/"/>
      <url>/2018/08/29/CODE-VS-4189/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://codevs.cn/problem/4189/" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>最经,skyzhong得到了一本好厉害的字典，这个字典里整整有n个单词(1&lt;=n&lt;=200000)</p><p>现在skyzhong需要在字典里查询以某一段字母开头的单词</p><p>如:skyzhong想查询a</p><p>那么只要是a开头的单词就可以了</p><p>skyzhong只想知道里面有没有这一个单词（因为没有他就不查了）</p><p>若有，请输出YES。若没有，请输出NO</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行一个数n</p><p>第二行到第n+1行，一行一个字符串</p><p>再下一行一个数m，表示skyzhong想要查询的次数</p><p>接着m行，一行一个字符串，表示skyzhong想要查的东西</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>共m行，若有这字串输出YES，否则输出NO</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>3</p><p>asd</p><p>asfdghj</p><p>asfd</p><p>3</p><p>asd</p><p>asdghj</p><p>asf</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>YES</p><p>NO</p><p>YES</p></blockquote><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><blockquote><p>字符串只有小写字母，且长度≤8</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>字典树的模板题，恰好可以拿来练习字典树的使用</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  p4189.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://codevs.cn/problem/4189/</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/08/29 10时31分33秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=a;i&gt;=n;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1000100</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next[<span class="number">27</span>];</span><br><span class="line">&#125;trie[N];</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="keyword">int</span> now = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = a[i]-<span class="string">'a'</span>+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> next = trie[now].next[tmp];</span><br><span class="line">        <span class="keyword">if</span>(next)</span><br><span class="line">        &#123;</span><br><span class="line">            now = next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            trie[now].next[tmp] = ++tot;</span><br><span class="line">            now = tot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="keyword">int</span> now = <span class="number">0</span>,p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p &lt; len)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = trie[now].next[a[p]-<span class="string">'a'</span>+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(!tmp)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            now = tmp;</span><br><span class="line">            p++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    rep(i,<span class="number">1</span>,n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a;</span><br><span class="line">        add();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; m;</span><br><span class="line">    rep(i,<span class="number">1</span>,m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a;</span><br><span class="line">        <span class="keyword">if</span>(query())</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 字符串 </category>
          
          <category> 字典树 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典树 </tag>
            
            <tag> 模板题 </tag>
            
            <tag> CODE[VS] </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Manacher算法模板</title>
      <link href="/2018/08/28/Manacher-Templet/"/>
      <url>/2018/08/28/Manacher-Templet/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>参考资料：</p><p><a href="http://www.baidu.com/link?url=1wBZiP02qYvx_OTRX_FIzdaub4xVQlmblC3YNPdNEBDMCn1l7wEIxHzRl62o71CoTt3w9zY7l3MEfWD9OG1b3q" target="_blank" rel="noopener"><em>Manacher</em>算法 - 经典算法与数据结构 - SegmentFault 思否</a></p><p><a href="http://blog.csdn.net/xingyeyongheng/article/details/9310555" target="_blank" rel="noopener">hdu3068之manacher算法+详解</a></p></blockquote><a id="more"></a><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="头部"><a href="#头部" class="headerlink" title="头部"></a>头部</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> s[N],s_new[N*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> p[N*<span class="number">2</span>];</span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">    s_new[<span class="number">0</span>] = <span class="string">'$'</span>;</span><br><span class="line">    s_new[<span class="number">1</span>] = <span class="string">'#'</span>;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">2</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s_new[j++] = s[i];</span><br><span class="line">        s_new[j++] = <span class="string">'#'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    s_new[j] = <span class="string">'\0'</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> j;   <span class="comment">// 返回 s_new 的长度</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Manacher"><a href="#Manacher" class="headerlink" title="Manacher"></a>Manacher</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Manacher</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = Init();   <span class="comment">// 取得新字符串长度并完成向 s_new 的转换</span></span><br><span class="line"><span class="keyword">int</span> max_len = <span class="number">-1</span>;   <span class="comment">// 最长回文长度</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; len;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(i &lt; mx)</span><br><span class="line">        p[i] = min(p[<span class="number">2</span>*id-i],mx-i);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        p[i] = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(s_new[i-p[i]] == s_new[i+p[i]])   <span class="comment">// 不需要边界判断,因为有"$"、"\0"</span></span><br><span class="line">    p[i]++;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 每走一步都要用i和mx比较</span></span><br><span class="line">    <span class="keyword">if</span>(mx &lt; i+p[i])</span><br><span class="line">    &#123;</span><br><span class="line">        id = i;</span><br><span class="line">        mx = i+p[i];</span><br><span class="line">    &#125;</span><br><span class="line">    max_len = max(max_len,p[i]<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> max_len;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 字符串 </category>
          
          <category> Manacher </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模板 </tag>
            
            <tag> Manacher </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>字符串匹配--最大最小表示法模板</title>
      <link href="/2018/08/27/Min-Max-Templet/"/>
      <url>/2018/08/27/Min-Max-Templet/</url>
      <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><div class="note success"><p>参考资料：</p><p><a href="https://www.cnblogs.com/cenariusxz/p/4903387.html" target="_blank" rel="noopener">字符串匹配—最大最小表示法</a> </p><p><a href="https://www.cnblogs.com/wuxinganchu/p/5734040.html" target="_blank" rel="noopener">最小表示法和最大表示法模板</a></p></div><div class="note primary"><p>最小（大）表示法是字符串问题中不同于匹配与失配的另一种O（n）的算法，它主要解决的是字符串的同构问题。将单个字符串循环左移右移算作该串的同构，最小（大）表示法能够在O（n）时间内求出这个串的所有同构串中的字典序最小的串的起始位置。由于代码简洁容易理解，因此在处理同类问题时往往比后缀数组以及各种匹配算法更加方便运用。</p></div><div class="note danger"><p>注意下标是从0开始的，返回的下标也从0开始 </p></div><a id="more"></a><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="最小表示法"><a href="#最小表示法" class="headerlink" title="最小表示法"></a>最小表示法</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getMin</span><span class="params">(<span class="keyword">char</span> str[],<span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>,j = <span class="number">1</span>,k;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; len &amp;&amp; j &lt; len)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(k = <span class="number">0</span>;k &lt; len;k++)</span><br><span class="line">            <span class="keyword">if</span>(str[(i+k)%len] != str[(j+k)%len])</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span>(k &gt;= len)<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span>(str[(i+k)%len] &gt; str[(j+k)%len])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i+k+<span class="number">1</span> &gt; j)</span><br><span class="line">                i = i+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                i = j+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="keyword">if</span>(j+k+<span class="number">1</span> &gt; i)</span><br><span class="line">                j = j+k+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            j = i+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// return i &lt; j ? i : j;</span></span><br><span class="line"><span class="keyword">return</span> min(i,j);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="最大表示法"><a href="#最大表示法" class="headerlink" title="最大表示法"></a>最大表示法</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getMax</span><span class="params">(<span class="keyword">char</span> str[],<span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>,j = <span class="number">1</span>,k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; len &amp;&amp; j &lt; len &amp;&amp; k &lt; len)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = str[(i+k)%len]-str[(j+k)%len];</span><br><span class="line">        <span class="keyword">if</span>(!t)</span><br><span class="line">            k++;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(t &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(j+k+<span class="number">1</span> &gt; i)</span><br><span class="line">                    j = j+k+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                    j = i+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                <span class="keyword">if</span>(i+k+<span class="number">1</span> &gt; j)</span><br><span class="line">                    i = i+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                    i = j+<span class="number">1</span>;</span><br><span class="line">            k = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// return i &lt; j ? i : j;</span></span><br><span class="line">    <span class="keyword">return</span> min(i,j);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 字符串 </category>
          
          <category> 最大最小表示法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 最大最小表示法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>费马定理</title>
      <link href="/2018/08/26/Fermat-principle/"/>
      <url>/2018/08/26/Fermat-principle/</url>
      <content type="html"><![CDATA[<h1 id="费马小定理"><a href="#费马小定理" class="headerlink" title="费马小定理"></a>费马小定理</h1><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><blockquote><p>假如p是质数，且gcd(a,p)=1，那么 a(p-1)≡1（mod p）。</p><p>即：假如a是整数，p是质数，且a,p互质(即两者只有一个公约数1)，那么a的(p-1)次方除以p的余数恒等于1。</p><p>证明:<a href="https://blog.csdn.net/Cold_Chair/article/details/52235196" target="_blank" rel="noopener">传送门</a></p><p>推论:对于任意正整数a，有a^p ≡ a (mod p)，因为a能被p整除时结论显然成立。</p></blockquote><a id="more"></a><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><blockquote><p><a href="http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=3785" target="_blank" rel="noopener">What day is that day?</a></p><p><a href="http://acm.hdu.edu.cn/contests/contest_showproblem.php?pid=1003&amp;cid=812" target="_blank" rel="noopener">Dream</a></p></blockquote><h1 id="费马大定理"><a href="#费马大定理" class="headerlink" title="费马大定理"></a>费马大定理</h1><h2 id="结论-1"><a href="#结论-1" class="headerlink" title="结论"></a>结论</h2><blockquote><p>$a^n + b^n = c^n$<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">if</span>(n == <span class="number">0</span> || n &gt; <span class="number">2</span>)</span><br><span class="line">&gt;     <span class="keyword">return</span> 此式无解;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></p><p>当a为奇数时，</p><blockquote><p>$ a = 2n+1 $<br>$ c = n^2 + (n+1)^2 $<br>$ b=c-1 $</p></blockquote><p>当a为偶数时，</p><blockquote><p>$ a = 2n $<br>$ c = n^2 + 1 $<br>$ b = c - 2 $</p></blockquote></blockquote><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><blockquote><p><a href="http://acm.zjut.edu.cn/onlinejudge/problem.php?cid=1101&amp;pid=2" target="_blank" rel="noopener">三角</a></p><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6441" target="_blank" rel="noopener">Find Integer</a></p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="http://tieba.baidu.com/p/108936816" target="_blank" rel="noopener">直角三角形 a^2 + b^2 = c^2 整数解的定a公式直求法</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
          <category> 费马定理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 费马定理 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>JAVA大数模板</title>
      <link href="/2018/08/24/JAVA-BigInteger/"/>
      <url>/2018/08/24/JAVA-BigInteger/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">while</span>(in.hasNext())&#123;   <span class="comment">// 文件以EOF结束</span></span><br><span class="line">        </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// in.close();</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="整数-BigInteger"><a href="#整数-BigInteger" class="headerlink" title="整数-BigInteger"></a>整数-BigInteger</h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BigInteger a = <span class="keyword">new</span> BigInteger(<span class="string">"1"</span>);</span><br><span class="line">BigInteger a = BigInteger.valueOf(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h3 id="四则运算"><a href="#四则运算" class="headerlink" title="四则运算"></a>四则运算</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a.add(b)        <span class="comment">//大整数加法</span></span><br><span class="line">a.subtract(b)   <span class="comment">//大整数减法</span></span><br><span class="line">a.multiply(b)   <span class="comment">//大整数乘法</span></span><br><span class="line">a.divide(b)     <span class="comment">//大整数除法(取整)</span></span><br><span class="line">a.remainder(b)  <span class="comment">//大整数取模   </span></span><br><span class="line"><span class="comment">// mod();       //a.mod(b)=a%b=a.remainder(b);</span></span><br></pre></td></tr></table></figure><h4 id="加"><a href="#加" class="headerlink" title="加"></a>加</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * add(加)：+</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1    加数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2    加数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>        和</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> v1,<span class="keyword">int</span> v2)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        BigInteger x1 = <span class="keyword">new</span> BigInteger(Integer.toString(v1));</span><br><span class="line">        BigInteger x2 = <span class="keyword">new</span> BigInteger(Integer.toString(v2));</span><br><span class="line">        <span class="keyword">return</span> x1.add(x2).intValue();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(String v1,String v2)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        BigInteger x1 = <span class="keyword">new</span> BigInteger(v1);</span><br><span class="line">        BigInteger x2 = <span class="keyword">new</span> BigInteger(v2);</span><br><span class="line">        <span class="keyword">return</span> x1.add(x2).intValue();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="减"><a href="#减" class="headerlink" title="减"></a>减</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * subtract(减):-</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1    被减数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2    减数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>        差</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">subtract</span><span class="params">(<span class="keyword">int</span> v1,<span class="keyword">int</span> v2)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        BigInteger x1 = <span class="keyword">new</span> BigInteger(Integer.toString(v1));</span><br><span class="line">        BigInteger x2 = <span class="keyword">new</span> BigInteger(Integer.toString(v2));</span><br><span class="line">        <span class="keyword">return</span> x1.subtract(x2).intValue();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">subtract</span><span class="params">(String v1,String v2)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        BigInteger x1 = <span class="keyword">new</span> BigInteger(v1);</span><br><span class="line">        BigInteger x2 = <span class="keyword">new</span> BigInteger(v2);</span><br><span class="line">        <span class="keyword">return</span> x1.subtract(x2).intValue();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="乘"><a href="#乘" class="headerlink" title="乘"></a>乘</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * multiply(乘):*</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1    乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2    被乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>        积</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">multiply</span><span class="params">(<span class="keyword">int</span> v1,<span class="keyword">int</span> v2)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        BigInteger x1 = <span class="keyword">new</span> BigInteger(Integer.toString(v1));</span><br><span class="line">        BigInteger x2 = <span class="keyword">new</span> BigInteger(Integer.toString(v2));</span><br><span class="line">        <span class="keyword">return</span> x1.multiply(x2).intValue();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">multiply</span><span class="params">(String v1,String v2)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        BigInteger x1 = <span class="keyword">new</span> BigInteger(v1);</span><br><span class="line">        BigInteger x2 = <span class="keyword">new</span> BigInteger(v2);</span><br><span class="line">        <span class="keyword">return</span> x1.multiply(x2).intValue();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="除法"><a href="#除法" class="headerlink" title="除法"></a>除法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * divide(除):/</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">divide</span><span class="params">(<span class="keyword">int</span> v1,<span class="keyword">int</span> v2)</span>    </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        BigInteger x1 = <span class="keyword">new</span> BigInteger(Integer.toString(v1));</span><br><span class="line">        BigInteger x2 = <span class="keyword">new</span> BigInteger(Integer.toString(v2));</span><br><span class="line">        <span class="keyword">return</span> x1.divide(x2).intValue();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">divide</span><span class="params">(String v1,String v2)</span>    </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        BigInteger x1 = <span class="keyword">new</span> BigInteger(v1);</span><br><span class="line">        BigInteger x2 = <span class="keyword">new</span> BigInteger(v2);</span><br><span class="line">        <span class="keyword">return</span> x1.divide(x2).intValue();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a.compareTo(b) == <span class="number">0</span>   <span class="comment">// a == b</span></span><br><span class="line">a.compareTo(b) &gt; <span class="number">0</span>    <span class="comment">// a &gt; b</span></span><br><span class="line">a.compareTo(b) &lt; <span class="number">0</span>    <span class="comment">// a &lt; b</span></span><br><span class="line">a.equals(b)           <span class="comment">// return true or false</span></span><br></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 进制转换   String a; i进制转换为j进制</span></span><br><span class="line"><span class="keyword">new</span> java.math.BigInteger(a,i).toString(j);</span><br><span class="line"><span class="comment">// 大整数绝对值</span></span><br><span class="line">a.abs();   </span><br><span class="line"><span class="comment">// 大整数的幂</span></span><br><span class="line"><span class="comment">// 大整数a的exponent次幂</span></span><br><span class="line"><span class="keyword">int</span> exponent=<span class="number">10</span>;</span><br><span class="line">a.pow(exponent);   </span><br><span class="line"><span class="comment">// 返回大整数十进制的字符串表示</span></span><br><span class="line">a.toString();</span><br><span class="line"><span class="comment">// 返回大整数p进制的字符串表示</span></span><br><span class="line"> <span class="keyword">int</span> p=<span class="number">8</span>;</span><br><span class="line">a.toString(p)</span><br><span class="line"><span class="comment">// 最大公约数</span></span><br><span class="line">a.gcd(b);</span><br><span class="line"><span class="comment">//取反数</span></span><br><span class="line">negate();</span><br><span class="line"><span class="comment">//将指定字符串转换为十进制表示形式</span></span><br><span class="line">BigInteger(String val);</span><br><span class="line"><span class="comment">//将指定基数的 BigInteger 的字符串表示形式转换为 BigInteger</span></span><br><span class="line">BigInteger(String val,<span class="keyword">int</span> radix);   <span class="comment">// radix : 进制</span></span><br><span class="line"><span class="comment">// 基本常量：</span></span><br><span class="line">A = BigInteger.ONE    <span class="comment">// 1</span></span><br><span class="line">B = BigInteger.TEN    <span class="comment">// 10</span></span><br><span class="line">C = BigInteger.ZERO   <span class="comment">// 0</span></span><br><span class="line"><span class="comment">//计算  ~this</span></span><br><span class="line">not()</span><br><span class="line"><span class="comment">//计算this|a</span></span><br><span class="line">or(BigInteger a)   </span><br><span class="line"><span class="comment">//返回其值为 (this ^ val) 的 BigInteger。</span></span><br><span class="line">xor(BigInteger val)  </span><br><span class="line"><span class="comment">// 例如a.and(b),计算a&amp;b</span></span><br><span class="line">and(); </span><br><span class="line">doubleValue();  <span class="comment">//转化为double类型</span></span><br><span class="line">longValue();    <span class="comment">//转化为long类型</span></span><br><span class="line">floatValue();   <span class="comment">// 转化为float类型</span></span><br><span class="line">intValue();     <span class="comment">//转化为int类型</span></span><br><span class="line"><span class="comment">// 返回有可能是素数的、具有指定长度的正 BigInteger。</span></span><br><span class="line">probablePrime(<span class="keyword">int</span> bitLength, Random rnd)   </span><br><span class="line">shiftLeft(<span class="keyword">int</span> n)       <span class="comment">// 返回其值为 (this &lt;&lt; n) 的 BigInteger。</span></span><br><span class="line">shiftRight(<span class="keyword">int</span> n)      <span class="comment">// 返回其值为 (this &gt;&gt; n) 的 BigInteger。</span></span><br></pre></td></tr></table></figure><h2 id="浮点数-BigDecimal"><a href="#浮点数-BigDecimal" class="headerlink" title="浮点数-BigDecimal"></a>浮点数-BigDecimal</h2><h3 id="初始化-1"><a href="#初始化-1" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BigDecimal bigDecimal = <span class="keyword">new</span> BigDecimal(<span class="number">2</span>);</span><br><span class="line">BigDecimal bDouble = <span class="keyword">new</span> BigDecimal(<span class="number">2.3</span>);</span><br><span class="line">BigDecimal bString = <span class="keyword">new</span> BigDecimal(<span class="string">"2.3"</span>);</span><br><span class="line">BigDecimal bDouble1 = BigDecimal.valueOf(<span class="number">2.3</span>);</span><br><span class="line">BigDecimal bDouble2 = <span class="keyword">new</span> BigDecimal(Double.toString(<span class="number">2.3</span>));</span><br></pre></td></tr></table></figure><h3 id="四则运算-1"><a href="#四则运算-1" class="headerlink" title="四则运算"></a>四则运算</h3><h4 id="加-1"><a href="#加-1" class="headerlink" title="加"></a>加</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的加法运算。</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被加数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 加数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的和</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">double</span> v1, <span class="keyword">double</span> v2)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(Double.toString(v1));</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(Double.toString(v2));</span><br><span class="line">        <span class="keyword">return</span> b1.add(b2).doubleValue();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//重载方法，v1,v2必须是可以转化为数字的字符串</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">add</span><span class="params">(String v1, String v2)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(v1);</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(v2);</span><br><span class="line">        <span class="keyword">return</span> b1.add(b2).toString();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="减-1"><a href="#减-1" class="headerlink" title="减"></a>减</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的减法运算。</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被减数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 减数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的差</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">sub</span><span class="params">(<span class="keyword">double</span> v1, <span class="keyword">double</span> v2)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(Double.toString(v1));</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(Double.toString(v2));</span><br><span class="line">        <span class="keyword">return</span> b1.subtract(b2).doubleValue();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">sub</span><span class="params">(String v1, String v2)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(v1);</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(v2);</span><br><span class="line">        <span class="keyword">return</span> b1.subtract(b2).toString();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="乘-1"><a href="#乘-1" class="headerlink" title="乘"></a>乘</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的乘法运算。</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的积</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">mul</span><span class="params">(<span class="keyword">double</span> v1, <span class="keyword">double</span> v2)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(Double.toString(v1));</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(Double.toString(v2));</span><br><span class="line">        <span class="keyword">return</span> b1.multiply(b2).doubleValue();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">mul</span><span class="params">(String v1, String v2)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(v1);</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(v2);</span><br><span class="line">        <span class="keyword">return</span> b1.multiply(b2).toString();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="除"><a href="#除" class="headerlink" title="除"></a>除</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供（相对）精确的除法运算，当发生除不尽的情况时，精确到 小数点以后DEF_DIV_SCALE位，以后的数字四舍五入。</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的商</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">div</span><span class="params">(<span class="keyword">double</span> v1, <span class="keyword">double</span> v2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> div(v1, v2, DEF_DIV_SCALE);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供（相对）精确的除法运算。当发生除不尽的情况时，由scale参数指定精度，以后的数字四舍五入。</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 表示表示需要精确到小数点以后几位。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的商</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">div</span><span class="params">(<span class="keyword">double</span> v1, <span class="keyword">double</span> v2, <span class="keyword">int</span> scale)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"The scale must be a positive integer or zero"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(Double.toString(v1));</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(Double.toString(v2));</span><br><span class="line">        <span class="keyword">return</span> b1.divide(b2, scale, BigDecimal.ROUND_HALF_UP).doubleValue();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">div</span><span class="params">(String v1, String v2)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> div(v1, v2, DEF_DIV_SCALE);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">div</span><span class="params">(String v1, String v2, <span class="keyword">int</span> scale)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"The scale must be a positive integer or zero"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(v1);</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(v2);</span><br><span class="line">        <span class="keyword">return</span> b1.divide(b2, scale, BigDecimal.ROUND_HALF_UP).toString();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 除法补充</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> BigDecimal <span class="title">divide</span><span class="params">(BigDecimal divisor, <span class="keyword">int</span> scale, <span class="keyword">int</span> roundingMode)</span> </span></span><br><span class="line"><span class="function">第一参数表示除数， 第二个参数表示小数点后保留位数，</span></span><br><span class="line"><span class="function">第三个参数表示舍入模式，只有在作除法运算或四舍五入时才用到舍入模式，有下面这几种</span></span><br><span class="line"><span class="function">ROUND_CEILING    <span class="comment">//向正无穷方向舍入</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">ROUND_DOWN    <span class="comment">//向零方向舍入</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">ROUND_FLOOR    <span class="comment">//向负无穷方向舍入</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">ROUND_HALF_DOWN    <span class="comment">//向（距离）最近的一边舍入，除非两边（的距离）是相等,如果是这样，向下舍入, 例如1.55 保留一位小数结果为1.5</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">ROUND_HALF_EVEN    <span class="comment">//向（距离）最近的一边舍入，除非两边（的距离）是相等,如果是这样，如果保留位数是奇数，使用ROUND_HALF_UP，如果是偶数，使用ROUND_HALF_DOWN</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">ROUND_HALF_UP    <span class="comment">//向（距离）最近的一边舍入，除非两边（的距离）是相等,如果是这样，向上舍入, 1.55保留一位小数结果为1.6</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">ROUND_UNNECESSARY    <span class="comment">//计算结果是精确的，不需要舍入模式</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">ROUND_UP    <span class="comment">//向远离0的方向舍入</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">// 四舍五入采用 ROUND_HALF_UP</span></span></span><br></pre></td></tr></table></figure><h3 id="比较-1"><a href="#比较-1" class="headerlink" title="比较"></a>比较</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a.compareTo(b) == <span class="number">0</span>   <span class="comment">// a == b</span></span><br><span class="line">a.compareTo(b) &gt; <span class="number">0</span>    <span class="comment">// a &gt; b</span></span><br><span class="line">a.compareTo(b) &lt; <span class="number">0</span>    <span class="comment">// a &lt; b</span></span><br><span class="line"><span class="comment">// 注意</span></span><br><span class="line"><span class="comment">// a.equals(b); 特殊</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 大数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数 </tag>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>线段树模板(结构体写法)-待补全</title>
      <link href="/2018/08/22/Segment-Tree-Strucr-Templet/"/>
      <url>/2018/08/22/Segment-Tree-Strucr-Templet/</url>
      <content type="html"><![CDATA[<div class="note danger"><p>这个坑先放着吧。。。</p></div><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><blockquote><p>线段树，类似区间树，它在各个节点保存一条线段（数组中的一段子数组），主要用于高效解决连续区间的动态查询问题，由于二叉结构的特性，它基本能保持每个操作的复杂度为O(logn)。</p></blockquote><a id="more"></a><h2 id="0-定义"><a href="#0-定义" class="headerlink" title="(0) 定义"></a>(0) 定义</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">50010</span>;</span><br><span class="line"><span class="keyword">int</span> a[MAXN];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    <span class="keyword">int</span> lazy;</span><br><span class="line">    <span class="comment">// 懒标记</span></span><br><span class="line">    <span class="keyword">int</span> ans,nmax,nmin;</span><br><span class="line">    <span class="comment">// 区间和 区间最大值 区间最小值</span></span><br><span class="line">&#125;tree[MAXN&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> ans,nmax,nmin;</span><br><span class="line"><span class="comment">// 建树</span></span><br></pre></td></tr></table></figure><h2 id="1-更新结点信息"><a href="#1-更新结点信息" class="headerlink" title="(1) 更新结点信息"></a>(1) 更新结点信息</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-建树"><a href="#2-建树" class="headerlink" title="(2) 建树"></a>(2) 建树</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Build</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tree[rt].l = l;</span><br><span class="line">    tree[rt].r = r;</span><br><span class="line">    tree[rt].lazy = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == r)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[rt].ans = tree[rt].nmax = tree[rt].nmin = a[l];</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    Build(rt&lt;&lt;<span class="number">1</span>,l,mid);</span><br><span class="line">    Build(rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">    tree[rt].ans = tree[rt&lt;&lt;<span class="number">1</span>].ans+tree[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].ans;</span><br><span class="line">    tree[rt].nmax = max(tree[rt&lt;&lt;<span class="number">1</span>].nmax,tree[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].nmax);</span><br><span class="line">    tree[rt].nmin = min(tree[rt&lt;&lt;<span class="number">1</span>].nmin,tree[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].nmin);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-下推懒惰标记"><a href="#3-下推懒惰标记" class="headerlink" title="(3) 下推懒惰标记"></a>(3) 下推懒惰标记</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PushDown</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> ln,<span class="keyword">int</span> rn)</span>   </span></span><br><span class="line"><span class="function"><span class="comment">// ln表示左子树元素结点个数,rn表示右子树结点个数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(lazy[rt])</span><br><span class="line">    &#123;</span><br><span class="line">        lazy[rt&lt;&lt;<span class="number">1</span>] += lazy[rt];</span><br><span class="line">        lazy[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>] += lazy[rt];</span><br><span class="line">        ans[rt&lt;&lt;<span class="number">1</span>] += lazy[rt]*ln;</span><br><span class="line">        ans[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>] += lazy[rt]*rn;</span><br><span class="line">        mx[rt&lt;&lt;<span class="number">1</span>] += lazy[rt];</span><br><span class="line">        mx[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>] += lazy[rt];</span><br><span class="line">        mn[rt&lt;&lt;<span class="number">1</span>] += lazy[rt];</span><br><span class="line">        mn[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>] += lazy[rt];</span><br><span class="line">        lazy[rt] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-点更新"><a href="#4-点更新" class="headerlink" title="(4) 点更新"></a>(4) 点更新</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> add)</span>   <span class="comment">// 在结点rt的区间(l,r)上增加add</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tree[rt].l == l &amp;&amp; tree[rt].r == r)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[rt].lazy += add;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    tree[rt].ans += add*(r-l+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> mid = (tree[rt].l+tree[rt].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(r &lt;= mid)</span><br><span class="line">        Add(rt&lt;&lt;<span class="number">1</span>,l,r,add);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">if</span>(l &gt; mid)</span><br><span class="line">            Add(rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,l,r,add);</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            Add(rt&lt;&lt;<span class="number">1</span>,l,mid,add);</span><br><span class="line">            Add(rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,add);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-区间更新"><a href="#5-区间更新" class="headerlink" title="(5) 区间更新"></a>(5) 区间更新</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> C,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)</span><br><span class="line">    &#123;</span><br><span class="line">        ans[rt] += C*(r-l+<span class="number">1</span>);</span><br><span class="line">        mx[rt] += C;</span><br><span class="line">        mn[rt] += C;</span><br><span class="line">        lazy[rt] += C;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    PushDown(rt,mid-l+<span class="number">1</span>,r-mid);</span><br><span class="line">    <span class="keyword">if</span>(L &lt;= mid)</span><br><span class="line">        Update(L,R,C,l,mid,rt&lt;&lt;<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(R &gt; mid)</span><br><span class="line">        Update(L,R,C,mid+<span class="number">1</span>,r,rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>);</span><br><span class="line">    PushUp(rt);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-区间查询-查询区间和"><a href="#6-区间查询-查询区间和" class="headerlink" title="(6) 区间查询(查询区间和)"></a>(6) 区间查询(查询区间和)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">Query</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == tree[rt].l &amp;&amp; r == tree[rt].r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> tree[rt].ans+(r-l+<span class="number">1</span>)*tree[rt].lazy;</span><br><span class="line">    &#125;</span><br><span class="line">    tree[rt].ans += (tree[rt].r-tree[rt].l+<span class="number">1</span>)*tree[rt].lazy;</span><br><span class="line">    <span class="keyword">int</span> mid = (tree[rt].l + tree[rt].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    Add(rt&lt;&lt;<span class="number">1</span>,tree[rt].l,mid,tree[rt].lazy);</span><br><span class="line">    Add(rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,tree[rt].r,tree[rt].lazy);</span><br><span class="line">    tree[rt].lazy = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(r &lt;= mid)</span><br><span class="line">        <span class="keyword">return</span> Query(rt&lt;&lt;<span class="number">1</span>,l,r);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">if</span>(l &gt; mid)</span><br><span class="line">            <span class="keyword">return</span> Query(rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,l,r);</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> Query(rt&lt;&lt;<span class="number">1</span>,l,mid)+Query(rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="区间查询-查询区间最值"><a href="#区间查询-查询区间最值" class="headerlink" title="区间查询(查询区间最值)"></a>区间查询(查询区间最值)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Query_m</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tree[rt].nmax &lt;= nmax &amp;&amp; tree[rt].nmin &gt;= tree[rt].nmin)   <span class="comment">// 不必再往下找</span></span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">if</span>(tree[rt].l == l &amp;&amp; tree[rt].r == r)</span><br><span class="line">    &#123;</span><br><span class="line">        nmax = max(tree[rt].nmax,nmax);</span><br><span class="line">        nmin = min(tree[rt].nmin,nmin);</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (tree[rt].l+tree[rt].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(r &lt;= mid)</span><br><span class="line">        Query_m(rt&lt;&lt;<span class="number">1</span>,l,r);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">if</span>(l &gt; mid)</span><br><span class="line">            Query_m(rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,l,r);</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            Query_m(rt&lt;&lt;<span class="number">1</span>,l,mid);</span><br><span class="line">            Query_m(rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-调用函数"><a href="#7-调用函数" class="headerlink" title="(7) 调用函数"></a>(7) 调用函数</h2><p>建树<br>$Build(1,n,1);$</p><p>点更新<br>$Add(L,C,1,n,1);$<br>区间修改<br>$Update(L,R,C,1,n,1);$<br>区间查询<br>$ll ANS = Query(L,R,1,n,1);$</p><p>若只涉及点更新 只需用(1)(2)(4)(6)<br>若只涉及区间更新 需用(1)(2)(3)(5)(6)<br>若两种更新都有 则在所有向子区间查询或更新前 都需$PushDown()$</p>]]></content>
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 线段树 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模板 </tag>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>扩展KMP模板</title>
      <link href="/2018/08/08/EXKMP-Templet/"/>
      <url>/2018/08/08/EXKMP-Templet/</url>
      <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><blockquote><p>参考资料:</p><blockquote><p><a href="http://wenku.baidu.com/view/8e9ebefb0242a8956bece4b3.html" target="_blank" rel="noopener">刘雅琼PPT讲解</a><br><a href="http://www.cnblogs.com/kuangbin/archive/2012/11/09/2763242.html" target="_blank" rel="noopener">kuangbin的博客</a></p></blockquote><p>给出模板串A和子串B，长度分别为$lenA$和$lenB$，要求在线性时间内，对于每个$A[i]$$(0 &lt;= i &lt; lenA)$</p><p>求出$A[i..lenA-1]$ 与B的最长公共前缀长度，记为$ex[i]$(或者说，$ex[i]$为满足$A[i..i+z-1]==B[0..z-1]$的最大的z值)。</p><p>扩展KMP可以用来解决很多字符串问题，如求一个字符串的最长回文子串和最长重复子串。</p></blockquote><a id="more"></a><h2 id="1-头文件"><a href="#1-头文件" class="headerlink" title="(1)头文件"></a>(1)头文件</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">2000010</span>;</span><br><span class="line"><span class="keyword">int</span> Next[MAXN];</span><br><span class="line"><span class="keyword">int</span> extend[MAXN];</span><br></pre></td></tr></table></figure><h2 id="2-EXKMP"><a href="#2-EXKMP" class="headerlink" title="(2)EXKMP"></a>(2)EXKMP</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EKMP</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">char</span> t[])</span><span class="comment">//s为主串，t为模板串</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,p,L;</span><br><span class="line">    <span class="keyword">int</span> slen = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">int</span> tlen = <span class="built_in">strlen</span>(t);</span><br><span class="line">    Next[<span class="number">0</span>] = tlen;</span><br><span class="line">    j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(j+<span class="number">1</span> &lt; tlen &amp;&amp; t[j] == t[j+<span class="number">1</span>])</span><br><span class="line">        j++;</span><br><span class="line">    Next[<span class="number">1</span>] = j;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">2</span>;i &lt; tlen;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        p = Next[a]+a<span class="number">-1</span>;</span><br><span class="line">        L = Next[i-a];</span><br><span class="line">        <span class="keyword">if</span>(i+L&lt;p+<span class="number">1</span>)</span><br><span class="line">            Next[i]=L;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            j=max(<span class="number">0</span>,p-i+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">while</span>(i+j &lt; tlen &amp;&amp; t[i+j] == t[j])</span><br><span class="line">                j++;</span><br><span class="line">            Next[i] = j;</span><br><span class="line">            a = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(j &lt; slen &amp;&amp; j &lt; tlen &amp;&amp; s[j] == t[j])j++;</span><br><span class="line">    extend[<span class="number">0</span>] = j;</span><br><span class="line">    a = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>;i &lt; slen;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        p = extend[a]+a<span class="number">-1</span>;</span><br><span class="line">        L = Next[i-a];</span><br><span class="line">        <span class="keyword">if</span>(L+i &lt; p+<span class="number">1</span>)</span><br><span class="line">            extend[i] = L;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            j = max(<span class="number">0</span>,p-i+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">while</span>(i+j&lt;slen &amp;&amp; j &lt; tlen &amp;&amp; s[i+j] == t[j])</span><br><span class="line">                j++;</span><br><span class="line">            extend[i] = j;</span><br><span class="line">            a = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><blockquote><ul><li>$extend[i]$表示原串以第$i$开始与模式串的前缀的最长匹配</li></ul><p>经典题目:</p><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3613" target="_blank" rel="noopener">HDU3613</a></p><p><a href="https://www.baidu.com/link?url=jH1YXbLjsppGuLX-nPn15VgbP6DnwdMFPpYxleNSK3ndJKRM4TBFtAsqwmR--e57RzYLASUPbzlj2WuoFc3NFFD9tBbWT6IjWl9rU0_rhHu&amp;wd=&amp;eqid=af2212c500012f7f000000035b84afe3" target="_blank" rel="noopener"><em>HDU 3613</em> Best Reward(扩展KMP:回文判断) - CSDN博客</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> 字符串 </category>
          
          <category> 扩展KMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模板 </tag>
            
            <tag> 扩展KMP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>KMP算法模板</title>
      <link href="/2018/08/05/KMP-Templet/"/>
      <url>/2018/08/05/KMP-Templet/</url>
      <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><blockquote><p>模板出自<a href="http://www.cnblogs.com/kuangbin/archive/2012/08/14/2638803.html" target="_blank" rel="noopener">kuangbin的博客</a> </p><p>典型应用:</p><blockquote><p>给你两个字符串，寻找其中一个字符串是否包含另一个字符串，如果包含，返回包含的起始位置。 </p></blockquote></blockquote><a id="more"></a><h2 id="1-头文件"><a href="#1-头文件" class="headerlink" title="(1) 头文件"></a>(1) 头文件</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> Next[N];</span><br><span class="line"><span class="keyword">char</span> S[N],T[N];   <span class="comment">// S:主串  T:模式串</span></span><br><span class="line"><span class="keyword">int</span> slen,tlen;</span><br></pre></td></tr></table></figure><h2 id="2-getNext-函数"><a href="#2-getNext-函数" class="headerlink" title="(2) getNext()函数"></a>(2) getNext()函数</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getNext</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j,k;</span><br><span class="line">    j = <span class="number">0</span>;  k = <span class="number">-1</span>; Next[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(j &lt; tlen)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(k == <span class="number">-1</span> || T[j] == T[k])</span><br><span class="line">            Next[++j] = ++k;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            k = Next[k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-返回模式串T在主串S中首次出现的位置"><a href="#3-返回模式串T在主串S中首次出现的位置" class="headerlink" title="(3) 返回模式串T在主串S中首次出现的位置"></a>(3) 返回模式串T在主串S中首次出现的位置</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回模式串T在主串S中首次出现的位置</span></span><br><span class="line"><span class="comment">// 返回的位置是从0开始的</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP_Index</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>,j = <span class="number">0</span>;</span><br><span class="line">    getNext();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(i &lt; slen &amp;&amp; j &lt; tlen)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(j == <span class="number">-1</span> || S[i] == T[j])</span><br><span class="line">        &#123;</span><br><span class="line">            i++;    j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            j = Next[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j == tlen)</span><br><span class="line">        <span class="keyword">return</span> i-tlen;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-返回模式串在主串S中出现的次数"><a href="#4-返回模式串在主串S中出现的次数" class="headerlink" title="(4) 返回模式串在主串S中出现的次数"></a>(4) 返回模式串在主串S中出现的次数</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP_Count</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> i,j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(slen == <span class="number">1</span> &amp;&amp; tlen == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(S[<span class="number">0</span>] == T[<span class="number">0</span>])</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    getNext();</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; slen;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(j &gt; <span class="number">0</span> &amp;&amp; S[i] != T[j])</span><br><span class="line">            j = Next[j];</span><br><span class="line">        <span class="keyword">if</span>(S[i] == T[j])</span><br><span class="line">            j++;</span><br><span class="line">        <span class="keyword">if</span>(j == tlen)</span><br><span class="line">        &#123;</span><br><span class="line">            ans++;</span><br><span class="line">            j = Next[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-全家福"><a href="#5-全家福" class="headerlink" title="(5) 全家福"></a>(5) 全家福</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***************KMP***************/</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> Next[N];</span><br><span class="line"><span class="keyword">char</span> S[N],T[N];   <span class="comment">// S:主串  T:模式串</span></span><br><span class="line"><span class="keyword">int</span> slen,tlen;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getNext</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j,k;</span><br><span class="line">    j = <span class="number">0</span>;  k = <span class="number">-1</span>; Next[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(j &lt; tlen)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(k == <span class="number">-1</span> || T[j] == T[k])</span><br><span class="line">            Next[++j] = ++k;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            k = Next[k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回模式串T在主串S中首次出现的位置</span></span><br><span class="line"><span class="comment">// 返回的位置是从0开始的</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP_Index</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>,j = <span class="number">0</span>;</span><br><span class="line">    getNext();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(i &lt; slen &amp;&amp; j &lt; tlen)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(j == <span class="number">-1</span> &amp;&amp; S[i] == T[j])</span><br><span class="line">        &#123;</span><br><span class="line">            i++;    j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            j = Next[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j == tlen)</span><br><span class="line">        <span class="keyword">return</span> i-tlen;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回模式串在主串S中出现的次数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP_Count</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> i,j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(slen == <span class="number">1</span> &amp;&amp; tlen == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(S[<span class="number">0</span>] == T[<span class="number">0</span>])</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    getNext();</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; slen;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(j &gt; <span class="number">0</span> &amp;&amp; S[i] != T[j])</span><br><span class="line">            j = Next[j];</span><br><span class="line">        <span class="keyword">if</span>(S[i] == T[j])</span><br><span class="line">            j++;</span><br><span class="line">        <span class="keyword">if</span>(j == tlen)</span><br><span class="line">        &#123;</span><br><span class="line">            ans++;</span><br><span class="line">            j = Next[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/***************END***************/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> TT;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; TT;</span><br><span class="line">    <span class="keyword">while</span>(TT--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; S &gt;&gt; T;</span><br><span class="line">        slen = <span class="built_in">strlen</span>(S);</span><br><span class="line">        tlen = <span class="built_in">strlen</span>(T);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"模式串T在主串中首次出现的位置是: "</span> &lt;&lt; KMP_Index() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"模式串T在主串S中出现的次数为: "</span> &lt;&lt; KMP_Count() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-补充"><a href="#6-补充" class="headerlink" title="(6) 补充"></a>(6) 补充</h2><h3 id="KMP的优化"><a href="#KMP的优化" class="headerlink" title="KMP的优化"></a>KMP的优化</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getNext</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j,k;</span><br><span class="line">    j = <span class="number">0</span>,k = <span class="number">-1</span>,Next[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(j &lt; tlen)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(k == <span class="number">-1</span> || T[j] == T[k])</span><br><span class="line">        &#123;</span><br><span class="line">            j++,k++;</span><br><span class="line">            <span class="keyword">if</span>(T[j] == T[k])</span><br><span class="line">                Next[j] = Next[k];   <span class="comment">// 直接走到下一个不相等的地方</span></span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                Next[j] = k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            k = Next[k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Next[]数组求循环节<br>性质:</p><ul><li>len-next[i]为此字符串的最小循环节(i为字符串的结尾)    </li><li>另外如果len%(len-next[i])==0,此字符串的最小周期就为len/(len-next[i])</li><li>如果len%(len-next[i]) != 0    则没有循环节？？？(小声逼逼)</li></ul></blockquote><h3 id="相关习题"><a href="#相关习题" class="headerlink" title="相关习题:"></a><strong>相关习题:</strong></h3><blockquote><p> <strong>HDU3746</strong> <a href="http://acm.hdu.edu.cn/showproblem.php?pid=3746" target="_blank" rel="noopener">Cyclic Nacklace</a><br> <strong>HDU1358</strong> <a href="http://acm.hdu.edu.cn/showproblem.php?pid=1358" target="_blank" rel="noopener">Period</a><br> <strong>POJ2406</strong> <a href="http://poj.org/problem?id=2406" target="_blank" rel="noopener">Power Strings</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> 字符串 </category>
          
          <category> KMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模板 </tag>
            
            <tag> KMP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2018暑假遗留题目</title>
      <link href="/2018/07/28/2018-Summer-Vacation/"/>
      <url>/2018/07/28/2018-Summer-Vacation/</url>
      <content type="html"><![CDATA[<div class="note danger"><p>唉~退役了</p><p>也没能把题补完</p><p>如果刚开始搞ACM的时候有一个人能指导我一下就好了，哪怕是简简单单的给我介绍一下各种算法，好多东西都接近大二下学期了才开始学</p></div><blockquote><p>记录自己比赛过程中需要补的题目,防止时间长了将其忘光 </p></blockquote><a id="more"></a><h2 id="牛客多校"><a href="#牛客多校" class="headerlink" title="牛客多校"></a>牛客多校</h2><h3 id="牛客多校第一场"><a href="#牛客多校第一场" class="headerlink" title="牛客多校第一场"></a>牛客多校第一场</h3><blockquote><p> <del><strong>J</strong>     <a href="https://www.nowcoder.com/acm/contest/139/J" target="_blank" rel="noopener">Different Integers</a></del> </p><blockquote><p>离线树状数组</p></blockquote></blockquote><h3 id="牛客多校第二场"><a href="#牛客多校第二场" class="headerlink" title="牛客多校第二场"></a>牛客多校第二场</h3><blockquote><p> <del><strong>J</strong>    <a href="https://www.nowcoder.com/acm/contest/140/J" target="_blank" rel="noopener">farm</a></del> </p><blockquote><p>二维树状数组 </p></blockquote></blockquote><h3 id="牛客多校第三场"><a href="#牛客多校第三场" class="headerlink" title="牛客多校第三场"></a>牛客多校第三场</h3><blockquote><p><del><strong>C</strong>    <a href="https://www.nowcoder.com/acm/contest/141/C" target="_blank" rel="noopener">Shuffle Cards</a></del> </p><blockquote><p>rope(看脸)、Splay(区间反转)、Treap</p></blockquote><p> <del><strong>E</strong>   <a href="https://www.nowcoder.com/acm/contest/141/E" target="_blank" rel="noopener">Sort String</a></del> </p><blockquote><p>字符串hash   /   KMP找循环节</p></blockquote></blockquote><h3 id="牛客多校第四场"><a href="#牛客多校第四场" class="headerlink" title="牛客多校第四场"></a>牛客多校第四场</h3><blockquote><p> <del><strong>A</strong>    <a href="https://www.nowcoder.com/acm/contest/142/A" target="_blank" rel="noopener">Ternary String</a></del> </p><blockquote><p>欧拉降幂  打表找规律</p></blockquote><p> <strong>D</strong>     <a href="https://www.nowcoder.com/acm/contest/142/D" target="_blank" rel="noopener">Another Distinct Values</a> </p><blockquote><p>打表找规律</p></blockquote></blockquote><h3 id="牛客多校第五场"><a href="#牛客多校第五场" class="headerlink" title="牛客多校第五场"></a>牛客多校第五场</h3><blockquote><p><del><strong>A</strong>    <a href="https://www.nowcoder.com/acm/contest/143/A" target="_blank" rel="noopener">gpa</a></del></p><blockquote><p>最大化平均值 白书P143</p></blockquote><p><strong>E</strong>     <a href="https://www.nowcoder.com/acm/contest/143/E" target="_blank" rel="noopener">room</a></p><blockquote><p>带权二分图(KM)   /   费用流</p></blockquote><p><strong>F</strong>    <a href="https://www.nowcoder.com/acm/contest/143/F" target="_blank" rel="noopener">take</a></p><blockquote><p>树状数组</p></blockquote></blockquote><h3 id="牛客多校第六场"><a href="#牛客多校第六场" class="headerlink" title="牛客多校第六场"></a>牛客多校第六场</h3><blockquote><p><strong>C</strong> <a href="https://www.nowcoder.com/acm/contest/144/C" target="_blank" rel="noopener">Generation I</a></p><blockquote><p>排列组合、数学</p></blockquote><p> <del><strong>J</strong> <a href="https://www.nowcoder.com/acm/contest/144/J" target="_blank" rel="noopener">Heritage of skywalkert</a></del></p><blockquote><p>结论题、数论</p></blockquote></blockquote><h3 id="牛客多校第七场"><a href="#牛客多校第七场" class="headerlink" title="牛客多校第七场"></a>牛客多校第七场</h3><blockquote><p><strong>C</strong>  <a href="https://www.nowcoder.com/acm/contest/145/C" target="_blank" rel="noopener">Bit Compression</a></p><blockquote><p>暴力</p></blockquote><p> <strong>E</strong>  <a href="https://www.nowcoder.com/acm/contest/145/E" target="_blank" rel="noopener">Counting 4-Cliques</a></p><blockquote><p>  构造  /  背包</p></blockquote><p><strong>J</strong>  <a href="https://www.nowcoder.com/acm/contest/145/J" target="_blank" rel="noopener">Sudoku Subrectangles</a></p><blockquote><p>   枚举上下边界+扫一遍(神仙···  不懂)</p></blockquote></blockquote><h3 id="牛客多校第八场"><a href="#牛客多校第八场" class="headerlink" title="牛客多校第八场"></a>牛客多校第八场</h3><blockquote><p><strong>B</strong>  <a href="https://www.nowcoder.com/acm/contest/146/B" target="_blank" rel="noopener">Filling pools</a></p><blockquote><p>结论+构造</p></blockquote><p><strong>G</strong>  <a href="https://www.nowcoder.com/acm/contest/146/G" target="_blank" rel="noopener">Counting regions</a></p><blockquote><p>结论/公式 + 大数</p></blockquote><p><strong>E</strong>  <a href="https://www.nowcoder.com/acm/contest/146/E" target="_blank" rel="noopener">Touring cities</a></p><blockquote><p>树形DP 计数</p></blockquote><p><strong>H</strong>  <a href="https://www.nowcoder.com/acm/contest/146/H" target="_blank" rel="noopener">Playing games</a></p><blockquote><p>DP+FWT</p></blockquote></blockquote><h3 id="牛客多校第九场"><a href="#牛客多校第九场" class="headerlink" title="牛客多校第九场"></a>牛客多校第九场</h3><blockquote><p><strong>E</strong>  <a href="https://www.nowcoder.com/acm/contest/147/E" target="_blank" rel="noopener">Music Game</a></p><blockquote><p>组合数 斯特灵公式</p></blockquote><p><strong>F</strong>  <a href="https://www.nowcoder.com/acm/contest/147/F" target="_blank" rel="noopener">Typing practice</a></p><blockquote><p>TRIE 图上的最短路 /  AC自动机  / KMP</p></blockquote><p>这一场要看题解  很详细</p></blockquote><h3 id="牛客多校第十场"><a href="#牛客多校第十场" class="headerlink" title="牛客多校第十场"></a>牛客多校第十场</h3><h2 id="中石油个人训练赛"><a href="#中石油个人训练赛" class="headerlink" title="中石油个人训练赛"></a>中石油个人训练赛</h2><h3 id="第三阶段个人训练赛第五场"><a href="#第三阶段个人训练赛第五场" class="headerlink" title="第三阶段个人训练赛第五场"></a>第三阶段个人训练赛第五场</h3><blockquote><p> <del><strong>K</strong>    <a href="http://exam.upc.edu.cn/problem.php?id=5725" target="_blank" rel="noopener">小奇画画</a></del> </p><blockquote><p>线段树+离散化 (理解不透彻)</p></blockquote><p> <del><strong>M</strong>    <a href="http://exam.upc.edu.cn/problem.php?id=5727" target="_blank" rel="noopener">小奇遐想</a></del> </p><blockquote><p>树状数组+容斥 </p></blockquote></blockquote><h3 id="第三阶段个人训练赛第六场"><a href="#第三阶段个人训练赛第六场" class="headerlink" title="第三阶段个人训练赛第六场"></a>第三阶段个人训练赛第六场</h3><blockquote><p> <strong>H</strong>    <a href="http://exam.upc.edu.cn/problem.php?id=6902" target="_blank" rel="noopener">Trie树</a> </p><blockquote><p>状压DP</p></blockquote><p> <del><strong>I</strong>    <a href="http://exam.upc.edu.cn/problem.php?id=6904" target="_blank" rel="noopener">Sandglass</a></del> </p><blockquote><p>模拟</p></blockquote></blockquote><h3 id="第三阶段个人训练赛第七场"><a href="#第三阶段个人训练赛第七场" class="headerlink" title="第三阶段个人训练赛第七场"></a>第三阶段个人训练赛第七场</h3><blockquote><p><strong>A</strong>   <a href="http://exam.upc.edu.cn/problem.php?id=6445" target="_blank" rel="noopener">棋盘V</a></p><blockquote><p>网络流(题意貌似读错了)</p></blockquote><p><strong>I</strong>    <a href="http://exam.upc.edu.cn/problem.php?id=6611" target="_blank" rel="noopener">Bichrome Tree</a></p><blockquote><p>树形DP</p></blockquote></blockquote><h3 id="第三阶段个人训练赛第八场"><a href="#第三阶段个人训练赛第八场" class="headerlink" title="第三阶段个人训练赛第八场"></a>第三阶段个人训练赛第八场</h3><blockquote><p><del><strong>C</strong>    <a href="http://exam.upc.edu.cn/problem.php?id=6616" target="_blank" rel="noopener">Small Multiple</a></del> </p><blockquote><p>最短路 √   /  双向队列+抽屉原理   (脑洞太大  学不来  有点迷)</p></blockquote><p><strong>F</strong>    <a href="http://exam.upc.edu.cn/problem.php?id=6617" target="_blank" rel="noopener">Finite Encyclopedia of Integer Sequences</a> </p><blockquote><p>打表找规律</p></blockquote></blockquote><h3 id="第三阶段个人训练赛第九场"><a href="#第三阶段个人训练赛第九场" class="headerlink" title="第三阶段个人训练赛第九场"></a>第三阶段个人训练赛第九场</h3><blockquote><p><strong>A</strong>    <a href="http://exam.upc.edu.cn/problem.php?id=6759" target="_blank" rel="noopener">异或序列</a> </p><blockquote><p>莫队算法</p></blockquote><p><del><strong>H</strong>   <a href="http://exam.upc.edu.cn/problem.php?id=6760" target="_blank" rel="noopener">九连环</a></del> </p><blockquote><p>大数迭代(JAVA水过)</p></blockquote><p><strong>N</strong>   <a href="http://exam.upc.edu.cn/problem.php?id=6621" target="_blank" rel="noopener">HSI</a> </p><blockquote><p>数学期望、推导</p></blockquote></blockquote><h3 id="第三阶段个人训练赛第十场"><a href="#第三阶段个人训练赛第十场" class="headerlink" title="第三阶段个人训练赛第十场"></a>第三阶段个人训练赛第十场</h3><blockquote><p><strong>K</strong>  <a href="http://exam.upc.edu.cn/problem.php?id=6744" target="_blank" rel="noopener">求和VII</a></p><blockquote><p>LCA+前缀和</p></blockquote></blockquote><h2 id="Codeforces"><a href="#Codeforces" class="headerlink" title="Codeforces"></a>Codeforces</h2><h3 id="Educational-Codeforces-Round-48-Rated-for-Div-2"><a href="#Educational-Codeforces-Round-48-Rated-for-Div-2" class="headerlink" title="Educational Codeforces Round 48 (Rated for Div. 2)"></a>Educational Codeforces Round 48 (Rated for Div. 2)</h3><blockquote><p><strong>C</strong>  <a href="http://codeforces.com/contest/1016/problem/C" target="_blank" rel="noopener">Vasya And The Mushrooms</a></p><blockquote><p>DP</p></blockquote></blockquote><h3 id="两场Div-3"><a href="#两场Div-3" class="headerlink" title="两场Div.3"></a>两场Div.3</h3><blockquote><p><del><a href="https://cn.vjudge.net/problem/1550035/origin" target="_blank" rel="noopener">CodeForces 977E</a></del></p><p><a href="https://cn.vjudge.net/problem/1568019/origin" target="_blank" rel="noopener">CodeForces 978D</a></p><p><a href="https://cn.vjudge.net/problem/1568021/origin" target="_blank" rel="noopener">CodeForces 978F</a></p><p><a href="https://cn.vjudge.net/problem/1568022/origin" target="_blank" rel="noopener">CodeForces 978G</a></p></blockquote><h2 id="ACM-ICPC-Contest"><a href="#ACM-ICPC-Contest" class="headerlink" title="ACM-ICPC Contest"></a>ACM-ICPC Contest</h2><h3 id="ACM-ICPC-2015-Changchun-Preliminary-Contest"><a href="#ACM-ICPC-2015-Changchun-Preliminary-Contest" class="headerlink" title="ACM-ICPC 2015 Changchun Preliminary Contest"></a>ACM-ICPC 2015 Changchun Preliminary Contest</h3><blockquote><p><strong>A</strong>    <a href="https://nanti.jisuanke.com/t/29328" target="_blank" rel="noopener">Alisha’s Party</a></p><blockquote><p>优先队列</p></blockquote><p><strong>J</strong>    <a href="https://nanti.jisuanke.com/t/29337" target="_blank" rel="noopener">Unknown Treasure</a> </p><blockquote><p>中国剩余定理 数论</p></blockquote></blockquote><h3 id="2016-ACM-ICPC-Asia-Regional-Qingdao-Online"><a href="#2016-ACM-ICPC-Asia-Regional-Qingdao-Online" class="headerlink" title="2016 ACM/ICPC Asia Regional Qingdao Online"></a>2016 ACM/ICPC Asia Regional Qingdao Online</h3><blockquote><p><strong>HDU5880</strong>   <a href="http://acm.hdu.edu.cn/showproblem.php?pid=5880" target="_blank" rel="noopener">Family View</a></p><blockquote><p>AC自动机</p></blockquote><p><strong>HDU5883</strong>   <a href="http://acm.hdu.edu.cn/showproblem.php?pid=5883" target="_blank" rel="noopener">The Best Path</a></p><blockquote><p>欧拉回路</p></blockquote></blockquote>]]></content>
      
      <categories>
          
          <category> 2018暑假 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 补题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>线段树模板(含区间最大(小)值)</title>
      <link href="/2018/07/23/Segment-Tree-Templet/"/>
      <url>/2018/07/23/Segment-Tree-Templet/</url>
      <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><blockquote><p>线段树，类似区间树，它在各个节点保存一条线段（数组中的一段子数组），主要用于高效解决连续区间的动态查询问题，由于二叉结构的特性，它基本能保持每个操作的复杂度为$O(logn)$。</p></blockquote><a id="more"></a><h2 id="0-定义"><a href="#0-定义" class="headerlink" title="(0) 定义"></a>(0) 定义</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">50010</span>;</span><br><span class="line"><span class="keyword">int</span> a[MAXN],ans[MAXN&lt;&lt;<span class="number">2</span>],lazy[MAXN&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="comment">// a[]为原序列信息,ans[]模拟线段树维护区间和,lazy[]为懒惰标记</span></span><br><span class="line"><span class="keyword">int</span> mx[MAXN&lt;&lt;<span class="number">2</span>],mn[MAXN&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="comment">// mx[]区间最大值 mn[]区间最小值</span></span><br></pre></td></tr></table></figure><h2 id="1-更新结点信息"><a href="#1-更新结点信息" class="headerlink" title="(1) 更新结点信息"></a>(1) 更新结点信息</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PushUp</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ans[rt] = ans[rt&lt;&lt;<span class="number">1</span>] + ans[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>];   <span class="comment">// 区间和</span></span><br><span class="line">    mx[rt] = max(mx[rt&lt;&lt;<span class="number">1</span>],mx[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]);   <span class="comment">// 区间最大值</span></span><br><span class="line">    mn[rt] = min(mn[rt&lt;&lt;<span class="number">1</span>],mn[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]);   <span class="comment">// 区间最小值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-建树"><a href="#2-建树" class="headerlink" title="(2) 建树"></a>(2) 建树</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == r)</span><br><span class="line">    &#123;</span><br><span class="line">        mx[rt] = mn[rt] = ans[rt] = a[l];</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    Build(l,mid,rt&lt;&lt;<span class="number">1</span>);</span><br><span class="line">    Build(mid+<span class="number">1</span>,r,rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>);</span><br><span class="line">    PushUp(rt);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-下推懒惰标记"><a href="#3-下推懒惰标记" class="headerlink" title="(3) 下推懒惰标记"></a>(3) 下推懒惰标记</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PushDown</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> ln,<span class="keyword">int</span> rn)</span>   </span></span><br><span class="line"><span class="function"><span class="comment">// ln表示左子树元素结点个数,rn表示右子树结点个数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(lazy[rt])</span><br><span class="line">    &#123;</span><br><span class="line">        lazy[rt&lt;&lt;<span class="number">1</span>] += lazy[rt];</span><br><span class="line">        lazy[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>] += lazy[rt];</span><br><span class="line">        ans[rt&lt;&lt;<span class="number">1</span>] += lazy[rt]*ln;</span><br><span class="line">        ans[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>] += lazy[rt]*rn;</span><br><span class="line">        mx[rt&lt;&lt;<span class="number">1</span>] += lazy[rt];</span><br><span class="line">        mx[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>] += lazy[rt];</span><br><span class="line">        mn[rt&lt;&lt;<span class="number">1</span>] += lazy[rt];</span><br><span class="line">        mn[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>] += lazy[rt];</span><br><span class="line">        lazy[rt] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-点更新"><a href="#4-点更新" class="headerlink" title="(4) 点更新"></a>(4) 点更新</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> C,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == r)</span><br><span class="line">    &#123;</span><br><span class="line">        ans[rt] += C;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    PushDown(rt,mid-l+<span class="number">1</span>,r-mid);   <span class="comment">// 若既有点更新又有区间更新，需要这句话</span></span><br><span class="line">    <span class="comment">// 什么叫既有点更新又有区间更新？？？</span></span><br><span class="line">    <span class="keyword">if</span>(L &lt;= mid)</span><br><span class="line">        Add(L,C,l,mid,rt&lt;&lt;<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        Add(L,C,mid+<span class="number">1</span>,r,rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>);</span><br><span class="line">    PushUp(rt);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-区间更新"><a href="#5-区间更新" class="headerlink" title="(5) 区间更新"></a>(5) 区间更新</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> C,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)</span><br><span class="line">    &#123;</span><br><span class="line">        ans[rt] += C*(r-l+<span class="number">1</span>);</span><br><span class="line">        mx[rt] += C;</span><br><span class="line">        mn[rt] += C;</span><br><span class="line">        lazy[rt] += C;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    PushDown(rt,mid-l+<span class="number">1</span>,r-mid);</span><br><span class="line">    <span class="keyword">if</span>(L &lt;= mid)</span><br><span class="line">        Update(L,R,C,l,mid,rt&lt;&lt;<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(R &gt; mid)</span><br><span class="line">        Update(L,R,C,mid+<span class="number">1</span>,r,rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>);</span><br><span class="line">    PushUp(rt);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-区间查询"><a href="#6-区间查询" class="headerlink" title="(6) 区间查询"></a>(6) 区间查询</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">Query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// return mx[rt];</span></span><br><span class="line">        <span class="comment">// return mn[rt];</span></span><br><span class="line">        <span class="keyword">return</span> ans[rt];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    PushDown(rt,mid-l+<span class="number">1</span>,r-mid);   <span class="comment">// 若更新只有点更新,不需要这句</span></span><br><span class="line">    ll ANS = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// ll MAX = 0;</span></span><br><span class="line">    <span class="comment">// ll MIN = INF;</span></span><br><span class="line">    <span class="keyword">if</span>(L &lt;= mid)</span><br><span class="line">    &#123;</span><br><span class="line">        ANS += Query(L,R,l,mid,rt&lt;&lt;<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// MAX = max(Query(L,R,l,mid,rt&lt;&lt;1),MAX);</span></span><br><span class="line">        <span class="comment">// MIN = min(Query(L,R,l,mid,rt&lt;&lt;1),MIN);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(R &gt; mid)</span><br><span class="line">    &#123;</span><br><span class="line">        ANS += Query(L,R,mid+<span class="number">1</span>,r,rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// MAX = max(Query(L,R,mid+1,r,rt&lt;&lt;1|1),MAX);</span></span><br><span class="line">        <span class="comment">// MIN = min(Query(L,R,mid+1,r,rt&lt;&lt;1|1),MIN);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// return MAX;</span></span><br><span class="line">    <span class="comment">// return MIN;</span></span><br><span class="line">    <span class="keyword">return</span> ANS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-调用函数"><a href="#7-调用函数" class="headerlink" title="(7) 调用函数"></a>(7) 调用函数</h2><p>建树<br>$Build(1,n,1);$</p><p>点更新<br>$Add(L,C,1,n,1);$<br>区间修改<br>$Update(L,R,C,1,n,1);$<br>区间查询<br>$ll$ $ANS = Query(L,R,1,n,1);$</p><p>若只涉及点更新 只需用(1)(2)(4)(6)<br>若只涉及区间更新 需用(1)(2)(3)(5)(6)<br>若两种更新都有 则在所有向子区间查询或更新前 都需PushDown()</p>]]></content>
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 线段树 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模板 </tag>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>[USACO18OPEN]Out of Sorts G</title>
      <link href="/2018/07/22/USACO18OPEN-Out-of-Sorts-G/"/>
      <url>/2018/07/22/USACO18OPEN-Out-of-Sorts-G/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="https://www.luogu.org/problemnew/show/P4375" target="_blank" rel="noopener">P4375</a></p><p>传送门：<a href="http://exam.upc.edu.cn/problem.php?id=6347&amp;csrf=PPJV6ndmkov4AAl1vPrG4vYaRDUOpM4I" target="_blank" rel="noopener">UPC6347</a></p><blockquote><p>留意着农场之外的长期职业生涯的可能性，奶牛Bessie开始在不同的在线编程网站上学习算法。</p><p>她到目前为止最喜欢的算法是“冒泡排序”。这是Bessie的对长度为 $N$ 的数组 $A $进行排序的奶牛码实现。</p></blockquote><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sorted = <span class="literal">false</span></span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">not</span> sorted):</span><br><span class="line">   sorted = <span class="literal">true</span></span><br><span class="line">   moo</span><br><span class="line">   <span class="keyword">for</span> i = <span class="number">0</span> to N<span class="number">-2</span>:</span><br><span class="line">      <span class="keyword">if</span> A[i+<span class="number">1</span>] &lt; A[i]:</span><br><span class="line">         swap A[i], A[i+<span class="number">1</span>]</span><br><span class="line">         sorted = <span class="literal">false</span></span><br></pre></td></tr></table></figure><blockquote><p>显然，奶牛码中的“moo”指令的作用只是输出“moo”。奇怪的是，Bessie看上去执着于在她的代码中的不同位置使用这个语句。</p><p>在用若干个数组测试了她的代码之后，Bessie得到一个有趣的观察现象：大的元素很快就会被拉到数组末尾，然而小的元素需要很长时间“冒泡”到数组的开头（她怀疑这就是为什么这个算法得名的原因）。为了实验和缓解这一问题，Bessie试着修改了她的代码，使代码在每次循环中向前再向后各扫描一次，从而无论是大的元素还是小的元素在每一次循环中都有机会被拉较长的一段距离。她的代码现在是这样的：</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sorted = <span class="literal">false</span></span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">not</span> sorted):</span><br><span class="line">   sorted = <span class="literal">true</span></span><br><span class="line">   moo</span><br><span class="line">   <span class="keyword">for</span> i = <span class="number">0</span> to N<span class="number">-2</span>:</span><br><span class="line">      <span class="keyword">if</span> A[i+<span class="number">1</span>] &lt; A[i]:</span><br><span class="line">         swap A[i], A[i+<span class="number">1</span>]</span><br><span class="line">   <span class="keyword">for</span> i = N<span class="number">-2</span> downto <span class="number">0</span>:</span><br><span class="line">      <span class="keyword">if</span> A[i+<span class="number">1</span>] &lt; A[i]:</span><br><span class="line">         swap A[i], A[i+<span class="number">1</span>]</span><br><span class="line">   <span class="keyword">for</span> i = <span class="number">0</span> to N<span class="number">-2</span>:</span><br><span class="line">      <span class="keyword">if</span> A[i+<span class="number">1</span>] &lt; A[i]:</span><br><span class="line">         sorted = <span class="literal">false</span></span><br></pre></td></tr></table></figure><blockquote><p>给定一个输入数组，请预测Bessie的代码会输出多少次“moo”。</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>输入的第一行包含 $N$ （ 1≤N≤100,0001≤N≤100,000 ）。接下来 $N$行描述了 $A[0]…A[N−1]$ ，每个数都是一个范围为 0… $10^9$的整数。输入数据不保证各不相同。</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>输出“moo”被输出的次数。</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>5<br>1<br>8<br>5<br>3<br>2</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>2</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><ol><li>首先，每一次while()循环都会有两个跑错位置的数回到自己应该在的位置<ul><li>以样例为例</li><li>1  8  5  3  2</li><li>1  2  5  3  8   &lt;—-  一次 while()循环之后   8跟2回到了自己应该在的位置</li><li>1  2  3  5  8   &lt;—-  两次while()循环之后</li></ul></li><li>我们定义一个名词“分割线”(恰好将一半跑到前边的大数跟一半跑到后边的大数分隔开) <ul><li>例如:样例中的$5$和$3$中间</li><li>分割线所在的位置在多次while()循环时一直是固定的(可以自己模拟几次试试)</li><li>$注意：分割线的位置我们是不知道具体在哪的，并且也不需要求出来它在哪，我们只需要遍历一遍就好了$</li></ul><ol><li>然后我们将输入的数据进行离散化,用a[i].id来表示数据a[i].x应该在的位置</li><li>离散化完成后进行以下几步<ul><li>遍历一遍</li><li>遍历的同时将$a[i].id$加到树状数组中,$bit[x]$表示$[1,x]$中有几个站对位置的数</li><li>$sum(i)$求的是在$[1,i]$中有多少站对位置的数</li><li>$i-sum(i)$表示$[1,i]$中有多少没站对位置的数</li><li>$站对位置：本应在分割线后边的数老老实实呆在后边$</li><li>$本应在后边的数跑到前边来便是没站对位置$</li><li>取$i-sum(i)$的最大值</li></ul></li></ol></li><li>特殊情况：不需要排序<ul><li>有可能所有的数全部相等（$不保证没有重复的数$）</li><li>本身有序($1$  $2$  $3$  $ 4$  $5$)<br>$特殊情况下while()循环运行的最小次数仍为1，用max(ans,1)即可解决$</li></ul></li></ol></blockquote><font size="5" color="#FF0000"><center>对此题的理解仍不透彻，以上题解可能有错，如有错误欢迎指出，谢谢！！！</center></font><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  E.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  https://www.luogu.org/problemnew/show/P4375 </span></span><br><span class="line"><span class="comment"> *           </span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/07/22 12时21分29秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.github.io/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> bit[N+<span class="number">1</span>];   <span class="comment">// bit[i]表示排好序之后有多少个数在[1，i]内</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,id;</span><br><span class="line">&#125;a[N+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= n)</span><br><span class="line">    &#123;</span><br><span class="line">        bit[i] += x;</span><br><span class="line">        i += (i&amp;-i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        s += bit[i];</span><br><span class="line">        i -= (i&amp;-i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> node a,<span class="keyword">const</span> node b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.x &lt; b.x || (a.x == b.x &amp;&amp; a.id &lt; b.id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">    freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">-99</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a[i].x;</span><br><span class="line">        a[i].id = i;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        add(a[i].id,<span class="number">1</span>);</span><br><span class="line">        ans = max(ans,i-sum(i));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,max(ans,<span class="number">1</span>));</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 思维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>重拾背包</title>
      <link href="/2018/07/15/Backbag/"/>
      <url>/2018/07/15/Backbag/</url>
      <content type="html"><![CDATA[<blockquote><p>回头看自己写了那么久代码却难以寸进，还是因为自己的只是体系残破不堪、千疮百孔。</p><p>今天先从典型的01背包开始补起</p></blockquote><a id="more"></a><h1 id="Bone-Collector"><a href="#Bone-Collector" class="headerlink" title="Bone Collector"></a>Bone Collector</h1><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=2602" target="_blank" rel="noopener">Bone Collector</a></p><blockquote><p>Many years ago , in Teddy’s hometown there was a man who was called “Bone Collector”. This man like to collect varies of bones , such as dog’s , cow’s , also he went to the grave … The bone collector had a big bag with a volume of V ,and along his trip of collecting there are a lot of bones , obviously , different bone has different value and different volume, now given the each bone’s value along his trip , can you calculate out the maximum of the total value the bone collector can get ?</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The first line contain a integer T , the number of cases. Followed by T cases , each case three lines , the first line contain two integer N , V, (N &lt;= 1000 , V &lt;= 1000 )representing the number of bones and the volume of his bag. And the second line contain N integers representing the value of each bone. The third line contain N integers representing the volume of each bone.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>One integer per line representing the maximum of the total value (this number will be less than 231).</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>1 </p><p>5 10 </p><p>1 2 3 4 5 </p><p>5 4 3 2 1</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>14</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  2602.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.hdu.edu.cn/showproblem.php?pid=2602</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/07/11 11时44分51秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.github.io/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1050</span>],b[<span class="number">1050</span>];</span><br><span class="line"><span class="keyword">int</span> d[<span class="number">1050</span>][<span class="number">1050</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> T,N,V;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; V;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= N;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= N;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(d,<span class="number">0</span>,<span class="keyword">sizeof</span> d);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= N;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt;= V;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(j &gt;= b[i])</span><br><span class="line">                    d[i][j] = max(d[i<span class="number">-1</span>][j],d[i<span class="number">-1</span>][j-b[i]]+a[i]);</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                    d[i][j] = d[i<span class="number">-1</span>][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">/*      优化空间复杂度</span></span><br><span class="line"><span class="comment"> *      int dp[1010];</span></span><br><span class="line"><span class="comment"> *      memset(dp,0,sizeof dp);</span></span><br><span class="line"><span class="comment"> *      for(int i = 1;i &lt;= N;i++)</span></span><br><span class="line"><span class="comment"> *      &#123;</span></span><br><span class="line"><span class="comment"> *          for(int j = V;j &gt;= b[i];j--)</span></span><br><span class="line"><span class="comment"> *          &#123;</span></span><br><span class="line"><span class="comment"> *              dp[j] = max(dp[j],dp[j-b[i]]+a[i]);</span></span><br><span class="line"><span class="comment"> *          &#125;</span></span><br><span class="line"><span class="comment"> *      &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; d[N][V] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="饭卡"><a href="#饭卡" class="headerlink" title="饭卡"></a>饭卡</h1><h2 id="描述-1"><a href="#描述-1" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=2546" target="_blank" rel="noopener">饭卡</a></p><blockquote><p>电子科大本部食堂的饭卡有一种很诡异的设计，即在购买之前判断余额。如果购买一个商品之前，卡上的剩余金额大于或等于5元，就一定可以购买成功（即使购买后卡上余额为负），否则无法购买（即使金额足够）。所以大家都希望尽量使卡上的余额最少。<br>某天，食堂中有n种菜出售，每种菜可购买一次。已知每种菜的价格以及卡上的余额，问最少可使卡上的余额为多少。</p></blockquote><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><blockquote><p>多组数据。对于每组数据：<br>第一行为正整数n，表示菜的数量。n&lt;=1000。<br>第二行包括n个正整数，表示每种菜的价格。价格不超过50。<br>第三行包括一个正整数m，表示卡上的余额。m&lt;=1000。</p><p>n=0表示数据结束。</p></blockquote><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><blockquote><p>对于每组输入,输出一行,包含一个整数，表示卡上可能的最小余额。</p></blockquote><h3 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h4><blockquote><p>1<br>50<br>5<br>10<br>1 2 3 2 1 1 2 3 2 1<br>50<br>0</p></blockquote><h4 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h4><blockquote><p>-45<br>32</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><ul><li>首先将所有的菜排序</li><li>求出还剩最后5元钱的时候能花掉的最多的金钱</li><li>用最后的5元钱来买最贵的菜</li><li>饭卡本来的金钱-能花掉最多的金钱-最贵的菜的价钱=要求的结果</li></ul></blockquote><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  2546.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.hdu.edu.cn/showproblem.php?pid=2546</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/07/12 11时40分47秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.github.io/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n &amp;&amp; n != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a[<span class="number">1020</span>];</span><br><span class="line">        <span class="keyword">int</span> dp[<span class="number">1020</span>];</span><br><span class="line">        <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span> a);</span><br><span class="line">        <span class="keyword">int</span> p;</span><br><span class="line">        p = n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; m;</span><br><span class="line">        <span class="keyword">if</span>(m &lt; <span class="number">5</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; m &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span> dp);</span><br><span class="line">            sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = m<span class="number">-5</span>;j &gt;= a[i];j--)</span><br><span class="line">                    dp[j] = max(dp[j],dp[j-a[i]]+a[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; m-dp[m<span class="number">-5</span>]-a[n] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Robberies"><a href="#Robberies" class="headerlink" title="Robberies"></a>Robberies</h1><h2 id="描述-2"><a href="#描述-2" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=2955" target="_blank" rel="noopener">Robberies</a></p><blockquote><p>The aspiring Roy the Robber has seen a lot of American movies, and knows that the bad guys usually gets caught in the end, often because they become too greedy. He has decided to work in the lucrative business of bank robbery only for a short while, before retiring to a comfortable job at a university. </p><p>For a few months now, Roy has been assessing the security of various banks and the amount of cash they hold. He wants to make a calculated risk, and grab as much money as possible.   </p><p>His mother, Ola, has decided upon a tolerable probability of getting caught. She feels that he is safe enough if the banks he robs together give a probability less than this.</p></blockquote><h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The first line of input gives T, the number of cases. For each scenario, the first line of input gives a floating point number P, the probability Roy needs to be below, and an integer N, the number of banks he has plans for. Then follow N lines, where line j gives an integer Mj and a floating point number Pj .  Bank j contains Mj millions, and the probability of getting caught from robbing it is Pj .</p></blockquote><h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test case, output a line with the maximum number of millions he can expect to get while the probability of getting caught is less than the limit set.</p><p>Notes and Constraints<br>0 &lt; T &lt;= 100<br>0.0 &lt;= P &lt;= 1.0<br>0 &lt; N &lt;= 100<br>0 &lt; Mj &lt;= 100<br>0.0 &lt;= Pj &lt;= 1.0<br>A bank goes bankrupt if it is robbed, and you may assume that all probabilities are independent as the police have very low funds.</p></blockquote><h3 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-5"><a href="#输入-5" class="headerlink" title="输入"></a>输入</h4><blockquote><p>3<br>0.04 3<br>1 0.02<br>2 0.03<br>3 0.05<br>0.06 3<br>2 0.03<br>2 0.03<br>3 0.05<br>0.10 3<br>1 0.03<br>2 0.02<br>3 0.05</p></blockquote><h4 id="输出-5"><a href="#输出-5" class="headerlink" title="输出"></a>输出</h4><blockquote><p>2</p><p>4</p><p>6</p></blockquote><h2 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h2><blockquote><ul><li>要求出让他不被抓情况下能抢的最多的金钱</li><li>现在将他被抓的概率变为不被抓的概率，这样只需要相乘便是他安全的概率</li><li>只需要这个概率小于（1-p） 他便是安全的</li><li>现在将他能抢到的金钱作为第二维、银行数目作为第一维</li><li>最后只需要倒序遍历一遍求出第一个安全的位置，那么这个位置的第二维便是他能抢劫的最多的金钱</li></ul></blockquote><h2 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  2955.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.hdu.edu.cn/showproblem.php?pid=2955</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/07/15 14时30分24秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.github.io/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-9</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m[<span class="number">120</span>];</span><br><span class="line"><span class="keyword">double</span> p[<span class="number">120</span>];</span><br><span class="line"><span class="keyword">double</span> dp[<span class="number">10020</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> T,N;</span><br><span class="line">    <span class="keyword">double</span> P;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span> dp);</span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; P &gt;&gt; N;</span><br><span class="line">        P = <span class="number">1</span>-P;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= N;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; m[i] &gt;&gt; p[i];</span><br><span class="line">            p[i] = <span class="number">1</span>-p[i];</span><br><span class="line">            sum += m[i];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= N;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = sum;j &gt;= m[i];j--)</span><br><span class="line">            &#123;</span><br><span class="line">                dp[j] = max(dp[j],dp[j-m[i]]*p[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = sum;i &gt;= <span class="number">0</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(P-dp[i] &lt; eps)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="I-NEED-A-OFFER"><a href="#I-NEED-A-OFFER" class="headerlink" title="I NEED A OFFER!"></a>I NEED A OFFER!</h1><h2 id="描述-3"><a href="#描述-3" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1203" target="_blank" rel="noopener">I NEED A OFFER!</a></p><blockquote><p>Speakless很早就想出国，现在他已经考完了所有需要的考试，准备了所有要准备的材料，于是，便需要去申请学校了。要申请国外的任何大学，你都要交纳一定的申请费用，这可是很惊人的。Speakless没有多少钱，总共只攒了n万美元。他将在m个学校中选择若干的（当然要在他的经济承受范围内）。每个学校都有不同的申请费用a（万美元），并且Speakless估计了他得到这个学校offer的可能性b。不同学校之间是否得到offer不会互相影响。“I NEED A OFFER”，他大叫一声。帮帮这个可怜的人吧，帮助他计算一下，他可以收到至少一份offer的最大概率。（如果Speakless选择了多个学校，得到任意一个学校的offer都可以）。</p></blockquote><h3 id="输入-6"><a href="#输入-6" class="headerlink" title="输入"></a>输入</h3><blockquote><p>输入有若干组数据，每组数据的第一行有两个正整数n,m(0&lt;=n&lt;=10000,0&lt;=m&lt;=10000)<br>后面的m行，每行都有两个数据ai(整型),bi(实型)分别表示第i个学校的申请费用和可能拿到offer的概率。<br>输入的最后有两个0。</p></blockquote><h3 id="输出-6"><a href="#输出-6" class="headerlink" title="输出"></a>输出</h3><blockquote><p>每组数据都对应一个输出，表示Speakless可能得到至少一份offer的最大概率。用百分数表示，精确到小数点后一位。</p></blockquote><h3 id="样例-3"><a href="#样例-3" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-7"><a href="#输入-7" class="headerlink" title="输入"></a>输入</h4><blockquote><p>10 3<br>4 0.1<br>4 0.2<br>5 0.3<br>0 0</p></blockquote><h4 id="输出-7"><a href="#输出-7" class="headerlink" title="输出"></a>输出</h4><blockquote><p>44.0%</p></blockquote><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><blockquote><p>You should use printf(“%%”) to print a ‘%’.</p></blockquote><h2 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h2><blockquote><ul><li>与上题类似</li></ul></blockquote><h2 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  1203.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.hdu.edu.cn/showproblem.php?pid=1203</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/07/15 15时16分12秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.github.io/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">double</span> dp[<span class="number">10020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">10020</span>];</span><br><span class="line">    <span class="keyword">double</span> b[<span class="number">10020</span>];</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">0</span> &amp;&amp; m == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span> a);   <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span> b);   <span class="comment">// aemset(dp,0,sizeof dp); </span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">10020</span>;i++)</span><br><span class="line">            dp[i] = <span class="number">1.0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a[i] &gt;&gt; b[i];</span><br><span class="line">            b[i] = <span class="number">1</span>-b[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = n;j &gt;= a[i];j--)</span><br><span class="line">            &#123;</span><br><span class="line">                dp[j] = min(dp[j],dp[j-a[i]]*b[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//double pr = 1.0;</span></span><br><span class="line">        <span class="comment">//for(int i = 1;i &lt;= n;i++)</span></span><br><span class="line">        <span class="comment">//    pr = min(pr,dp[i]);</span></span><br><span class="line">        <span class="comment">//pr = 1-pr;</span></span><br><span class="line">        <span class="comment">//pr *= 100;</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.1lf%%\n"</span>,(<span class="number">1</span>-dp[n])*<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Big-Event-in-HDU"><a href="#Big-Event-in-HDU" class="headerlink" title="Big Event in HDU"></a>Big Event in HDU</h1><h2 id="描述-4"><a href="#描述-4" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1171" target="_blank" rel="noopener">Big Event in HDU</a></p><blockquote><p>Nowadays, we all know that Computer College is the biggest department in HDU. But, maybe you don’t know that Computer College had ever been split into Computer College and Software College in 2002.<br>The splitting is absolutely a big event in HDU! At the same time, it is a trouble thing too. All facilities must go halves. First, all facilities are assessed, and two facilities are thought to be same if they have the same value. It is assumed that there is N (0&lt;N&lt;1000) kinds of facilities (different value, different kinds).</p></blockquote><h3 id="输入-8"><a href="#输入-8" class="headerlink" title="输入"></a>输入</h3><blockquote><p>Input contains multiple test cases. Each test case starts with a number N (0 &lt; N &lt;= 50 — the total number of different facilities). The next N lines contain an integer V (0&lt;V&lt;=50 —value of facility) and an integer M (0&lt;M&lt;=100 —corresponding number of the facilities) each. You can assume that all V are different.<br>A test case starting with a negative integer terminates input and this test case is not to be processed.</p></blockquote><h3 id="输出-8"><a href="#输出-8" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each case, print one line containing two integers A and B which denote the value of Computer College and Software College will get respectively. A and B should be as equal as possible. At the same time, you should guarantee that A is not less than B.</p></blockquote><h3 id="样例-4"><a href="#样例-4" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-9"><a href="#输入-9" class="headerlink" title="输入"></a>输入</h4><blockquote><p>2<br>10 1<br>20 1<br>3<br>10 1<br>20 2<br>30 1<br>-1</p></blockquote><h4 id="输出-9"><a href="#输出-9" class="headerlink" title="输出"></a>输出</h4><blockquote><p>20 10<br>40 40</p></blockquote><h2 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h2><blockquote><ul><li>需要让分成的两部分尽可能相等或者前者稍大于后者</li><li>在输入的时候计算所有价值总和 ②</li><li>然后求出能够取得的最接近一半价值总和的价值 ①</li><li>如果②=2*① 则恰好可以被分为两个相等的部分</li><li>②-①为较多的那一部分</li></ul></blockquote><h2 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  1171.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.hdu.edu.cn/showproblem.php?pid=1171</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/07/15 16时52分43秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.github.io/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">200020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> n,t1,t2,sum,sum2;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        a.clear();</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span> dp);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; t1 &gt;&gt; t2;</span><br><span class="line">            sum += t1*t2;</span><br><span class="line">            <span class="keyword">while</span>(t2--)</span><br><span class="line">                a.push_back(t1);</span><br><span class="line">        &#125;</span><br><span class="line">        sum2 = sum/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; a.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = sum2;j &gt;= a[i];j--)</span><br><span class="line">                dp[j] = max(dp[j],dp[j-a[i]]+a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// printf("%d %d\n",max(dp[sum2],sum-dp[sum2]),min(dp[sum2],sum-dp[sum2]));</span></span><br><span class="line">        <span class="keyword">if</span>(sum == dp[sum2]*<span class="number">2</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,sum/<span class="number">2</span>,sum/<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,sum-dp[sum2],dp[sum2]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 动态规划 </category>
          
          <category> 背包 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 01背包 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>German Collegiate Programming Contest 2015  F. Divisions</title>
      <link href="/2018/07/14/German-Collegiate-Programming-Contest-2015-F-Divisions/"/>
      <url>/2018/07/14/German-Collegiate-Programming-Contest-2015-F-Divisions/</url>
      <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="https://nanti.jisuanke.com/t/28395" target="_blank" rel="noopener"> F. Divisions</a></p><blockquote><p>David is a young boy and he loves numbers. Recently he learned how to divide two numbers. David divides the whole day. He is happy if the result of the division is an integer, but he is not very amused if this is not the case. After quite a while he decided to use only a single dividend each day. </p><p>The parents of David are very careful and they would like to ensure that David experiences enough happiness. Therefore they decide which number David will use as the dividend for this day. </p><p>There is still a problem: The parents are not very good at math and don’t know how to calculate the number of positive integral divisors for a given dividend N , which lead to an integral result. Now it’s up to you to help David’s parents. </p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The single input line contains the single integer N , where N is chosen as a dividend (1 ≤ N ≤ 1018 ). </p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>Print the number of positive integral divisors of N that lead to an integral result of the division. </p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>12</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>6</p></blockquote><h4 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h4><blockquote><p>999999999999999989</p></blockquote><h4 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h4><blockquote><p>2</p></blockquote><h4 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h4><blockquote><p>100000007700000049</p></blockquote><h4 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h4><blockquote><p>4</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>由于数据规模太大，因此无法用常规的解题方法来求出答案<br>题意是让求出给出数字的质因数个数<br>因此使用Miller_Rabin算法+Pollard_rho算法+质因数求解公式来计算<br>ps:这两个算法我也是刚学到，感觉有些难懂</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  G.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  https://nanti.jisuanke.com/t/28395</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/07/14 20时04分58秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.github.io/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =========================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll NUM = <span class="number">10</span>;   <span class="comment">// 运算次数，误判率为2^(-NUM)</span></span><br><span class="line">ll t,f[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">mul_mod</span><span class="params">(ll a,ll b,ll n)</span>   <span class="comment">// 求a*b%n,由于a和b太大,需要用进位chengfa</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a = a%n;    b = b%n;</span><br><span class="line">    ll s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)</span><br><span class="line">            s = (s+a)%n;</span><br><span class="line">        a = (a &lt;&lt; <span class="number">1</span>) %n;</span><br><span class="line">        b = b &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">pow_mod</span><span class="params">(ll a,ll b,ll n)</span>   <span class="comment">// 求a^b%n</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a = a%n;</span><br><span class="line">    ll s = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)</span><br><span class="line">            s = mul_mod(s,a,n);</span><br><span class="line">        a = mul_mod(a,a,n);</span><br><span class="line">        b = b &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">check</span><span class="params">(ll a,ll n,ll r,ll s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans = pow_mod(a,r,n);</span><br><span class="line">    ll p = ans;</span><br><span class="line">    <span class="keyword">for</span>(ll i = <span class="number">1</span>;i &lt;= s;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans = mul_mod(ans,ans,n);</span><br><span class="line">        <span class="keyword">if</span>(ans == <span class="number">1</span> &amp;&amp; p != <span class="number">1</span> &amp;&amp; p != n<span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        p = ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans != <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b == <span class="number">0</span> ? a : gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Miller_Rabin算法</span></span><br><span class="line"><span class="comment">// 判定一个大数是否是素数</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Miller_Rabin</span><span class="params">(ll n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n &lt; <span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">2</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(!(n&amp;<span class="number">1</span>)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    ll r = n<span class="number">-1</span>,s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!(r&amp;<span class="number">1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        r = r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        s++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(ll i = <span class="number">0</span>;i &lt; NUM;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll a = rand()%(n<span class="number">-1</span>)+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(check(a,n,r,s))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Pollard_rho算法</span></span><br><span class="line"><span class="comment">// 找出n的因子</span></span><br><span class="line"><span class="function">ll <span class="title">Pollard_rho</span><span class="params">(ll n,ll c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll i = <span class="number">1</span>,j = <span class="number">2</span>,d,p;</span><br><span class="line">    ll x = rand()%n;</span><br><span class="line">    ll y = x;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        x = (mul_mod(x,x,n)+c)%n;</span><br><span class="line">        <span class="keyword">if</span>(y == x) <span class="keyword">return</span> n;</span><br><span class="line">        <span class="keyword">if</span>(y &gt; x)</span><br><span class="line">            p = y-x;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            p = x-y;</span><br><span class="line">        d = gcd(p,n);</span><br><span class="line">        <span class="keyword">if</span>(d != <span class="number">1</span> &amp;&amp; d != n)</span><br><span class="line">            <span class="keyword">return</span> d;</span><br><span class="line">        <span class="keyword">if</span>(i == j)</span><br><span class="line">        &#123;</span><br><span class="line">            y = x;</span><br><span class="line">            j += j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 找出n的所有因子</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(ll n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Miller_Rabin(n))</span><br><span class="line">    &#123;</span><br><span class="line">        f[t++] = n;   <span class="comment">// 保存所有因子</span></span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    ll p = n;</span><br><span class="line">    <span class="keyword">while</span>(p &gt;= n)</span><br><span class="line">        p = Pollard_rho(p,rand()%(n<span class="number">-1</span>)+<span class="number">1</span>);   <span class="comment">// p必定为合数,所以通过多次求解必定能得到答案</span></span><br><span class="line">    find(p);</span><br><span class="line">    find(n/p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    srand(time(<span class="literal">NULL</span>));   <span class="comment">// 随机数设定种子</span></span><br><span class="line">    ll n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"1"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    t = <span class="number">0</span>;</span><br><span class="line">    find(n);</span><br><span class="line">    sort(f,f+t);</span><br><span class="line">    <span class="built_in">map</span>&lt;ll,<span class="keyword">int</span>&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; t;i++)</span><br><span class="line">        m[f[i]]++;</span><br><span class="line">    <span class="built_in">map</span>&lt;ll,<span class="keyword">int</span>&gt;::iterator it;</span><br><span class="line">    ll ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(it = m.begin();it != m.end();it++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> s = it-&gt;second;</span><br><span class="line">        ans *= <span class="number">1</span>+s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
          <category> 素数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数 </tag>
            
            <tag> 素数 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>两个有关素数的算法</title>
      <link href="/2018/07/14/Two-Prime-Number/"/>
      <url>/2018/07/14/Two-Prime-Number/</url>
      <content type="html"><![CDATA[<h2 id="Miller-Rabin算法（素数判定）"><a href="#Miller-Rabin算法（素数判定）" class="headerlink" title="Miller_Rabin算法（素数判定）"></a>Miller_Rabin算法（素数判定）</h2><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><blockquote><p>单独判断一个大数是否素数。缺点他是一个不保证正确的算法，我们只能通过多次执行算法让这个错误的概率很小，不过幸运的是通常来看它的错误概率可以小到忽略不计。</p><p>补充:<a href="https://www.cnblogs.com/kannyi/p/9569506.html" target="_blank" rel="noopener">【模板】素数测试（Miller-Rabin测试）</a></p></blockquote><a id="more"></a><h3 id="算法的理论基础"><a href="#算法的理论基础" class="headerlink" title="算法的理论基础"></a>算法的理论基础</h3><blockquote><ol><li>Fermat定理：若n是奇素数，a是任意正整数(1≤ a≤ n−1)，则 a^(n-1) ≡ 1 mod n。</li><li>推演自Fermat定理, 如果n是一个奇素数，将n−1表示成2^s*r的形式，r是奇数，a与n是互素的任何随机整数，那么a^r ≡ 1 mod n或者对某个j (0 ≤ j≤ s−1, j∈Z) 等式a^(2jr) ≡ −1 mod n 成立。</li></ol></blockquote><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Miller_Rabin</span><span class="params">(ll n)</span><span class="comment">//Miller_Rabin算法，判断n是否为素数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(!(n&amp;<span class="number">1</span>)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    ll r=n<span class="number">-1</span>,s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!(r&amp;<span class="number">1</span>))&#123;r=r&gt;&gt;<span class="number">1</span>;s++;&#125;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;NUM;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll a=rand()%(n<span class="number">-1</span>)+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(check(a,n,r,s))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Pollard-rho算法"><a href="#Pollard-rho算法" class="headerlink" title="Pollard_rho算法"></a>Pollard_rho算法</h2><h3 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h3><blockquote><p>求一个数的因子</p></blockquote><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><blockquote><p>设n为待分解的大整数，用某种方法生成a和b，计算p=gcd(a-b,n),直到p不为1或a,b出现循环时为止，若p=n，则说明n是一个素数，否则p为n的一个约数。</p></blockquote><h3 id="算法步骤"><a href="#算法步骤" class="headerlink" title="算法步骤"></a>算法步骤</h3><blockquote><p>选取一个小的随机数x1，迭代生成x[i] = x[i-1]^2+c，一般取c=1，若序列出现循环则退出，计算p=gcd(x[i-1]-x[i],n)，若p=1则返回上一步继续迭代，否则跳出迭代过程。若p=n，则n为素数，否则p为n的一个约数，并递归分解p和n/p。</p><p>可以在θ（sqrt(p)）的期望时间内找到n的一个小因子p。但对于因子很少，因子值很大的大整数n，该方法依然不是很有效。</p><p>为了减少反复的次数，算法做了一些改进。该算法用数对(x0,x0)开始，并且用x(i+1)=f(xi) ，迭代计算(x1,x2),(x2,x4),(x3,x6)…(xi,x2i)。在每一次迭代中，我们都应用上述函数式运算(从第二步)第一次计算数对中的第一个元素，第二次计算数对中的第二个元素。</p></blockquote><h3 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">Pollard_rho</span><span class="params">(ll n,ll c)</span><span class="comment">//Pollard_rho算法，找出n的因子</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll i=<span class="number">1</span>,j,k=<span class="number">2</span>,d,p;</span><br><span class="line">    ll x=rand()%n;</span><br><span class="line">    ll y=x;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        x=(mul_mod(x,x,n)+c)%n;</span><br><span class="line">        <span class="keyword">if</span>(y==x) <span class="keyword">return</span> n;</span><br><span class="line">        <span class="keyword">if</span>(y&gt;x) p=y-x;</span><br><span class="line">        <span class="keyword">else</span> p=x-y;</span><br><span class="line">        d=gcd(p,n);</span><br><span class="line">        <span class="keyword">if</span>(d!=<span class="number">1</span>&amp;&amp;d!=n) <span class="keyword">return</span> d;</span><br><span class="line">        <span class="keyword">if</span>(i==k)</span><br><span class="line">        &#123;</span><br><span class="line">            y=x;</span><br><span class="line">            k+=k;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(ll n)</span><span class="comment">//找出n的所有因子</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Miller_Rabin(n))</span><br><span class="line">    &#123;</span><br><span class="line">        f[t++]=n;<span class="comment">//保存所有因子</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ll p=n;</span><br><span class="line">    <span class="keyword">while</span>(p&gt;=n)p=Pollard_rho(p,rand()%(n<span class="number">-1</span>)+<span class="number">1</span>);<span class="comment">//由于p必定为合数，所以通过多次求解必定能求得答案</span></span><br><span class="line">    find(p);</span><br><span class="line">    find(n/p);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="因数个数求解公式"><a href="#因数个数求解公式" class="headerlink" title="因数个数求解公式"></a>因数个数求解公式</h2><blockquote><p>对于任何一个自然数N，都可以分解质因子得到如下形式：</p><script type="math/tex; mode=display">N = p_1 ^ {e1} * p_2^{e2} * p_3^{e3} * ··· * p_k^{ek}</script><p>那么，N的因子的个数为：</p><script type="math/tex; mode=display">f(n) = (1+e_1) * (1+e_2)* ··· *(1+e_k)</script><p>如N=100，分解质因子变形为：100=22∗52，N的因子的个数为：f(N)=f(100)=(1+2)∗(1+2)=9。</p><p>即：1,2,4,5,10,20,25,50,100。</p></blockquote><h2 id="一些函数"><a href="#一些函数" class="headerlink" title="一些函数"></a>一些函数</h2><h3 id="头文件-amp-宏定义"><a href="#头文件-amp-宏定义" class="headerlink" title="头文件&amp;宏定义"></a>头文件&amp;宏定义</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> ll NUM=<span class="number">10</span>;<span class="comment">//运算次数，Miller_Rabin算法为概率运算，误判率为2^(-NUM);</span></span><br><span class="line">ll t,f[<span class="number">100</span>];</span><br></pre></td></tr></table></figure><h3 id="快速乘法、快速幂函数"><a href="#快速乘法、快速幂函数" class="headerlink" title="快速乘法、快速幂函数"></a>快速乘法、快速幂函数</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">mul_mod</span><span class="params">(ll a,ll b,ll n)</span><span class="comment">//求a*b%n，由于a和b太大，需要用进位乘法</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a=a%n;</span><br><span class="line">    b=b%n;</span><br><span class="line">    ll s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)</span><br><span class="line">            s=(s+a)%n;</span><br><span class="line">        a=(a&lt;&lt;<span class="number">1</span>)%n;</span><br><span class="line">        b=b&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">pow_mod</span><span class="params">(ll a,ll b,ll n)</span><span class="comment">//求a^b%n</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a=a%n;</span><br><span class="line">    ll s=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)</span><br><span class="line">            s=mul_mod(s,a,n);</span><br><span class="line">        a=mul_mod(a,a,n);</span><br><span class="line">        b=b&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(ll a,ll n,ll r,ll s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans=pow_mod(a,r,n);</span><br><span class="line">    ll p=ans;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=s;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans=mul_mod(ans,ans,n);</span><br><span class="line">        <span class="keyword">if</span>(ans==<span class="number">1</span>&amp;&amp;p!=<span class="number">1</span>&amp;&amp;p!=n<span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        p=ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans!=<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="求因数个数时主函数"><a href="#求因数个数时主函数" class="headerlink" title="求因数个数时主函数"></a>求因数个数时主函数</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    srand(time(<span class="literal">NULL</span>));<span class="comment">//随机数设定种子</span></span><br><span class="line">    ll n;<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>)&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">"1"</span>&lt;&lt;<span class="built_in">endl</span>;<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">    t=<span class="number">0</span>;</span><br><span class="line">    find(n);</span><br><span class="line">    sort(f,f+t);</span><br><span class="line">    <span class="built_in">map</span>&lt;ll,<span class="keyword">int</span>&gt;q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;t;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        q[f[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">map</span>&lt;ll,<span class="keyword">int</span>&gt;::iterator it;</span><br><span class="line">    ll ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(it=q.begin();it!=q.end();it++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> s=it-&gt;second;</span><br><span class="line">        ans*=<span class="number">1</span>+s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 素数 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
