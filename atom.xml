<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>duny31030&#39;Blog</title>
  
  <subtitle>説明する時間はない、早く乗れ</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.duny31030.top/"/>
  <updated>2019-10-16T17:21:57.635Z</updated>
  <id>http://www.duny31030.top/</id>
  
  <author>
    <name>杜宁元</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PAT甲级-1152-Google Recruitment（20 分）</title>
    <link href="http://www.duny31030.top/2019/01/21/PAT-AL-1152/"/>
    <id>http://www.duny31030.top/2019/01/21/PAT-AL-1152/</id>
    <published>2019-01-21T14:33:28.000Z</published>
    <updated>2019-10-16T17:21:57.635Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/1071785055080476672" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>In July 2004, Google posted on a giant billboard along Highway 101 in Silicon Valley (shown in the picture below) for recruitment. The content is super-simple, a URL consisting of the first 10-digit prime found in consecutive digits of the natural constant <em>e</em>. The person who could find this prime number could go to the next step in Google’s hiring process by visiting this website.</p><p><img src="https://images.ptausercontent.com/57148679-d574-4f49-b048-775c6c07791c.jpg" alt="prime.jpg"></p><p>The natural constant <em>e</em> is a well known transcendental number（超越数）. The first several digits are: <em>e</em> = 2.718……..921… where the 10 digits in bold are the answer to Google’s question.</p><p>Now you are asked to solve a more general problem: find the first K-digit prime in consecutive digits of any given L-digit number.</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>Each input file contains one test case. Each case first gives in a line two positive integers: L (≤ 1,000) and K (&lt; 10), which are the numbers of digits of the given number and the prime to be found, respectively. Then the L-digit number N is given in the next line.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test case, print in a line the first K-digit prime in consecutive digits of N. If such a number does not exist, output <code>404</code> instead. Note: the leading zeroes must also be counted as part of the K digits. For example, to find the 4-digit prime in 200236, 0023 is a solution. However the first digit 2 must not be treated as a solution 0002 since the leading zeroes are not in the original number.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;20 5</span><br><span class="line">&gt;23654987725541023819</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;49877</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h4><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;10 3</span><br><span class="line">&gt;2468024680</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h4><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;404</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><font color="blue">坑点:</font><font color="red">1. 0、1都不是素数</font><font color="red">2. 输出的时候带着前导零</font><p>因为个人习惯原因，不喜欢用自带函数。所以一开始的几个功能都是手撸的，然后错三个点</p><p>发现自己把0,1给漏掉了，改了改，错两个点</p><p>发现自己有个变量写成了定值了，改掉了，错一个点</p><p>尝试了一下是不是得带着前导零？改掉以后没错了</p><p>（还是头文件里的函数好用，以后再也不手撸了</p><p>总之是挺水的一道题</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ========================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  1152.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  </span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Created:  2019/01/21 22时05分09秒</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  duny31030 , duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  duny31030.top</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ========================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1100</span>;</span><br><span class="line"><span class="comment">// char a[N];</span></span><br><span class="line"><span class="keyword">int</span> len,l;</span><br><span class="line"><span class="built_in">string</span> a;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isprime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">0</span> || n == <span class="number">1</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i*i &lt;= n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n%i == <span class="number">0</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="comment">// freopen("out.txt","w:",stdout);</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; len &gt;&gt; l;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a;</span><br><span class="line"><span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;= len-l;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> b = a.substr(i,l);</span><br><span class="line">tmp = stoi(b);</span><br><span class="line"><span class="keyword">if</span>(isprime(tmp))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; b;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"404"</span>;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;传送门：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/1071785055080476672&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我是传送门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In July 2004, Google posted on a giant billboard along Highway 101 in Silicon Valley (shown in the picture below) for recruitment. The content is super-simple, a URL consisting of the first 10-digit prime found in consecutive digits of the natural constant &lt;em&gt;e&lt;/em&gt;. The person who could find this prime number could go to the next step in Google’s hiring process by visiting this website.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.ptausercontent.com/57148679-d574-4f49-b048-775c6c07791c.jpg&quot; alt=&quot;prime.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;The natural constant &lt;em&gt;e&lt;/em&gt; is a well known transcendental number（超越数）. The first several digits are: &lt;em&gt;e&lt;/em&gt; = 2.718……..921… where the 10 digits in bold are the answer to Google’s question.&lt;/p&gt;
&lt;p&gt;Now you are asked to solve a more general problem: find the first K-digit prime in consecutive digits of any given L-digit number.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="PAT" scheme="http://www.duny31030.top/categories/PAT/"/>
    
      <category term="甲级" scheme="http://www.duny31030.top/categories/PAT/%E7%94%B2%E7%BA%A7/"/>
    
    
      <category term="素数" scheme="http://www.duny31030.top/tags/%E7%B4%A0%E6%95%B0/"/>
    
      <category term="字符串" scheme="http://www.duny31030.top/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>macOS MOjave运行pygame不显示图像-解决方案</title>
    <link href="http://www.duny31030.top/2019/01/21/macOS-MOjave-pygame-Error/"/>
    <id>http://www.duny31030.top/2019/01/21/macOS-MOjave-pygame-Error/</id>
    <published>2019-01-21T04:59:35.000Z</published>
    <updated>2019-10-16T17:21:35.978Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>运行与pygame相关的程序，显示白/灰/黑屏幕</p><h1 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h1><p>macOS MOjave </p><p>版本 10.14.2 (18C54)</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>首先测试是否是相同的原因，运行这段代码，测试是否是能听到声音看不到画面</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pygame.examples.aliens</span><br></pre></td></tr></table></figure><p>将python3的版本换为<a href="https://www.python.org/downloads/release/python-370/" target="_blank" rel="noopener">python3.7.0</a>。</p><p>安装好以后使用pip3安装pygame</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install pygame</span><br></pre></td></tr></table></figure><p>再次使用上面的代码测试，此时已经一切正常了</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ol><li><p><a href="https://blog.csdn.net/qq_24909089/article/details/83542526" target="_blank" rel="noopener">CSDN</a></p><p>这个方案对我无效</p></li><li><p><a href="https://github.com/pygame/pygame/issues/555#issuecomment-447700569" target="_blank" rel="noopener">github</a></p><p>有效</p></li></ol><p>​    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;运行与pygame相关的程序，显示白/灰/黑屏幕&lt;/p&gt;
&lt;h1 id=&quot;系统环境&quot;&gt;&lt;a href=&quot;#系统环境&quot; cla
      
    
    </summary>
    
      <category term="python" scheme="http://www.duny31030.top/categories/python/"/>
    
      <category term="pygame" scheme="http://www.duny31030.top/categories/python/pygame/"/>
    
    
      <category term="python" scheme="http://www.duny31030.top/tags/python/"/>
    
      <category term="pygame" scheme="http://www.duny31030.top/tags/pygame/"/>
    
  </entry>
  
  <entry>
    <title>PAT甲级-1007-Maximum Subsequence Sum (25 分)</title>
    <link href="http://www.duny31030.top/2019/01/11/PAT-AL-1007/"/>
    <id>http://www.duny31030.top/2019/01/11/PAT-AL-1007/</id>
    <published>2019-01-11T14:03:02.000Z</published>
    <updated>2019-10-16T17:21:50.422Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805514284679168" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>Given a sequence of $K$ integers { $N_1, N_2, …, N_K$ }. A continuous subsequence is defined to be { $N_i, N_i+1, …, N_j$ } where $1≤i≤j≤K$. The Maximum Subsequence is the continuous subsequence which has the largest sum of its elements. For example, given sequence { $-2, 11, -4, 13, -5, -2$ }, its maximum subsequence is { $11, -4, 13$ } with the largest sum being $20$.</p><p>Now you are supposed to find the largest sum, together with the first and the last numbers of the maximum subsequence.</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>Each input file contains one test case. Each case occupies two lines. The first line contains a positive integer $K (≤10000)$. The second line contains $K$ numbers, separated by a space.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test case, output in one line the largest sum, together with the first and the last numbers of the maximum subsequence. The numbers must be separated by one space, but there must be no extra space at the end of a line. In case that the maximum subsequence is not unique, output the one with the smallest indices $i$ and $j$ (as shown by the sample case). If all the $K$ numbers are negative, then its maximum sum is defined to be 0, and you are supposed to output the first and the last numbers of the whole sequence.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">-10 1 2 3 4 -5 -23 3 7 -21</span><br></pre></td></tr></table></figure><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 1 4</span><br></pre></td></tr></table></figure><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>两个月不写代码的咸鱼不仅代码写不出来了，就连题目都开始读不明白了。。。</p><p>其实就是非常简单的DP，但是现在我竟然连DP都写错（而且还写错好几次。。。</p><p>把DP无脑扔给队友真不是好习惯。。。</p><font color="red">一句话题意:求最大子串和，并输出它以及子串首尾的两个数字。</font><p>特殊情况：</p><ol><li>有多个子串和相同，输出前边的。</li><li>如果全为负数，输出”0 第一个数 最后一个数”</li></ol></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ========================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  1007.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  </span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Created:  2019/01/11 11时19分04秒</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  duny31030 , duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ========================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="keyword">int</span> p[N];</span><br><span class="line"><span class="keyword">int</span> mmax = -INF;</span><br><span class="line"><span class="keyword">int</span> s1 = <span class="number">-1</span>,s2 = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> e = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="comment">// freopen("out.txt","w:",stdout);</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">rep(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line">rep(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]+p[i<span class="number">-1</span>] &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">p[i] = a[i]+p[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(a[i]+p[i<span class="number">-1</span>] &lt;= a[i])</span><br><span class="line">&#123;</span><br><span class="line">p[i] = a[i];</span><br><span class="line">s1 = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">p[i] = a[i];</span><br><span class="line">s1 = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p[i] &gt; mmax)</span><br><span class="line">&#123;</span><br><span class="line">mmax = p[i];</span><br><span class="line">s2 = s1;</span><br><span class="line">e = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(mmax &lt; <span class="number">0</span>)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"0 "</span> &lt;&lt; a[<span class="number">1</span>] &lt;&lt; <span class="string">" "</span> &lt;&lt; a[n] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; mmax &lt;&lt; <span class="string">" "</span> &lt;&lt; a[s2] &lt;&lt; <span class="string">" "</span> &lt;&lt; a[e] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;传送门：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805514284679168&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我是传送门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a sequence of $K$ integers { $N_1, N_2, …, N_K$ }. A continuous subsequence is defined to be { $N_i, N_i+1, …, N_j$ } where $1≤i≤j≤K$. The Maximum Subsequence is the continuous subsequence which has the largest sum of its elements. For example, given sequence { $-2, 11, -4, 13, -5, -2$ }, its maximum subsequence is { $11, -4, 13$ } with the largest sum being $20$.&lt;/p&gt;
&lt;p&gt;Now you are supposed to find the largest sum, together with the first and the last numbers of the maximum subsequence.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="PAT" scheme="http://www.duny31030.top/categories/PAT/"/>
    
      <category term="甲级" scheme="http://www.duny31030.top/categories/PAT/%E7%94%B2%E7%BA%A7/"/>
    
    
      <category term="DP" scheme="http://www.duny31030.top/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>PAT甲级-1004-Counting Leaves（30 分）</title>
    <link href="http://www.duny31030.top/2019/01/04/PAT-AL-1004/"/>
    <id>http://www.duny31030.top/2019/01/04/PAT-AL-1004/</id>
    <published>2019-01-04T12:56:49.000Z</published>
    <updated>2019-10-16T17:21:43.955Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805521431773184" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>A family hierarchy is usually presented by a pedigree tree. Your job is to count those family members who have no child.</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>Each input file contains one test case. Each case starts with a line containing $0&lt;N&lt;100$, the number of nodes in a tree, and $M (&lt;N)$, the number of non-leaf nodes. Then M lines follow, each in the format:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ID K ID[1] ID[2] ... ID[K]</span><br></pre></td></tr></table></figure><blockquote><p>where <code>ID</code> is a two-digit number representing a given non-leaf node, <code>K</code> is the number of its children, followed by a sequence of two-digit <code>ID</code>‘s of its children. For the sake of simplicity, let us fix the root ID to be <code>01</code>.</p><p>The input ends with N being 0. That case must NOT be processed.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test case, you are supposed to count those family members who have no child <strong>for every seniority level</strong>starting from the root. The numbers must be printed in a line, separated by a space, and there must be no extra space at the end of each line.</p><p>The sample case represents a tree with only 2 nodes, where <code>01</code> is the root and <code>02</code> is its only child. Hence on the root <code>01</code> level, there is <code>0</code> leaf node; and on the next level, there is <code>1</code> leaf node. Then we should output <code>0 1</code> in a line.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2 1</span><br><span class="line">01 1 02</span><br></pre></td></tr></table></figure><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 1</span><br></pre></td></tr></table></figure><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>大意为按照输入建树，输出树的每层叶节点的个数</p><p>一开始就想到了使用并查集来写，但是退役一个月之后菜的非常真实。。。并查集都写错好几次。。。好在后来改了改过了</p><p>不过我对PAT甲级的印象是考察各种数据结构的知识，既然噎死跟树相关，那我建立一棵树再扫一下的话肯定也是正确的。下面除了并查集的代码以外，再附加一份树的代码。</p></blockquote><h2 id="代码-并查集"><a href="#代码-并查集" class="headerlink" title="代码-并查集"></a>代码-并查集</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ===========================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  1004.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  </span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Created:  2019/01/04 20时42分35秒</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  duny31030 , duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ===========================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> b[N];</span><br><span class="line"><span class="keyword">int</span> f[N];</span><br><span class="line"><span class="keyword">int</span> c[N];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getdeep</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(f[i] == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> getdeep(f[i])+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">rep(i,<span class="number">0</span>,N<span class="number">-1</span>)b[i] = <span class="number">1</span>;</span><br><span class="line">clr(f,<span class="number">0</span>);</span><br><span class="line">clr(c,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="comment">// freopen("out.txt","w:",stdout);</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="keyword">int</span> n,m,t1,t2,co;</span><br><span class="line"><span class="keyword">int</span> mmax = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m)</span><br><span class="line">&#123;</span><br><span class="line">mmax = <span class="number">0</span>;</span><br><span class="line">init();</span><br><span class="line">rep(i,<span class="number">1</span>,m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; t1 &gt;&gt; co;</span><br><span class="line">b[t1] = <span class="number">0</span>;</span><br><span class="line">rep(j,<span class="number">1</span>,co)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; t2;</span><br><span class="line">f[t2] = t1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">rep(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(b[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> deep = getdeep(i);</span><br><span class="line">c[deep]++;</span><br><span class="line">mmax = max(mmax,deep);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">rep(i,<span class="number">1</span>,mmax)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; c[i];</span><br><span class="line"><span class="keyword">if</span>(i == mmax)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码-树"><a href="#代码-树" class="headerlink" title="代码-树"></a>代码-树</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这个坑一定会填的，一定的。</span></span><br><span class="line"><span class="comment">// 这次肯定不会咕咕咕了</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;传送门：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805521431773184&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我是传送门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A family hierarchy is usually presented by a pedigree tree. Your job is to count those family members who have no child.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="PAT" scheme="http://www.duny31030.top/categories/PAT/"/>
    
      <category term="甲级" scheme="http://www.duny31030.top/categories/PAT/%E7%94%B2%E7%BA%A7/"/>
    
    
      <category term="并查集" scheme="http://www.duny31030.top/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="树" scheme="http://www.duny31030.top/tags/%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>Python进阶-Numpy科学计算库(简单入门)</title>
    <link href="http://www.duny31030.top/2019/01/04/Python-Numpy/"/>
    <id>http://www.duny31030.top/2019/01/04/Python-Numpy/</id>
    <published>2019-01-04T00:00:54.000Z</published>
    <updated>2019-10-16T17:13:08.774Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Numpy简介"><a href="#Numpy简介" class="headerlink" title="Numpy简介"></a>Numpy简介</h1><blockquote><p>NumPy(Numerical Python) 是 Python 语言的一个扩展程序库，支持大量的维度数组与矩阵运算，此外也针对数组运算提供大量的数学函数库。  </p><p>NumPy 的前身 Numeric 最早是由 Jim Hugunin 与其它协作者共同开发，2005 年，Travis Oliphant 在 Numeric 中结合了另一个同性质的程序库 Numarray 的特色，并加入了其它扩展而开发了 NumPy。NumPy 为开放源代码并且由许多协作者共同维护开发。</p></blockquote><a id="more"></a><hr><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>因为我使用的是python3，因此需要自己手动来安装Numpy  </p><pre><code>pip3 install numpy</code></pre><p>一般来说这条命令就可以安装成功了<br>如果失败的话可能是因为权限的问题可以尝试在命令前加一个’sudo’,即<br>​<br>    sudo pip3 install numpy</p><p>然后按照提示输入密码就可以了    </p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/19-1-4/82518098.jpg" alt="success"></p><p>现在numpy就安装成功了<br>首先对将numpy引入  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np   <span class="comment"># np就相当于numpy的别名了</span></span><br></pre></td></tr></table></figure><h1 id="基础的属性"><a href="#基础的属性" class="headerlink" title="基础的属性"></a>基础的属性</h1><p>创建一个矩阵的语法为  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name = np.array([[...]...])</span><br></pre></td></tr></table></figure><p>例如，要创建一个3x1的矩阵，矩阵名为array</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">array = np.array([[<span class="number">123</span>],[<span class="number">456</span>],[<span class="number">789</span>]])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3x3矩阵的建立方法</span></span><br><span class="line">array = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]])</span><br></pre></td></tr></table></figure><p>打印出来看下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(array)</span><br><span class="line">[[<span class="number">123</span>]</span><br><span class="line"> [<span class="number">456</span>]</span><br><span class="line"> [<span class="number">789</span>]]</span><br></pre></td></tr></table></figure><p>其他的一些简单的属性  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(array.ndim)   <span class="comment"># 矩阵的维度</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(array.shape)  <span class="comment"># 矩阵的形状</span></span><br><span class="line">(<span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(array.size)   <span class="comment"># 矩阵的大小(元素个数)</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(array.dtype)  <span class="comment"># 矩阵中元素类型</span></span><br><span class="line">int64</span><br></pre></td></tr></table></figure><h1 id="创建array"><a href="#创建array" class="headerlink" title="创建array"></a>创建array</h1><h2 id="在创建的同时声明元素类型"><a href="#在创建的同时声明元素类型" class="headerlink" title="在创建的同时声明元素类型"></a>在创建的同时声明元素类型</h2><p>使用上文中的方法的话，我们并没有办法制定元素的类型，因此我们可以通过在创建时声明元素类型来解决这个问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],dtype = np.int32)</span><br><span class="line">b = np.array([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],dtype = np.float)</span><br></pre></td></tr></table></figure><h2 id="特殊矩阵"><a href="#特殊矩阵" class="headerlink" title="特殊矩阵"></a>特殊矩阵</h2><p>如果我们需要一个元素全为0的矩阵的话，可以使用numpy中的zeros()  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>zero = np.zeros((<span class="number">2</span>,<span class="number">3</span>))   <span class="comment"># 创建一个2x3的零矩阵</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(zero)</span><br><span class="line">[[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line"> [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]]</span><br></pre></td></tr></table></figure><p>同理，我们还可以生成全为1的制定大小的矩阵</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">one = np.ones(<span class="number">3</span>,<span class="number">4</span>)</span><br></pre></td></tr></table></figure><p>empty矩阵  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>empty = np.empty((<span class="number">2</span>,<span class="number">3</span>))   </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(empty)</span><br><span class="line">[[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line"> [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]]</span><br></pre></td></tr></table></figure><div class="note danger"><p>​    需要注意的是empty所创建出来的矩阵所有元素都不为0，但是非常接近于0.<br>​    因此在我们需要使用一个矩阵来除以empty矩阵的时候，就不会出错了。反之，除以zero矩阵的话就不对了。  </p></div><h2 id="生成矩阵的其他方法"><a href="#生成矩阵的其他方法" class="headerlink" title="生成矩阵的其他方法"></a>生成矩阵的其他方法</h2><p>arange</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>c = np.arange(<span class="number">10</span>)   <span class="comment"># 生成一个0到9的一维矩阵</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(c)</span><br><span class="line">[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = np.arange(<span class="number">4</span>,<span class="number">12</span>)   <span class="comment"># 生成一个[4,12)的一维矩阵</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(d)</span><br><span class="line">[<span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> <span class="number">11</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>e = np.arange(<span class="number">1</span>,<span class="number">20</span>,<span class="number">3</span>) <span class="comment"># [1,20)  间隔为3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(e)</span><br><span class="line">[<span class="number">1</span> <span class="number">4</span> <span class="number">7</span> <span class="number">10</span> <span class="number">13</span> <span class="number">16</span> <span class="number">19</span>]</span><br></pre></td></tr></table></figure><p>rashap 重新定义矩阵的形状</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = np.arange(<span class="number">8</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(f)</span><br><span class="line">[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = f.reshape(<span class="number">4</span>,<span class="number">2</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(f)</span><br><span class="line">[[<span class="number">0</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span>]</span><br><span class="line"> [<span class="number">6</span> <span class="number">7</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.reshape(<span class="number">2</span>,<span class="number">4</span>)</span><br><span class="line">array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">       [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]])</span><br></pre></td></tr></table></figure><h1 id="矩阵的运算1"><a href="#矩阵的运算1" class="headerlink" title="矩阵的运算1"></a>矩阵的运算1</h1><h2 id="简单的运算"><a href="#简单的运算" class="headerlink" title="简单的运算"></a>简单的运算</h2><div class="note danger"><p>​    简单的加、减、乘、除、取余、取整、阶乘等运算方式都是按位置1对1进行运算<br>​    但是要求矩阵的行与列都是相同的<br>​    要注意矩阵间的运算并不是这样，具体规则在下方</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr1 = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr2 = np.array([[<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>],[<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1)</span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr2)</span><br><span class="line">[[<span class="number">1</span> <span class="number">1</span> <span class="number">2</span>]</span><br><span class="line"> [<span class="number">2</span> <span class="number">3</span> <span class="number">3</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1+arr2)   <span class="comment"># 加法</span></span><br><span class="line">[[<span class="number">2</span> <span class="number">3</span> <span class="number">5</span>]</span><br><span class="line"> [<span class="number">6</span> <span class="number">8</span> <span class="number">9</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1-arr2)   <span class="comment"># 减法</span></span><br><span class="line">[[<span class="number">0</span> <span class="number">1</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">2</span> <span class="number">2</span> <span class="number">3</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1*arr2)   <span class="comment"># 乘法</span></span><br><span class="line">[[ <span class="number">1</span>  <span class="number">2</span>  <span class="number">6</span>]</span><br><span class="line"> [ <span class="number">8</span> <span class="number">15</span> <span class="number">18</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1**arr2)  <span class="comment"># 阶乘</span></span><br><span class="line">[[  <span class="number">1</span>   <span class="number">2</span>   <span class="number">9</span>]</span><br><span class="line"> [ <span class="number">16</span> <span class="number">125</span> <span class="number">216</span>]] </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1/arr2)   <span class="comment"># 除法</span></span><br><span class="line">[[<span class="number">1.</span>         <span class="number">2.</span>         <span class="number">1.5</span>       ]</span><br><span class="line"> [<span class="number">2.</span>         <span class="number">1.66666667</span> <span class="number">2.</span>        ]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1%arr2)   <span class="comment"># 取余</span></span><br><span class="line">[[<span class="number">0</span> <span class="number">0</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">0</span> <span class="number">2</span> <span class="number">0</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1//arr2)  <span class="comment"># 取整</span></span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">2</span> <span class="number">1</span> <span class="number">2</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1+<span class="number">1</span>)      <span class="comment"># 所有元素都加一个数</span></span><br><span class="line">[[<span class="number">2</span> <span class="number">3</span> <span class="number">4</span>]</span><br><span class="line"> [<span class="number">5</span> <span class="number">6</span> <span class="number">7</span>]]</span><br><span class="line"><span class="comment"># 减法、乘法、除法等也一样</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr3 = arr1 &gt; <span class="number">3</span>    <span class="comment"># 比较判断</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr3)</span><br><span class="line">[[<span class="keyword">False</span> <span class="keyword">False</span> <span class="keyword">False</span>]</span><br><span class="line"> [ <span class="keyword">True</span>  <span class="keyword">True</span>  <span class="keyword">True</span>]]</span><br></pre></td></tr></table></figure><h2 id="矩阵的运算"><a href="#矩阵的运算" class="headerlink" title="矩阵的运算"></a>矩阵的运算</h2><div class="note danger"><p>​    矩阵间的运算规则与线代中的方法相同  </p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr4 = np.ones((<span class="number">3</span>,<span class="number">5</span>))     <span class="comment"># 定义一个元素全为1的矩阵</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.dot(arr1,arr4)         <span class="comment"># 矩阵arr1与arr4相乘</span></span><br><span class="line">array([[ <span class="number">6.</span>,  <span class="number">6.</span>,  <span class="number">6.</span>,  <span class="number">6.</span>,  <span class="number">6.</span>],</span><br><span class="line">       [<span class="number">15.</span>, <span class="number">15.</span>, <span class="number">15.</span>, <span class="number">15.</span>, <span class="number">15.</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr1.dot(arr4)            <span class="comment"># 同上</span></span><br><span class="line">array([[ <span class="number">6.</span>,  <span class="number">6.</span>,  <span class="number">6.</span>,  <span class="number">6.</span>,  <span class="number">6.</span>],</span><br><span class="line">       [<span class="number">15.</span>, <span class="number">15.</span>, <span class="number">15.</span>, <span class="number">15.</span>, <span class="number">15.</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1.T)             <span class="comment"># 转置矩阵</span></span><br><span class="line">[[<span class="number">1</span> <span class="number">4</span>]</span><br><span class="line"> [<span class="number">2</span> <span class="number">5</span>]</span><br><span class="line"> [<span class="number">3</span> <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(np.transpose(arr1)) <span class="comment"># 同上</span></span><br><span class="line">[[<span class="number">1</span> <span class="number">4</span>]</span><br><span class="line"> [<span class="number">2</span> <span class="number">5</span>]</span><br><span class="line"> [<span class="number">3</span> <span class="number">6</span>]]</span><br></pre></td></tr></table></figure><h1 id="随机数的生成以及矩阵的运算2"><a href="#随机数的生成以及矩阵的运算2" class="headerlink" title="随机数的生成以及矩阵的运算2"></a>随机数的生成以及矩阵的运算2</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成3x2的在0-1之间的随机数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sample1 = np.random.random((<span class="number">3</span>,<span class="number">2</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(sample1)</span><br><span class="line">[[<span class="number">0.59323399</span> <span class="number">0.16406566</span>]</span><br><span class="line"> [<span class="number">0.53314295</span> <span class="number">0.42851363</span>]</span><br><span class="line"> [<span class="number">0.06050496</span> <span class="number">0.50214404</span>]]</span><br><span class="line"><span class="comment"># 生成3x2的符合标准正态分布的随机数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sample2 = np.random.normal(size=(<span class="number">3</span>,<span class="number">2</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(sample2)</span><br><span class="line">[[<span class="number">-0.90205973</span> <span class="number">-0.08097247</span>]</span><br><span class="line"> [ <span class="number">1.72986545</span> <span class="number">-0.81119537</span>]</span><br><span class="line"> [<span class="number">-0.40989374</span>  <span class="number">0.27041087</span>]]</span><br><span class="line"><span class="comment"># 生成3x2的0-10之间的整数随机数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sample3 = np.random.randint(<span class="number">0</span>,<span class="number">10</span>,size=(<span class="number">3</span>,<span class="number">2</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(sample3)</span><br><span class="line">[[<span class="number">6</span> <span class="number">2</span>]</span><br><span class="line"> [<span class="number">9</span> <span class="number">6</span>]</span><br><span class="line"> [<span class="number">0</span> <span class="number">3</span>]]</span><br><span class="line"><span class="comment"># 求和</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.sum(sample1)</span><br><span class="line"><span class="number">2.281605244421956</span></span><br><span class="line"><span class="comment"># 求最小值 max同理</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.min(sample1)</span><br><span class="line"><span class="number">0.06050496121103843</span></span><br><span class="line"><span class="comment"># axis = 0 对列求和</span></span><br><span class="line"><span class="comment"># axis = 1 对行求和</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.sum(sample1,axis = <span class="number">0</span>)</span><br><span class="line">array([<span class="number">1.18688191</span>, <span class="number">1.09472334</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.sum(sample1,axis = <span class="number">1</span>)</span><br><span class="line">array([<span class="number">0.75729965</span>, <span class="number">0.96165658</span>, <span class="number">0.562649</span>  ])</span><br><span class="line"><span class="comment"># 求最大值最小值索引</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.argmax(sample1)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.argmin(sample1)</span><br><span class="line"><span class="comment"># 求平均值</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(np.mean(sample1))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(sample1.mean())</span><br><span class="line"><span class="comment"># 求中位数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.median(sample1)</span><br><span class="line"><span class="comment"># 求开方的结果</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.sqrt(sample1)</span><br><span class="line"><span class="comment"># 排序</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sample4 = np.random.randint(<span class="number">0</span>,<span class="number">10</span>,size=(<span class="number">1</span>,<span class="number">10</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(sample4)</span><br><span class="line">[[<span class="number">6</span> <span class="number">6</span> <span class="number">2</span> <span class="number">5</span> <span class="number">6</span> <span class="number">1</span> <span class="number">0</span> <span class="number">2</span> <span class="number">7</span> <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.sort(sample4)</span><br><span class="line">array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">7</span>]])</span><br><span class="line"><span class="comment"># 如果是多维的话，则会对每一行进行排序</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.sort(sample1)</span><br><span class="line">array([[<span class="number">0.16406566</span>, <span class="number">0.59323399</span>],</span><br><span class="line">       [<span class="number">0.42851363</span>, <span class="number">0.53314295</span>],</span><br><span class="line">       [<span class="number">0.06050496</span>, <span class="number">0.50214404</span>]])</span><br><span class="line"><span class="comment"># sample4中的元素小于2的会变成2，大于7的会变成7</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.clip(sample4,<span class="number">3</span>,<span class="number">7</span>)</span><br><span class="line">array([[<span class="number">6</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">6</span>]])</span><br></pre></td></tr></table></figure><h1 id="numpy的索引"><a href="#numpy的索引" class="headerlink" title="numpy的索引"></a>numpy的索引</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr1 = np.arange(<span class="number">2</span>,<span class="number">14</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1)</span><br><span class="line">[ <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1[<span class="number">2</span>])     <span class="comment"># 第二个位置的数据</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="comment"># 个人感觉和数组很像（小声BB,下边的内容还没看</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1[<span class="number">1</span>:<span class="number">4</span>])   <span class="comment"># [1,4)的数据</span></span><br><span class="line">[<span class="number">3</span> <span class="number">4</span> <span class="number">5</span>]</span><br><span class="line"><span class="comment"># 最后一个位置为-1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1[<span class="number">2</span>:<span class="number">-1</span>])  <span class="comment"># [2,-1)的数据</span></span><br><span class="line">[ <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span>]</span><br><span class="line"><span class="comment"># 空着的话默认从最两侧的位置开始</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1[:<span class="number">5</span>])    </span><br><span class="line">[<span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1[<span class="number">-2</span>:])</span><br><span class="line">[<span class="number">12</span> <span class="number">13</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr2 = arr1.reshape(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"><span class="comment"># (像二维数组~~~</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr2)</span><br><span class="line">[[ <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>]</span><br><span class="line"> [ <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span>]</span><br><span class="line"> [<span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr2[<span class="number">1</span>])</span><br><span class="line">[<span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr2[<span class="number">1</span>][<span class="number">1</span>])</span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr2[<span class="number">1</span>,<span class="number">1</span>])</span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr2[:,<span class="number">2</span>])   <span class="comment"># 提取所有的行的第二列</span></span><br><span class="line">[ <span class="number">4</span>  <span class="number">8</span> <span class="number">12</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> arr2:     <span class="comment"># 循环,迭代行</span></span><br><span class="line"><span class="meta">... </span>    print(i)</span><br><span class="line">[<span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span>]</span><br><span class="line">[<span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span>]</span><br><span class="line">[<span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> arr2.T:   <span class="comment"># 使用转置,迭代列</span></span><br><span class="line"><span class="meta">... </span>    print(i)</span><br><span class="line">[ <span class="number">2</span>  <span class="number">6</span> <span class="number">10</span>]</span><br><span class="line">[ <span class="number">3</span>  <span class="number">7</span> <span class="number">11</span>]</span><br><span class="line">[ <span class="number">4</span>  <span class="number">8</span> <span class="number">12</span>]</span><br><span class="line">[ <span class="number">5</span>  <span class="number">9</span> <span class="number">13</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> arr2.flat: <span class="comment"># 迭代元素</span></span><br><span class="line"><span class="meta">... </span>    print(i)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line">...</span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="number">13</span></span><br></pre></td></tr></table></figure><h1 id="array的合并"><a href="#array的合并" class="headerlink" title="array的合并"></a>array的合并</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 垂直合并</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr1 = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr2 = np.array([<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr3 = np.vstack((arr1,arr2))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr3)</span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr3.shape)</span><br><span class="line">(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="comment"># 水平合并</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr4 = np.hstack((arr1,arr2))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr4)</span><br><span class="line">[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr4.shape)</span><br><span class="line">(<span class="number">6</span>,)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arrv = np.vstack((arr1,arr2,arr3))</span><br><span class="line"><span class="comment"># 合并多行/列</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arrv)</span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]</span><br><span class="line"> [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arrh = np.hstack((arr1,arr2,arr4))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arrh)</span><br><span class="line">[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]</span><br><span class="line"><span class="comment"># 使用参数控制按行/列合并</span></span><br><span class="line"><span class="comment"># axis = 0 垂直合并 (合并的array维度要相同,形状要匹配)</span></span><br><span class="line"><span class="comment"># axis = 1 水平合并 (合并的array维度要相同,形状要匹配)</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr = np.concatenate((arr3,arrv),axis=<span class="number">0</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr)</span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]</span><br><span class="line"> [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]</span><br><span class="line"> [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]]</span><br><span class="line"><span class="comment"># 一维的array不能转置</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1)</span><br><span class="line">[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1.T)</span><br><span class="line">[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"><span class="comment"># 增加维度</span></span><br><span class="line"><span class="comment"># 注意newaxis的位置</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1.shape)</span><br><span class="line">(<span class="number">3</span>,)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr1_1 = arr1[np.newaxis,:]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1_1)</span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1_1.shape)</span><br><span class="line">(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1_1.T)    <span class="comment"># 转置</span></span><br><span class="line">[[<span class="number">1</span>]</span><br><span class="line"> [<span class="number">2</span>]</span><br><span class="line"> [<span class="number">3</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr1_2 = arr1[:,np.newaxis]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1_2)</span><br><span class="line">[[<span class="number">1</span>]</span><br><span class="line"> [<span class="number">2</span>]</span><br><span class="line"> [<span class="number">3</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1_2.shape)</span><br><span class="line">(<span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line"><span class="comment"># atleast_xd 变为x维的矩阵</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr1_3 = np.atleast_2d(arr1)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1_3)</span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1_3.T)</span><br><span class="line">[[<span class="number">1</span>]</span><br><span class="line"> [<span class="number">2</span>]</span><br><span class="line"> [<span class="number">3</span>]]</span><br></pre></td></tr></table></figure><h1 id="array分割"><a href="#array分割" class="headerlink" title="array分割"></a>array分割</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr1 = np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr1)</span><br><span class="line">[[ <span class="number">0</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>]</span><br><span class="line"> [ <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>]</span><br><span class="line"> [ <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span>]]</span><br><span class="line"><span class="comment"># 将arr1分割</span></span><br><span class="line"><span class="comment"># axis = 1 水平方向切割</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr2,arr3 = np.split(arr1,<span class="number">2</span>,axis=<span class="number">1</span>)</span><br><span class="line"><span class="comment"># arr2,arr3 = np.hsplit(arr1,2)</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr2)</span><br><span class="line">[[<span class="number">0</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span>]</span><br><span class="line"> [<span class="number">8</span> <span class="number">9</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr3)</span><br><span class="line">[[ <span class="number">2</span>  <span class="number">3</span>]</span><br><span class="line"> [ <span class="number">6</span>  <span class="number">7</span>]</span><br><span class="line"> [<span class="number">10</span> <span class="number">11</span>]]</span><br><span class="line"><span class="comment"># axis = 0 垂直方向分割</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr4,arr5,arr6 = np.split(arr1,<span class="number">3</span>,axis=<span class="number">0</span>)</span><br><span class="line"><span class="comment"># arr4,arr5,arr6 = np.vsplit(arr1,3)</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr4)</span><br><span class="line">[[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr5)</span><br><span class="line">[[<span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr6)</span><br><span class="line">[[ <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span>]]</span><br><span class="line"><span class="comment"># 不等分切割</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr2,arr3,arr4 = np.array_split(arr1,<span class="number">3</span>,axis=<span class="number">1</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr2)</span><br><span class="line">[[<span class="number">0</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span>]</span><br><span class="line"> [<span class="number">8</span> <span class="number">9</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr3)</span><br><span class="line">[[ <span class="number">2</span>]</span><br><span class="line"> [ <span class="number">6</span>]</span><br><span class="line"> [<span class="number">10</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr4)</span><br><span class="line">[[ <span class="number">3</span>]</span><br><span class="line"> [ <span class="number">7</span>]</span><br><span class="line"> [<span class="number">11</span>]]</span><br></pre></td></tr></table></figure><h1 id="numpy的浅拷贝和深拷贝"><a href="#numpy的浅拷贝和深拷贝" class="headerlink" title="numpy的浅拷贝和深拷贝"></a>numpy的浅拷贝和深拷贝</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 个人理解：类似于指针和形参</span></span><br><span class="line"><span class="comment"># 浅拷贝：指针</span></span><br><span class="line"><span class="comment"># 深拷贝：形参</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 浅拷贝</span></span><br><span class="line">arr2 = arr1</span><br><span class="line"></span><br><span class="line"><span class="comment">#深拷贝</span></span><br><span class="line">arr2 = arr1.copy()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Numpy简介&quot;&gt;&lt;a href=&quot;#Numpy简介&quot; class=&quot;headerlink&quot; title=&quot;Numpy简介&quot;&gt;&lt;/a&gt;Numpy简介&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;NumPy(Numerical Python) 是 Python 语言的一个扩展程序库，支持大量的维度数组与矩阵运算，此外也针对数组运算提供大量的数学函数库。  &lt;/p&gt;
&lt;p&gt;NumPy 的前身 Numeric 最早是由 Jim Hugunin 与其它协作者共同开发，2005 年，Travis Oliphant 在 Numeric 中结合了另一个同性质的程序库 Numarray 的特色，并加入了其它扩展而开发了 NumPy。NumPy 为开放源代码并且由许多协作者共同维护开发。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.duny31030.top/categories/Python/"/>
    
      <category term="Numpy" scheme="http://www.duny31030.top/categories/Python/Numpy/"/>
    
    
      <category term="Python" scheme="http://www.duny31030.top/tags/Python/"/>
    
      <category term="Numpy" scheme="http://www.duny31030.top/tags/Numpy/"/>
    
      <category term="学习笔记" scheme="http://www.duny31030.top/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>在MAC上编写汇编(一)安装环境</title>
    <link href="http://www.duny31030.top/2018/12/15/Nasm-1/"/>
    <id>http://www.duny31030.top/2018/12/15/Nasm-1/</id>
    <published>2018-12-15T03:54:30.000Z</published>
    <updated>2019-10-16T17:18:17.202Z</updated>
    
    <content type="html"><![CDATA[<p>由于某些历史遗留原因，我到现在还没学汇编，又因为某些个人原因，现在不得不找时间把汇编学完。。。<br>所以还是开一个汇编的坑先，以后填不填的再另说吧︿(￣︶￣)︿</p><a id="more"></a><p>首先要解决的便是环境问题，我用的电脑是15年的rmbp（840）</p><p>首先可以在终端中输入<font color="blue">nasm -v</font>来查询电脑上是否安装了nasm,MAC应该是自带的，可能版本有些老(我好像之前自己升级过nasm)，所以显示的版本比较新，正常情况下nasm的版本应该是比较老的</p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-12-15/49288610.jpg" alt="nasm-v"></p><p>如果版本比较老的话，只需要在终端中输入输入<font color="blue">brew install nasm</font></p><p>如果电脑没有安装<font color="blue">brew</font>的话也没关系,<a href="https://blog.csdn.net/boog14/article/details/80331073" target="_blank" rel="noopener">看这里</a>，也可以用搜索引擎搜索关键字”Mac brew安装”。</p><p>接下来可以写一段汇编代码编译一下看看</p><p>比如：编程第一步，helloworld</p><p>新建一个<font color="blue">hello.asm</font></p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-12-15/74075208.jpg" alt="hello"></p><p>然后对其进行编译</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于某些历史遗留原因，我到现在还没学汇编，又因为某些个人原因，现在不得不找时间把汇编学完。。。&lt;br&gt;所以还是开一个汇编的坑先，以后填不填的再另说吧︿(￣︶￣)︿&lt;/p&gt;
    
    </summary>
    
      <category term="汇编语言" scheme="http://www.duny31030.top/categories/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/"/>
    
      <category term="安装环境" scheme="http://www.duny31030.top/categories/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83/"/>
    
    
      <category term="汇编语言" scheme="http://www.duny31030.top/tags/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>热身赛题解</title>
    <link href="http://www.duny31030.top/2018/11/25/reshen/"/>
    <id>http://www.duny31030.top/2018/11/25/reshen/</id>
    <published>2018-11-25T02:23:22.000Z</published>
    <updated>2019-10-16T17:19:45.642Z</updated>
    
    <content type="html"><![CDATA[<p>传送门：<a href="https://qluacm.club/contest.php?cid=1009" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>除了D题都挺友好的吧？</p></blockquote><a id="more"></a><h2 id="A-寻找欧皇"><a href="#A-寻找欧皇" class="headerlink" title="A 寻找欧皇"></a>A 寻找欧皇</h2><blockquote><p>我随机选了一个数7<br>可能大部分同学没见过这种题</p><p>其实可以通过看大家提交的错误次数</p><p>大部分人都是错了6次  你可以猜一下7</p><p>或者你直接尝试1-9这9个数字</p></blockquote><h2 id="B-人类的本质"><a href="#B-人类的本质" class="headerlink" title="B 人类的本质"></a>B 人类的本质</h2><blockquote><p>读入一个字符串 读入一个整数然后一个for循环输出</p><p>注意多组读入</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s) != EOF)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-数的价值"><a href="#C-数的价值" class="headerlink" title="C 数的价值"></a>C 数的价值</h2><blockquote><p>直接算就好了</p><p>注意多组输入 记得初始化</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n) != EOF)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="number">0</span>;   <span class="comment">// 作用看下文</span></span><br><span class="line">    <span class="keyword">while</span>(n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">10</span>)   <span class="comment">// 判断最后一位是不是非0数</span></span><br><span class="line">        &#123;</span><br><span class="line">            ans *= (n%<span class="number">10</span>);</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        n /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>输入：0</p><p>输出：0</p><p>如果不加flag进行判断是否存在非零数的话</p><p>上边这组数据输出的可能是1</p><font color="red">当然 这是针对这种写法来说，这种题解题方法太多了</font></blockquote><h2 id="D-方格填充"><a href="#D-方格填充" class="headerlink" title="D 方格填充"></a>D 方格填充</h2><blockquote><p>我当时写的时候是自己在纸上手推所有情况</p><p>范围才1-7而已</p><p>自己手动推出来</p><p>1x1</p><p>2x1 2x2</p><p>3x1 3x2 3x3</p><p>………..</p><p>7x1 7x2 7x3 7x4 7x5 7x6 7x7</p><p>的所有大小的矩形就出来答案了</p></blockquote><div class="note danger"><p>这里是<font color="green">凉</font>心出题人给的简短题解，详细的版本可能要稍等等</p><p>对于每组m，n。设t＝ (m x n ) / 4取整，若能整除，从t开始枚举，否则，从t＋1开始。容易发现，若mxn是4x2的组合，则t为答案，否则t＋1为答案。<br>n或m是1的时候要特判</p></div><h2 id="E-买铅笔"><a href="#E-买铅笔" class="headerlink" title="E 买铅笔"></a>E 买铅笔</h2><blockquote><p>这个就是比较一下三个数的大小的稍微升级版。。。</p><p><a href="https://blog.csdn.net/u014788620/article/details/83444377" target="_blank" rel="noopener">看这里</a></p></blockquote><h2 id="F-图书管理员"><a href="#F-图书管理员" class="headerlink" title="F 图书管理员"></a>F 图书管理员</h2><blockquote><p>网络上的题解非常多</p><p><a href="https://www.luogu.org/problemnew/solution/P3955" target="_blank" rel="noopener">看这里</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;传送门：&lt;a href=&quot;https://qluacm.club/contest.php?cid=1009&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我是传送门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;除了D题都挺友好的吧？&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="题解" scheme="http://www.duny31030.top/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="题解" scheme="http://www.duny31030.top/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>回文日期</title>
    <link href="http://www.duny31030.top/2018/10/26/qoj1272/"/>
    <id>http://www.duny31030.top/2018/10/26/qoj1272/</id>
    <published>2018-10-26T15:33:54.000Z</published>
    <updated>2019-10-16T17:19:40.015Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://210.44.144.221/problem.php?id=1272" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>在日常生活中，通过年、月、日这三个要素可以表示出一个唯一确定的日期。 </p><p>牛牛习惯用8位数字表示一个日期，其中，前4位代表年份，接下来2位代表月 份，最后2位代表日期。显然：一个日期只有一种表示方法，而两个不同的日期的表 示方法不会相同。 </p><p>牛牛认为，一个日期是回文的，当且仅当表示这个日期的8位数字是回文的。现 在，牛牛想知道：在他指定的两个日期之间包含这两个日期本身），有多少个真实存 在的日期是回文的。 </p><p>一个8位数字是回文的，当且仅当对于所有的i(1&lt;= i &lt;= 8)从左向右数的第i个 数字和第9-i个数字（即从右向左数的第i个数字）是相同的。 </p><p>例如： </p><p>•对于2016年11月19日，用8位数字20161119表示，它不是回文的。 </p><p>•对于2010年1月2日，用8位数字20100102表示，它是回文的。 </p><p>•对于2010年10月2日，用8位数字20101002表示，它不是回文的。 </p><p>每一年中都有1212个月份： </p><p>其中，1,3,5,7,8,10,12月每个月有31天；4,6,9,11月每个月有30天；而对于2月，闰年时有29天，平年时有28天。 </p><p>一个年份是闰年当且仅当它满足下列两种情况其中的一种： </p><p>1.这个年份是4的整数倍，但不是100的整数倍； </p><p>2.这个年份是400的整数倍。 </p><p>例如： </p><p>•以下几个年份都是闰年：2000,2012,2016。 </p><p>•以下几个年份是平年：1900,2011,2014。 </p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>两行，每行包括一个8位数字。 </p><p>第一行表示牛牛指定的起始日期。 </p><p>第二行表示牛牛指定的终止日期。 </p><p>保证date_i和都是真实存在的日期，且年份部分一定为4位数字，且首位数字不为0。 </p><p>保证date 1 —定不晚于date 2。 </p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>一个整数，表示在date1和date2之间，有多少个日期是回文的。</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>20110101<br>20111231</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>1</p></blockquote><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><blockquote><p>对于%60的数据，满足date1 = date2 </p><font color="red">实测date1 = date2的数据不足60%,也就是说本题的测试数据比正常的多一些，应该是比洛谷的数据要强</font></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>显然，每年至多存在一个回文日期</p><p>因此只需要根据年份算出回文日期对应的月与日判断其是否合法便可以知道今年日否存在回文日期</p><p>具体步骤看代码，附详细注释</p><p>为优化阅读体验，已删除大量无关代码</p><p>难度大约为(区域赛签到题难度x1.0 ~ x1.2)   </p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  1272.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://210.44.144.221/problem.php?id=1272</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/10/26 18时02分08秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存储每个月的天数</span></span><br><span class="line"><span class="comment">// 2月需要进行特判</span></span><br><span class="line"><span class="keyword">int</span> mon[<span class="number">15</span>] = &#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"></span><br><span class="line">ll y,m,d,y2,m2,d2;</span><br><span class="line">ll date1,date2; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断year是否是闰年</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ye</span><span class="params">(<span class="keyword">int</span> year)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((year%<span class="number">4</span> == <span class="number">0</span> &amp;&amp; year%<span class="number">100</span> != <span class="number">0</span>) || (year%<span class="number">400</span> == <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对于一个确定的日期进行检查</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> date)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 取出这个确定的日期的每一位</span></span><br><span class="line">    <span class="comment">// 共取出8位存储到tmp数组中</span></span><br><span class="line">    <span class="keyword">int</span> tmp[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">8</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        tmp[i] = date%<span class="number">10</span>;</span><br><span class="line">        date /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>,j = <span class="number">8</span>;i &lt;= <span class="number">4</span>;i++,j--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 如果有一个位置的数不同则构不成回文</span></span><br><span class="line">        <span class="keyword">if</span>(tmp[i] != tmp[j])</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对于一段日期进行检查</span></span><br><span class="line"><span class="comment">// 传入参数的说明</span></span><br><span class="line"><span class="comment">// year 年份</span></span><br><span class="line"><span class="comment">// m1 d1  开始的月份与日期</span></span><br><span class="line"><span class="comment">// m2 d2  结束的月份与日期</span></span><br><span class="line"><span class="comment">// 返回在year-m1-d1 - year-m2-d2这段日期内有没有回文日期</span></span><br><span class="line"><span class="comment">// 有   返回1</span></span><br><span class="line"><span class="comment">// 没有 返回0</span></span><br><span class="line"><span class="comment">// 原理：根据year来算出回文日期对应的月份t1与日子t2</span></span><br><span class="line"><span class="comment">// 首先判断这个日期是否合法</span></span><br><span class="line"><span class="comment">// 例如：00-00 13-40 这都是不合法的日期</span></span><br><span class="line"><span class="comment">//       01-31 12-21 是合法的日期</span></span><br><span class="line"><span class="comment">// 至于2-29这个日期是否合法需要进行特判看今年是否为闰年</span></span><br><span class="line"><span class="comment">// 然后检查t1-t2 是否在[m1-d1 - m2-d2]这段区间之中</span></span><br><span class="line"><span class="comment">// 如果在则说明存在一个回文日期</span></span><br><span class="line"><span class="comment">// 如果不在则说明不存在回文日期</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">slove1</span><span class="params">(<span class="keyword">int</span> year,<span class="keyword">int</span> m1,<span class="keyword">int</span> m2,<span class="keyword">int</span> d1,<span class="keyword">int</span> d2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = year;</span><br><span class="line">    <span class="comment">// 求出月份</span></span><br><span class="line">    <span class="keyword">int</span> t1 = tmp%<span class="number">10</span>;    tmp /= <span class="number">10</span>;</span><br><span class="line">    t1 = t1*<span class="number">10</span>+tmp%<span class="number">10</span>;  tmp /= <span class="number">10</span>;</span><br><span class="line">    <span class="comment">// 求出具体的日期</span></span><br><span class="line">    <span class="keyword">int</span> t2 = tmp%<span class="number">10</span>;    tmp /= <span class="number">10</span>;</span><br><span class="line">    t2 = t2*<span class="number">10</span>+tmp%<span class="number">10</span>;  tmp /= <span class="number">10</span>;</span><br><span class="line">    <span class="comment">// 判断日期是否合法</span></span><br><span class="line">    <span class="keyword">if</span>(t1 &gt; <span class="number">12</span> || t1 == <span class="number">0</span> || t2 == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 对2月进行特判</span></span><br><span class="line">        <span class="keyword">if</span>(t1 == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 非闰年有28天</span></span><br><span class="line">            <span class="keyword">int</span> tmp = <span class="number">28</span>;</span><br><span class="line">            <span class="comment">// 闰年有29天</span></span><br><span class="line">            <span class="keyword">if</span>(ye(year))</span><br><span class="line">                tmp += <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 判断日期是否超出本月天数上限</span></span><br><span class="line">            <span class="keyword">if</span>(t2 &gt; tmp)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// tmp表示t1月有多少天</span></span><br><span class="line">            <span class="keyword">int</span> tmp = mon[t1];</span><br><span class="line">            <span class="comment">// 如果日期不合法</span></span><br><span class="line">            <span class="keyword">if</span>(t2 &gt; tmp)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 判断是否在规定日期区间之内</span></span><br><span class="line">                <span class="keyword">if</span>(t1 &gt;= m1)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(t1 &gt; m2)    </span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">else</span> </span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">// 判断是否在开始或者结束的那个月内</span></span><br><span class="line">                        <span class="keyword">if</span>(t1 == m1 || t1 == m2)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span>(t1 == m1)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">if</span>(t2 &gt;= d1)    </span><br><span class="line">                                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">else</span>    </span><br><span class="line">                                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span> </span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">if</span>(t2 &lt;= d2)    </span><br><span class="line">                                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">else</span>    </span><br><span class="line">                                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span>    </span><br><span class="line">                            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 枚举年份</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">slove2</span><span class="params">(<span class="keyword">int</span> start,<span class="keyword">int</span> end)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 计算这一整年内是否有回文</span></span><br><span class="line">    <span class="comment">// 因此日期区间可以写[1月1日 - 12月31日]</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = start;i &lt;= end;i++)</span><br><span class="line">        ans += slove1(i,<span class="number">1</span>,<span class="number">12</span>,<span class="number">1</span>,<span class="number">31</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// date1    开始的日期</span></span><br><span class="line">    <span class="comment">// date2    结束的日期</span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; date1 &gt;&gt; date2;</span><br><span class="line">    <span class="keyword">if</span>(date1 == date2)   <span class="comment">// 60%的数据</span></span><br><span class="line">    &#123; </span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; check(date1) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 在date1中提取出年份月份以及日期</span></span><br><span class="line">        y = date1/<span class="number">10000</span>;   </span><br><span class="line">        m = date1%<span class="number">10000</span>/<span class="number">100</span>;</span><br><span class="line">        d = date1%<span class="number">100</span>;</span><br><span class="line">        <span class="comment">// 在date2中提取出年份月份以及日期</span></span><br><span class="line">        y2 = date2/<span class="number">10000</span>;</span><br><span class="line">        m2 = date2%<span class="number">10000</span>/<span class="number">100</span>;</span><br><span class="line">        d2 = date2%<span class="number">100</span>;</span><br><span class="line">        <span class="comment">// 如果是在同一年内</span></span><br><span class="line">        <span class="keyword">if</span>(y == y2)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; slove1(y,m,m2,d,d2) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">// 计算[y+1,y2-1]这个区间内共有多少个回文日期</span></span><br><span class="line">            ans += slove2(y+<span class="number">1</span>,y2<span class="number">-1</span>);</span><br><span class="line">            <span class="comment">// 计算y年[m-d,12,31]这个日期区间内是否存在回文日期</span></span><br><span class="line">            ans += slove1(y,m,<span class="number">12</span>,d,<span class="number">31</span>);</span><br><span class="line">            <span class="comment">// 计算y2年[1-1,m2-d2]这个日期区间内是否存在回文日期</span></span><br><span class="line">            ans += slove1(y2,<span class="number">1</span>,m2,<span class="number">1</span>,d2);</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;传送门：&lt;a href=&quot;http://210.44.144.221/problem.php?id=1272&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我是传送门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在日常生活中，通过年、月、日这三个要素可以表示出一个唯一确定的日期。 &lt;/p&gt;
&lt;p&gt;牛牛习惯用8位数字表示一个日期，其中，前4位代表年份，接下来2位代表月 份，最后2位代表日期。显然：一个日期只有一种表示方法，而两个不同的日期的表 示方法不会相同。 &lt;/p&gt;
&lt;p&gt;牛牛认为，一个日期是回文的，当且仅当表示这个日期的8位数字是回文的。现 在，牛牛想知道：在他指定的两个日期之间包含这两个日期本身），有多少个真实存 在的日期是回文的。 &lt;/p&gt;
&lt;p&gt;一个8位数字是回文的，当且仅当对于所有的i(1&amp;lt;= i &amp;lt;= 8)从左向右数的第i个 数字和第9-i个数字（即从右向左数的第i个数字）是相同的。 &lt;/p&gt;
&lt;p&gt;例如： &lt;/p&gt;
&lt;p&gt;•对于2016年11月19日，用8位数字20161119表示，它不是回文的。 &lt;/p&gt;
&lt;p&gt;•对于2010年1月2日，用8位数字20100102表示，它是回文的。 &lt;/p&gt;
&lt;p&gt;•对于2010年10月2日，用8位数字20101002表示，它不是回文的。 &lt;/p&gt;
&lt;p&gt;每一年中都有1212个月份： &lt;/p&gt;
&lt;p&gt;其中，1,3,5,7,8,10,12月每个月有31天；4,6,9,11月每个月有30天；而对于2月，闰年时有29天，平年时有28天。 &lt;/p&gt;
&lt;p&gt;一个年份是闰年当且仅当它满足下列两种情况其中的一种： &lt;/p&gt;
&lt;p&gt;1.这个年份是4的整数倍，但不是100的整数倍； &lt;/p&gt;
&lt;p&gt;2.这个年份是400的整数倍。 &lt;/p&gt;
&lt;p&gt;例如： &lt;/p&gt;
&lt;p&gt;•以下几个年份都是闰年：2000,2012,2016。 &lt;/p&gt;
&lt;p&gt;•以下几个年份是平年：1900,2011,2014。 &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="思维" scheme="http://www.duny31030.top/categories/%E6%80%9D%E7%BB%B4/"/>
    
    
      <category term="思维" scheme="http://www.duny31030.top/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="NOIP" scheme="http://www.duny31030.top/tags/NOIP/"/>
    
  </entry>
  
  <entry>
    <title>  Codeforces Round #518 (Div. 2) C. Colored Rooks</title>
    <link href="http://www.duny31030.top/2018/10/25/Codeforces-Round-518-Div-2/"/>
    <id>http://www.duny31030.top/2018/10/25/Codeforces-Round-518-Div-2/</id>
    <published>2018-10-25T03:09:18.000Z</published>
    <updated>2019-10-16T17:14:23.107Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://codeforces.com/contest/1068/problem/C" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>Ivan is a novice painter. He has $n$ dyes of different colors. He also knows exactly $m$ pairs of colors which harmonize with each other.</p><p>Ivan also enjoy playing chess. He has $5000$ rooks. He wants to take $k$ rooks, paint each of them in one of $n$ colors and then place this $k$ rooks on a chessboard of size $10^9×10^9$.</p><p>Let’s call the set of rooks on the board connected if from any rook we can get to any other rook in this set moving only through cells with rooks from this set. Assume that rooks can jump over other rooks, in other words a rook can go to any cell which shares vertical and to any cell which shares horizontal.</p><p>Ivan wants his arrangement of rooks to have following properties:</p><ul><li>For any color there is a rook of this color on a board;</li><li>For any color the set of rooks of this color is connected;</li><li>For any two different colors $a b$ union of set of rooks of color $a$ and set of rooks of color $b$ is connected if and only if this two colors harmonize with each other.</li></ul><p>Please help Ivan find such an arrangement.</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The first line of input contains 22 integers $n, m (1≤n≤100, 0≤m≤min(1000,n(n−1)/2)$ — number of colors and number of pairs of colors which harmonize with each other.</p><p>In next $m$ lines pairs of colors which harmonize with each other are listed. Colors are numbered from $1$ to $n$. It is guaranteed that no pair occurs twice in this list.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>Print $n$ blocks, $i-th$ of them describes rooks of $i-th$ color.</p><p>In the first line of block print one number $ai (1≤a_i≤5000)$ — number of rooks of color $i$. In each of next $ai$ lines print two integers $x$ and $y$ $(1≤x,y≤10^9)$ — coordinates of the next rook.</p><p>All rooks must be on different cells.</p><p>Total number of rooks must not exceed $5000$.</p><p>It is guaranteed that the solution exists.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>3 2<br>1 2<br>2 3</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>2<br>3 4<br>1 4<br>4<br>1 2<br>2 2<br>2 4<br>5 4<br>1<br>5 1</p></blockquote><h4 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h4><blockquote><p>3 3<br>1 2<br>2 3<br>3 1</p></blockquote><h4 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h4><blockquote><p>1<br>1 1<br>1<br>1 2<br>1<br>1 3</p></blockquote><h4 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h4><blockquote><p>3 1<br>1 3</p></blockquote><h4 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h4><blockquote><p>1<br>1 1<br>1<br>2 2<br>1<br>3 1</p></blockquote><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><blockquote><p>Rooks arrangements for all three examples (red is color $1$, green is color $2$ and blue is color $3$).</p><p><img src="http://codeforces.com/predownloaded/f7/56/f7560f14e46ae4bbae181068c8ba2543c063d7fb.png" alt="img"></p><p><img src="http://codeforces.com/predownloaded/98/63/9863318e636be9d17692f7e8c42c059e8af35f89.png" alt="img"></p><p><img src="http://codeforces.com/predownloaded/83/47/8347df1095cb6906ff2556e2feac9f953577e98b.png" alt="img"></p><font color="red">If there are many correct answers you can print any. You should not maximize or minimize the number of rooks.</font></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><ul><li><p>首先将点x放到(x,x)上(不需要真放，只需要最后输出即可</p></li><li><p>点x全部放到x轴=x的这一条线上，每一组相连的都往上放一个</p></li></ul><p>（具体看代码吧，在纸上画一下就明白了</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ===============================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  C.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  </span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/10/25 01时20分24秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ===============================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1010</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; p[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,x,y;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        p[x].push_back(i+n+<span class="number">1</span>);</span><br><span class="line">        p[y].push_back(i+n+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>;k &lt;= n;k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = p[k].size();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; tmp+<span class="number">1</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; k &lt;&lt; <span class="string">" "</span> &lt;&lt; k &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= tmp;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; k &lt;&lt; <span class="string">" "</span> &lt;&lt; p[k][i<span class="number">-1</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;传送门：&lt;a href=&quot;http://codeforces.com/contest/1068/problem/C&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我是传送门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ivan is a novice painter. He has $n$ dyes of different colors. He also knows exactly $m$ pairs of colors which harmonize with each other.&lt;/p&gt;
&lt;p&gt;Ivan also enjoy playing chess. He has $5000$ rooks. He wants to take $k$ rooks, paint each of them in one of $n$ colors and then place this $k$ rooks on a chessboard of size $10^9×10^9$.&lt;/p&gt;
&lt;p&gt;Let’s call the set of rooks on the board connected if from any rook we can get to any other rook in this set moving only through cells with rooks from this set. Assume that rooks can jump over other rooks, in other words a rook can go to any cell which shares vertical and to any cell which shares horizontal.&lt;/p&gt;
&lt;p&gt;Ivan wants his arrangement of rooks to have following properties:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For any color there is a rook of this color on a board;&lt;/li&gt;
&lt;li&gt;For any color the set of rooks of this color is connected;&lt;/li&gt;
&lt;li&gt;For any two different colors $a b$ union of set of rooks of color $a$ and set of rooks of color $b$ is connected if and only if this two colors harmonize with each other.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please help Ivan find such an arrangement.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="思维" scheme="http://www.duny31030.top/categories/%E6%80%9D%E7%BB%B4/"/>
    
    
      <category term="思维" scheme="http://www.duny31030.top/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="Codeforces" scheme="http://www.duny31030.top/tags/Codeforces/"/>
    
      <category term="构造" scheme="http://www.duny31030.top/tags/%E6%9E%84%E9%80%A0/"/>
    
  </entry>
  
  <entry>
    <title>「2016 ACM/ICPC Asia Regional Dalian Online」F.Football Games</title>
    <link href="http://www.duny31030.top/2018/10/24/2016-ACM-ICPC-Asia-Regional-Dalian-Online-F/"/>
    <id>http://www.duny31030.top/2018/10/24/2016-ACM-ICPC-Asia-Regional-Dalian-Online-F/</id>
    <published>2018-10-24T12:57:07.000Z</published>
    <updated>2019-10-16T17:13:15.165Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5873" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>A mysterious country will hold a football world championships—-Abnormal Cup, attracting football teams and fans from all around the world. This country is so mysterious that none of the information of the games will be open to the public till the end of all the matches. And finally only the score of each team will be announced. </p><p> At the first phase of the championships, teams are divided into M groups using the single round robin rule where one and only one game will be played between each pair of teams within each group. The winner of a game scores 2 points, the loser scores 0, when the game is tied both score 1 point. The schedule of these games are unknown, only the scores of each team in each group are available.</p><p> When those games finished, some insider revealed that there were some false scores in some groups. This has aroused great concern among the pubic, so the the Association of Credit Management (ACM) asks you to judge which groups’ scores must be false.</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>Multiple test cases, process till end of the input.</p><p> For each case, the first line contains a positive integers M, which is the number of groups.<br> The i-th of the next M lines begins with a positive integer Bi representing the number of teams in the i-th group, followed by Bi nonnegative integers representing the score of each team in this group.</p><p><strong>number of test cases &lt;= 10</strong></p><p><strong>M&lt;= 100</strong></p><p><strong>B[i]&lt;= 20000</strong></p><p><strong>score of each team &lt;= 20000</strong></p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test case, output M lines. Output “F” (without quotes) if the scores in the i-th group must be false, output “T” (without quotes) otherwise. See samples for detail.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>2<br>3 0 5 1<br>2 1 1</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>F<br>T</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><ul><li>首先不难想到，n个队伍比赛，任意两支队伍之间有一场,那么就有$n<em>(n-1)/2$场，每场产生2分，所以一共产生$n</em>(n-1)$分。</li><li>我们将所有的队伍按照比分的顺序进行排序，其实这样也是按照他们的胜场次数进行排序了（似乎并没有什么问题，如果写错了请指正</li><li>每场比赛都有2分产生，计算前缀和$sum$一定等于$i*(i-1)$，如果不相等的话，肯定也是存在问题的</li><li>所以</li><li><ol><li>排序</li><li>计算前缀和</li></ol></li><li>这样就可以得出最后的结果了</li></ul></blockquote><div class="note danger"><p>在动手写代码之前一定要好好考虑，拿不准就跟队友交流一下，这道题我错了9次，罚时爆炸(吐血</p></div><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[MAXN];</span><br><span class="line">ll sum = <span class="number">0</span>;</span><br><span class="line">ll t,n,i;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t)!= EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= t;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">            <span class="keyword">for</span>(i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">                sum += a[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(sum != n*(n<span class="number">-1</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"F\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">int</span> fl = <span class="number">0</span>;</span><br><span class="line">                sum = a[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">for</span>(i = <span class="number">2</span>;i &lt;= n;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    sum += a[i];</span><br><span class="line">                    <span class="keyword">if</span>(sum &lt; (i<span class="number">-1</span>)*i)</span><br><span class="line">                    &#123;</span><br><span class="line">                        fl = <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(fl)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"F\n"</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"T\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;传送门：&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=5873&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我是传送门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A mysterious country will hold a football world championships—-Abnormal Cup, attracting football teams and fans from all around the world. This country is so mysterious that none of the information of the games will be open to the public till the end of all the matches. And finally only the score of each team will be announced. &lt;/p&gt;
&lt;p&gt; At the first phase of the championships, teams are divided into M groups using the single round robin rule where one and only one game will be played between each pair of teams within each group. The winner of a game scores 2 points, the loser scores 0, when the game is tied both score 1 point. The schedule of these games are unknown, only the scores of each team in each group are available.&lt;/p&gt;
&lt;p&gt; When those games finished, some insider revealed that there were some false scores in some groups. This has aroused great concern among the pubic, so the the Association of Credit Management (ACM) asks you to judge which groups’ scores must be false.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="思维" scheme="http://www.duny31030.top/categories/%E6%80%9D%E7%BB%B4/"/>
    
    
      <category term="思维" scheme="http://www.duny31030.top/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="ICPC&amp;&amp;CCPC" scheme="http://www.duny31030.top/tags/ICPC-CCPC/"/>
    
  </entry>
  
  <entry>
    <title>「The 2016 ACM-ICPC Asia Dalian Regional Contest」C.Game of Taking Stones(博弈论+大数)</title>
    <link href="http://www.duny31030.top/2018/10/24/The-2016-ACM-ICPC-Asia-Dalian-Regional-Contest-C/"/>
    <id>http://www.duny31030.top/2018/10/24/The-2016-ACM-ICPC-Asia-Dalian-Regional-Contest-C/</id>
    <published>2018-10-24T11:40:30.000Z</published>
    <updated>2019-10-16T17:20:59.809Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5973" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>Two people face two piles of stones and make a game. They take turns to take stones. As game rules, there are two different methods of taking stones: One scheme is that you can take any number of stones in any one pile while the alternative is to take the same amount of stones at the same time in two piles. In the end, the first person taking all the stones is winner.Now,giving the initial number of two stones, can you win this game if you are the first to take stones and both sides have taken the best strategy?</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>Input contains multiple sets of test data.Each test data occupies one line,containing two non-negative integers a andb,representing the number of two stones.a and b are not more than 10^100.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test data,output answer on one line.1 means you are the winner,otherwise output 0.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>2 1<br>8 4<br>4 7</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>0<br>1<br>0</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>太依赖榜单了，过的人数比较少的题目甚至直接没去看，很严重的一个问题</p><p>这道题其实就是一道裸的威佐夫博弈，难点就在于处理大数，由于a,b的值都特别大，所以在用公式计算的时候$\sqrt{5}$的精度必须要保证，否则与如此大的数相乘以后产生的误差是非常可怕的。</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">BigDecimal one = <span class="keyword">new</span> BigDecimal(<span class="number">1</span>);</span><br><span class="line">BigDecimal two = <span class="keyword">new</span> BigDecimal(<span class="number">2</span>);</span><br><span class="line">BigDecimal three = <span class="keyword">new</span> BigDecimal(<span class="number">3</span>);</span><br><span class="line">BigDecimal five = <span class="keyword">new</span> BigDecimal(<span class="number">5</span>);</span><br><span class="line">BigDecimal l = <span class="keyword">new</span> BigDecimal(<span class="number">2</span>);</span><br><span class="line">BigDecimal r = <span class="keyword">new</span> BigDecimal(<span class="number">3</span>);</span><br><span class="line">BigDecimal a = <span class="keyword">new</span> BigDecimal(<span class="number">1</span>);</span><br><span class="line">BigDecimal b = <span class="keyword">new</span> BigDecimal(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 求出足够精度</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">666</span>;i++)&#123;</span><br><span class="line">BigDecimal mid = l.add(r).divide(two);</span><br><span class="line"><span class="keyword">if</span>(mid.multiply(mid).compareTo(five) &lt; <span class="number">0</span>)&#123;</span><br><span class="line">l = mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">r = mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">l = l.add(one).divide(two);</span><br><span class="line"><span class="comment">// System.out.println(l);</span></span><br><span class="line"><span class="keyword">while</span>(in.hasNext())&#123;</span><br><span class="line">a = in.nextBigDecimal();</span><br><span class="line">b = in.nextBigDecimal();</span><br><span class="line"><span class="keyword">if</span>(a.compareTo(b) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">BigDecimal tmp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = tmp;</span><br><span class="line">&#125;</span><br><span class="line">            <span class="comment">// 向下取整</span></span><br><span class="line">a = a.setScale(<span class="number">0</span>, BigDecimal.ROUND_DOWN);</span><br><span class="line">b = b.subtract(a).multiply(l);</span><br><span class="line">b = b.setScale(<span class="number">0</span>, BigDecimal.ROUND_DOWN);</span><br><span class="line"><span class="keyword">if</span>(b.compareTo(a) == <span class="number">0</span>)&#123;</span><br><span class="line">System.out.println(<span class="string">"0"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">System.out.println(<span class="string">"1"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">in.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;传送门：&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=5973&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我是传送门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Two people face two piles of stones and make a game. They take turns to take stones. As game rules, there are two different methods of taking stones: One scheme is that you can take any number of stones in any one pile while the alternative is to take the same amount of stones at the same time in two piles. In the end, the first person taking all the stones is winner.Now,giving the initial number of two stones, can you win this game if you are the first to take stones and both sides have taken the best strategy?&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="博弈论" scheme="http://www.duny31030.top/categories/%E5%8D%9A%E5%BC%88%E8%AE%BA/"/>
    
    
      <category term="ICPC&amp;&amp;CCPC" scheme="http://www.duny31030.top/tags/ICPC-CCPC/"/>
    
      <category term="大数" scheme="http://www.duny31030.top/tags/%E5%A4%A7%E6%95%B0/"/>
    
      <category term="高精度" scheme="http://www.duny31030.top/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    
      <category term="威佐夫博弈" scheme="http://www.duny31030.top/tags/%E5%A8%81%E4%BD%90%E5%A4%AB%E5%8D%9A%E5%BC%88/"/>
    
  </entry>
  
  <entry>
    <title>「The 13th Zhejiang Provincial」 D. The Lucky Week</title>
    <link href="http://www.duny31030.top/2018/10/24/The%2013th%20Zhejiang%20Provincial-D/"/>
    <id>http://www.duny31030.top/2018/10/24/The 13th Zhejiang Provincial-D/</id>
    <published>2018-10-24T08:18:26.000Z</published>
    <updated>2019-10-16T17:20:45.809Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=3939" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>Edward, the headmaster of the Marjar University, is very busy every day and always forgets the date. </p><p>There was one day Edward suddenly found that if Monday was the 1st, 11th or 21st day of that month, he could remember the date clearly in that week. Therefore, he called such week “The Lucky Week”.</p><p>But now Edward only remembers the date of his first Lucky Week because of the age-related memory loss, and he wants to know the date of the N-th Lucky Week. Can you help him? </p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>There are multiple test cases. The first line of input is an integer T indicating the number of test cases. For each test case:</p><p>The only line contains four integers Y, M, D and N (1 ≤ N ≤ 109) indicating the date (Y: year, M: month, D: day) of the Monday of the first Lucky Week and the Edward’s query N.</p><p>The Monday of the first Lucky Week is between 1st Jan, 1753 and 31st Dec, 9999 (inclusive).</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each case, print the date of the Monday of the N-th Lucky Week.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>2<br>2016 4 11 2<br>2016 1 11 10</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>2016 7 11<br>2017 9 11</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><ul><li>蔡勒公式</li><li>日期每400年是一次循环</li></ul></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  zoj3939.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=3939</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/10/23 20时21分02秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> Y,M,D,N,t;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">whatday</span><span class="params">(<span class="keyword">int</span> d,<span class="keyword">int</span> m,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans;</span><br><span class="line">    <span class="keyword">if</span>(m &lt; <span class="number">3</span>)</span><br><span class="line">        m += <span class="number">12</span>,y--;</span><br><span class="line">    ans = (d+<span class="number">2</span>*m+<span class="number">3</span>*(m+<span class="number">1</span>)/<span class="number">5</span>+y+y/<span class="number">4</span>-y/<span class="number">100</span>+y/<span class="number">400</span>)%<span class="number">7</span>;</span><br><span class="line">    <span class="keyword">return</span> ans+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> y,m,d,id;</span><br><span class="line">    node(<span class="keyword">int</span> y = <span class="number">0</span>,<span class="keyword">int</span> m = <span class="number">0</span>,<span class="keyword">int</span> d = <span class="number">0</span>,<span class="keyword">int</span> id = <span class="number">0</span>):y(y),m(m),d(d),id(id)&#123;&#125;</span><br><span class="line">&#125;p[<span class="number">20100</span>];</span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1753</span>;i &lt;= <span class="number">1753</span>+<span class="number">399</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= <span class="number">12</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(whatday(<span class="number">1</span>,j,i) == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                p[tot] = node(i,j,<span class="number">1</span>,tot);</span><br><span class="line">                tot++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(whatday(<span class="number">11</span>,j,i) == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                p[tot] = node(i,j,<span class="number">11</span>,tot);</span><br><span class="line">                tot++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(whatday(<span class="number">21</span>,j,i) == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                p[tot] = node(i,j,<span class="number">21</span>,tot);</span><br><span class="line">                tot++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> </span></span><br><span class="line">    init();</span><br><span class="line">    tot--;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>,&amp;Y,&amp;M,&amp;D,&amp;N);</span><br><span class="line">        N--;</span><br><span class="line">        <span class="comment">// 有多少个400年</span></span><br><span class="line">        <span class="keyword">int</span> ind = N/tot;</span><br><span class="line">        <span class="keyword">int</span> tmp = N%tot;</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(Y &gt;= <span class="number">2153</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            flag++;</span><br><span class="line">            Y -= <span class="number">400</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> yy = <span class="number">0</span>,mm = <span class="number">0</span>,dd = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= tot;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((Y == p[i].y) &amp;&amp; (M == p[i].m) &amp;&amp; (D == p[i].d))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> temp = p[i].id;</span><br><span class="line">                temp += tmp;</span><br><span class="line">                <span class="keyword">while</span>(temp &gt; tot)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag++;</span><br><span class="line">                    temp -= tot;</span><br><span class="line">                &#125;</span><br><span class="line">                yy = p[temp].y;</span><br><span class="line">                mm = p[temp].m;</span><br><span class="line">                dd = p[temp].d;</span><br><span class="line">                yy += flag*<span class="number">400</span>;</span><br><span class="line">                yy += ind*<span class="number">400</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,yy,mm,dd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line"><span class="comment">//     fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;传送门：&lt;a href=&quot;http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=3939&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我是传送门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Edward, the headmaster of the Marjar University, is very busy every day and always forgets the date. &lt;/p&gt;
&lt;p&gt;There was one day Edward suddenly found that if Monday was the 1st, 11th or 21st day of that month, he could remember the date clearly in that week. Therefore, he called such week “The Lucky Week”.&lt;/p&gt;
&lt;p&gt;But now Edward only remembers the date of his first Lucky Week because of the age-related memory loss, and he wants to know the date of the N-th Lucky Week. Can you help him? &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="数论" scheme="http://www.duny31030.top/categories/%E6%95%B0%E8%AE%BA/"/>
    
    
      <category term="思维" scheme="http://www.duny31030.top/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="ICPC&amp;&amp;CCPC" scheme="http://www.duny31030.top/tags/ICPC-CCPC/"/>
    
      <category term="暴力" scheme="http://www.duny31030.top/tags/%E6%9A%B4%E5%8A%9B/"/>
    
      <category term="循环节" scheme="http://www.duny31030.top/tags/%E5%BE%AA%E7%8E%AF%E8%8A%82/"/>
    
  </entry>
  
  <entry>
    <title>「The 15th Zhejiang Provincial」F.Now Loading!!!(数论+二分)</title>
    <link href="http://www.duny31030.top/2018/10/23/The%2015th%20Zhejiang%20Provincial-F/"/>
    <id>http://www.duny31030.top/2018/10/23/The 15th Zhejiang Provincial-F/</id>
    <published>2018-10-23T10:24:48.000Z</published>
    <updated>2019-10-16T17:20:52.835Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=4029" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>DreamGrid has $n$ integers $a_1,a_2,\dots,a_n$. DreamGrid also has $m$ queries, and each time he would like to know the value of</p><script type="math/tex; mode=display">\sum\limits_{1 \le i \le n}\Bigl\lfloor \frac{a_i}{\lceil\log_{p}a_i\rceil}\Bigr\rfloor</script><p>for a given number $p$, where $\lfloor x \rfloor = \max{y \in \mathbb{Z} \mid y \le x}$, $\lceil x \rceil = \min{y \in \mathbb{Z} \mid y \ge x}$.</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>There are multiple test cases. The first line of input is an integer $T$ indicating the number of test cases. For each test case:</p><p>The first line contains two integers $n$ and $m$ ($1 \le n, m \le 5 \times 10^5$) — the number of integers and the number of queries.</p><p>The second line contains $n$ integers $a_1, a_2, \dots, a_n$ ($2 \le a_i \le 10^{9}$).</p><p>The third line contains $m$ integers $p_1, p_2, \dots, p_m$ ($2 \le p_i \le 10^{9}$).</p><p>It is guaranteed that neither the sum of all $n$ nor the sum of all $m$ exceeds $2 \times 10^6$.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test case, output an integer $(\sum\limits_{i=1}^{m} i \cdot z_i) \bmod 10^9$, where $z_i$ is the answer for the $i$-th query.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>2<br>3 2<br>100 1000 10000<br>100 10<br>4 5<br>2323 223 12312 3<br>1232 324 2 3 5</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>11366<br>45619</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>这道题的所有题解我全都看了一遍，基本思路大致搞明白，但是卡在最后的一句代码上</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ans = (ans+tmp*j)%mod;</span><br></pre></td></tr></table></figure><blockquote><p>最后我发现($*j$)是题目要求的，是时候换个<del>眼睛</del>脑子了😤</p><p>刚开始毫无头绪(现在看完别人的题解也是没有头绪···</p><p>现场赛之前再回头看一下这个题目吧，这次不写题解了，我现在也实在写不出了来几句···</p><p>另外，<font color="red">为什么ZOJ爆内存提示段错误？？？？</font></p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  zoj4029.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=4029</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/10/22 21时11分39秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e5</span>+<span class="number">100</span>;</span><br><span class="line">ll a[N];</span><br><span class="line">ll t,n,m,x;</span><br><span class="line">ll sum[N][<span class="number">32</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.对于每一次询问p，枚举分母 i 时，可以找出a中分母等于 i 的那一段</span></span><br><span class="line"><span class="comment">// 预处理前缀和，用于此时直接加。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;n,&amp;m);</span><br><span class="line">        rep(i,<span class="number">1</span>,n)  <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">        <span class="comment">// rep(i,1,m)  scanf("%d",&amp;p[i]);</span></span><br><span class="line">        sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">        <span class="comment">// rep(i,1,n)  printf("%lld ",a[i]);   printf("\n");</span></span><br><span class="line">        <span class="comment">// 打表预处理</span></span><br><span class="line">        <span class="keyword">for</span>(ll k = <span class="number">1</span>;k &lt;= <span class="number">30</span>;k++)</span><br><span class="line">            <span class="keyword">for</span>(ll i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">                sum[i][k] = sum[i<span class="number">-1</span>][k]+a[i]/k;</span><br><span class="line">        </span><br><span class="line">        ll ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll j = <span class="number">1</span>;j &lt;= m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;x);</span><br><span class="line">            ll pos;</span><br><span class="line">            ll up = x;</span><br><span class="line">            ll k = <span class="number">1</span>;</span><br><span class="line">            ll tmp = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(ll i = <span class="number">1</span>;i &lt;= n;i = pos+<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// printf("up = %lld\n",up);</span></span><br><span class="line">                pos = i<span class="number">-1</span>;</span><br><span class="line">                ll l = i,r = n;</span><br><span class="line">                <span class="keyword">while</span>(l &lt;= r)</span><br><span class="line">                &#123;</span><br><span class="line">                    ll mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">if</span>(a[mid] &lt;= up)</span><br><span class="line">                    &#123;</span><br><span class="line">                        pos = mid;</span><br><span class="line">                        l = mid+<span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> </span><br><span class="line">                        r = mid<span class="number">-1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                tmp = (tmp+sum[pos][k]-sum[i<span class="number">-1</span>][k]+mod)%mod;</span><br><span class="line">                k++;</span><br><span class="line">                up *= x;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//// printf("tmp = %lld j = %lld tmp*j = %lld ans = %lld\n",tmp,j,tmp*j,ans+tmp*j);</span></span><br><span class="line">            ans = (ans+tmp*j)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;传送门：&lt;a href=&quot;http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=4029&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我是传送门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DreamGrid has $n$ integers $a_1,a_2,\dots,a_n$. DreamGrid also has $m$ queries, and each time he would like to know the value of&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;\sum\limits_{1 \le i \le n}\Bigl\lfloor \frac{a_i}{\lceil\log_{p}a_i\rceil}\Bigr\rfloor&lt;/script&gt;&lt;p&gt;for a given number $p$, where $\lfloor x \rfloor = \max{y \in \mathbb{Z} \mid y \le x}$, $\lceil x \rceil = \min{y \in \mathbb{Z} \mid y \ge x}$.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="数论" scheme="http://www.duny31030.top/categories/%E6%95%B0%E8%AE%BA/"/>
    
    
      <category term="ICPC&amp;&amp;CCPC" scheme="http://www.duny31030.top/tags/ICPC-CCPC/"/>
    
      <category term="二分" scheme="http://www.duny31030.top/tags/%E4%BA%8C%E5%88%86/"/>
    
      <category term="数论" scheme="http://www.duny31030.top/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="预处理" scheme="http://www.duny31030.top/tags/%E9%A2%84%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>牛客暑期多校第二场 J.farm</title>
    <link href="http://www.duny31030.top/2018/10/21/Nowcoder-Summer-J-farm/"/>
    <id>http://www.duny31030.top/2018/10/21/Nowcoder-Summer-J-farm/</id>
    <published>2018-10-21T12:27:33.000Z</published>
    <updated>2019-10-16T17:18:24.372Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="https://www.nowcoder.com/acm/contest/140/J" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>White Rabbit has a rectangular farmland of n*m. In each of the grid there is a kind of plant. The plant in the j-th column of the i-th row belongs the a[i][j]-th type.<br>White Cloud wants to help White Rabbit fertilize plants, but the i-th plant can only adapt to the i-th fertilizer. If the j-th fertilizer is applied to the i-th plant (i!=j), the plant will immediately die.<br>Now White Cloud plans to apply fertilizers T times. In the i-th plan, White Cloud will use k[i]-th fertilizer to fertilize all the plants in a rectangle (x1[i]…x2[i])(y1[i]…y2[i]).<br>White rabbits wants to know how many plants would eventually die if they were to be fertilized according to the expected schedule of White Cloud.</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The first line of input contains 3 integers n,m,T(n<em>m&lt;=1000000,T&lt;=1000000)<br>For the next n lines, each line contains m integers in range[1,n</em>m] denoting the type of plant in each grid.<br>For the next T lines, the i-th line contains 5 integers x1,y1,x2,y2,k(1&lt;=x1&lt;=x2&lt;=n,1&lt;=y1&lt;=y2&lt;=m,1&lt;=k&lt;=n*m)</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>Print an integer, denoting the number of plants which would die.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>2 2 2<br>1 2<br>2 3<br>1 1 2 2 2<br>2 1 2 1 1</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>3</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p><a href="https://blog.csdn.net/weixin_41156591/article/details/81150890" target="_blank" rel="noopener">牛客网暑期ACM多校训练营(第二场)J.farm (随机数+二维树状数组)</a></p><p>之前一直想补这个题目，但是当时没看明白题解（主要是没明白大家说的随机是什么意思</p><p>今天回头补题的时候看到了这个博客，感觉写的很好，豁然开朗</p><p>PS:</p><font color="red">注意在牛客提交的时候选择C++11</font><p>我的<a href="http://duny31030.top/2018/09/04/Binary-Indexed-Tree/" target="_blank" rel="noopener">二维树状数组模板</a></p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ===============================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  J.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  https://www.nowcoder.com/acm/contest/140/J</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/10/21 19时50分25秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> t,n,m,x,x11,y11,x22,y22;</span><br><span class="line"><span class="built_in">vector</span>&lt;ll&gt; tree[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;ll&gt; mp[N];</span><br><span class="line">ll has[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    srand(time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; N<span class="number">-5</span>;i++)</span><br><span class="line">        has[i] = (ll)rand()*<span class="number">1e6</span>+rand()*rand();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,ll z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> memy_y = y;</span><br><span class="line">    <span class="keyword">while</span>(x &lt;= n)</span><br><span class="line">    &#123;</span><br><span class="line">        y = memy_y;</span><br><span class="line">        <span class="keyword">while</span>(y &lt;= m)</span><br><span class="line">            tree[x][y] += z,y += y&amp;(-y);</span><br><span class="line">        x += x&amp;(-x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">range_add</span><span class="params">(<span class="keyword">int</span> xa,<span class="keyword">int</span> ya,<span class="keyword">int</span> xb,<span class="keyword">int</span> yb,ll z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    add(xa,ya,z);</span><br><span class="line">    add(xa,yb+<span class="number">1</span>,-z);</span><br><span class="line">    add(xb+<span class="number">1</span>,ya,-z);</span><br><span class="line">    add(xb+<span class="number">1</span>,yb+<span class="number">1</span>,z);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">ask</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>,memy_y = y;</span><br><span class="line">    <span class="keyword">while</span>(x)</span><br><span class="line">    &#123;</span><br><span class="line">        y = memy_y;</span><br><span class="line">        <span class="keyword">while</span>(y)</span><br><span class="line">            res += tree[x][y],y -= y&amp;(-y);</span><br><span class="line">        x -= x&amp;(-x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;n,&amp;m,&amp;t);</span><br><span class="line">    init();</span><br><span class="line">    rep(i,<span class="number">1</span>,n)</span><br><span class="line">    &#123;</span><br><span class="line">        mp[i].push_back(<span class="number">0</span>);</span><br><span class="line">        tree[i].push_back(<span class="number">0</span>);</span><br><span class="line">        rep(j,<span class="number">1</span>,m)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">            mp[i].push_back(has[x]);</span><br><span class="line">            tree[i].push_back(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">0</span>,xx;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d %lld"</span>,&amp;x11,&amp;y11,&amp;x22,&amp;y22,&amp;xx);</span><br><span class="line">        range_add(x11,y11,x22,y22,has[xx]);</span><br><span class="line">    &#125;</span><br><span class="line">    rep(i,<span class="number">1</span>,n)</span><br><span class="line">        rep(j,<span class="number">1</span>,m)</span><br><span class="line">            <span class="keyword">if</span>(ask(i,j) % mp[i][j])</span><br><span class="line">                ans++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;传送门：&lt;a href=&quot;https://www.nowcoder.com/acm/contest/140/J&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我是传送门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;White Rabbit has a rectangular farmland of n*m. In each of the grid there is a kind of plant. The plant in the j-th column of the i-th row belongs the a[i][j]-th type.&lt;br&gt;White Cloud wants to help White Rabbit fertilize plants, but the i-th plant can only adapt to the i-th fertilizer. If the j-th fertilizer is applied to the i-th plant (i!=j), the plant will immediately die.&lt;br&gt;Now White Cloud plans to apply fertilizers T times. In the i-th plan, White Cloud will use k[i]-th fertilizer to fertilize all the plants in a rectangle (x1[i]…x2[i])(y1[i]…y2[i]).&lt;br&gt;White rabbits wants to know how many plants would eventually die if they were to be fertilized according to the expected schedule of White Cloud.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="数据结构" scheme="http://www.duny31030.top/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="二维树状数组" scheme="http://www.duny31030.top/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BA%8C%E7%BB%B4%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
    
      <category term="思维" scheme="http://www.duny31030.top/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="树状数组" scheme="http://www.duny31030.top/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
      <category term="随机" scheme="http://www.duny31030.top/tags/%E9%9A%8F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>「The 14th Zhejiang Provincial」 C.What Kind of Friends Are You?</title>
    <link href="http://www.duny31030.top/2018/10/21/The-14th-Zhejiang-Provincial-C/"/>
    <id>http://www.duny31030.top/2018/10/21/The-14th-Zhejiang-Provincial-C/</id>
    <published>2018-10-21T01:56:26.000Z</published>
    <updated>2019-10-16T17:21:06.103Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=3960" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>Japari Park is a large zoo home to extant species, endangered species, extinct species, cryptids and some legendary creatures. Due to a mysterious substance known as <em>Sandstar</em>, all the animals have become anthropomorphized into girls known as <em>Friends</em>.</p><p>Kaban is a young girl who finds herself in Japari Park with no memory of who she was or where she came from. Shy yet resourceful, she travels through Japari Park along with Serval to find out her identity while encountering more <em>Friends</em> along the way, and eventually discovers that she is a human.</p><p>However, Kaban soon finds that it’s also important to identify other <em>Friends</em>. Her friend, Serval, enlightens Kaban that she can use some questions whose expected answers are either “yes” or “no” to identitfy a kind of <em>Friends</em>.</p><p>To be more specific, there are n <em>Friends</em> need to be identified. Kaban will ask each of them q same questions and collect their answers. For each question, she also gets a full list of animals’ names that will give a “yes” answer to that question (and those animals who are not in the list will give a “no” answer to that question), so it’s possible to determine the name of a <em>Friends</em> by combining the answers and the lists together.</p><p>But the work is too heavy for Kaban. Can you help her to finish it?</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>There are multiple test cases. The first line of the input is an integer T (1 ≤ T ≤ 100), indicating the number of test cases. Then T test cases follow.</p><p>The first line of each test case contains two integers n (1 ≤ n ≤ 100) and q (1 ≤ q ≤ 21), indicating the number of <em>Friends</em> need to be identified and the number of questions.</p><p>The next line contains an integer c (1 ≤ c ≤ 200) followed by c strings p1, p2, … , pc (1 ≤ |pi| ≤ 20), indicating all known names of <em>Friends</em>.</p><p>For the next q lines, the i-th line contains an integer mi (0 ≤ mi ≤ c) followed by mi strings si, 1, si, 2, … , si, mi (1 ≤ |si, j| ≤ 20), indicating the number of <em>Friends</em> and their names, who will give a “yes” answer to the i-th question. It’s guaranteed that all the names appear in the known names of <em>Friends</em>.</p><p>For the following n lines, the i-th line contains q integers ai, 1, ai, 2, … , ai, q (0 ≤ ai, j ≤ 1), indicating the answer (0 means “no”, and 1 means “yes”) to the j-th question given by the i-th <em>Friends</em> need to be identified.</p><p>It’s guaranteed that all the names in the input consist of only uppercase and lowercase English letters.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test case output n lines. If Kaban can determine the name of the i-th <em>Friends</em> need to be identified, print the name on the i-th line. Otherwise, print “Let’s go to the library!!” (without quotes) on the i-th line instead.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>2<br>3 4<br>5 Serval Raccoon Fennec Alpaca Moose<br>4 Serval Raccoon Alpaca Moose<br>1 Serval<br>1 Fennec<br>1 Serval<br>1 1 0 1<br>0 0 0 0<br>1 0 0 0<br>5 5<br>11 A B C D E F G H I J K<br>3 A B K<br>4 A B D E<br>5 A B K D E<br>10 A B K D E F G H I J<br>4 B D E K<br>0 0 1 1 1<br>1 0 1 0 1<br>1 1 1 1 1<br>0 0 1 0 1<br>1 0 1 1 1</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>Serval<br>Let’s go to the library!!<br>Let’s go to the library!!<br>Let’s go to the library!!<br>Let’s go to the library!!<br>B<br>Let’s go to the library!!<br>K</p></blockquote><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><blockquote><p>The explanation for the first sample test case is given as follows:</p><p>As Serval is the only known animal who gives a “yes” answer to the 1st, 2nd and 4th question, and gives a “no” answer to the 3rd question, we output “Serval” (without quotes) on the first line.</p><p>As no animal is known to give a “no” answer to all the questions, we output “Let’s go to the library!!” (without quotes) on the second line.</p><p>Both Alpaca and Moose give a “yes” answer to the 1st question, and a “no” answer to the 2nd, 3rd and 4th question. So we can’t determine the name of the third Friends need to be identified, and output “Let’s go to the library!!” (without quotes) on the third line.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>题面真是又臭又长，直接读样例看明白的题意</p><p>队友一开始思路错了告诉我搞个矩阵，我又错误的理解了他的意思，想了想觉得可行，于是就调了好久的BUG以后得到了正确的答案2333333333</p><p>赛后在网络上搜了一些其他人的题解，简单打开了两个，有用二进制的，还有用哈希的，也有用状态压缩的，似乎我这种解法是独一家，23333333</p><p>提交的时候忘记删除freopen()导致得到了两发re，删除后得到了一个1000ms的AC，差点没笑死我。但是我刚才又试着提交了一下变成了350msAC了，看来zoj的评测机也有点迷。。。</p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-10-21/57008020.jpg" alt="1000msAC"></p><p>我的解法其实不难理解，以第二个样例为例，我们首先用map来建立一个映射，map[string] = i;表示string这个单词是第i次出现的</p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-10-21/83911264.jpg" alt="string"></p><p>然后在输入的时候进行处理，处理完以后应该是一个qxc的矩阵</p><p>1表示在这个人这里有这个string，0表示没有</p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-10-21/45513052.jpg" alt="矩阵"></p><p>接下来我们便可以用上边这个qxc的矩阵的每一<font color="red">列</font>来与下图中的每一<font color="red">行</font>进行对比</p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-10-21/69705968.jpg" alt="n"></p><p>如果我们可以找到唯一匹配的，比如下图中的最后一行（1，0，1，1，1）便与矩阵第k列是唯一匹配的，这时我们可以输出k，其他情况输出”Let’s go to the library!!”。</p><p>输出的时候我们可以用string[]将一开始所有string都存储起来，然后匹配的时候记录一下下标，便可以很方便的直接输出string[下标];</p></blockquote><div class="note danger"><p>时间原因写的比较乱，不过大体思路是这样的，具体细节看代码吧</p><p>在删除我一开始写的乱七八糟的调试以后代码倒是并不算很长</p></div><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> s,s1[<span class="number">310</span>];</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>,<span class="keyword">int</span>&gt; m;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">310</span>][<span class="number">310</span>];</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">310</span>][<span class="number">310</span>];</span><br><span class="line"><span class="keyword">int</span> t,n,q,c,te;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调试时用的函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"----------------------\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= q;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= c;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"----------------------\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span> a);</span><br><span class="line"><span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span> b);</span><br><span class="line">        m.clear();</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; q;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; c;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= c;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; s1[i];</span><br><span class="line">            m[s1[i]] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= q;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; te;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= te;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">                a[i][m[s]] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= q;j++)</span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; b[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> p = <span class="number">0</span>,tim = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// tim变量用来记录匹配的次数，只有唯一匹配才是有效的</span></span><br><span class="line">tim = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= c;j++)</span><br><span class="line">            &#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>;k &lt;= q;k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(a[k][j] != b[i][k])</span><br><span class="line">                        flag = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(flag == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// 变量p来记录下标</span></span><br><span class="line">                    p = j;</span><br><span class="line">tim++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(p != <span class="number">0</span> &amp;&amp; tim == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; s1[p] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"Let's go to the library!!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            p = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;传送门：&lt;a href=&quot;http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=3960&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我是传送门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Japari Park is a large zoo home to extant species, endangered species, extinct species, cryptids and some legendary creatures. Due to a mysterious substance known as &lt;em&gt;Sandstar&lt;/em&gt;, all the animals have become anthropomorphized into girls known as &lt;em&gt;Friends&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Kaban is a young girl who finds herself in Japari Park with no memory of who she was or where she came from. Shy yet resourceful, she travels through Japari Park along with Serval to find out her identity while encountering more &lt;em&gt;Friends&lt;/em&gt; along the way, and eventually discovers that she is a human.&lt;/p&gt;
&lt;p&gt;However, Kaban soon finds that it’s also important to identify other &lt;em&gt;Friends&lt;/em&gt;. Her friend, Serval, enlightens Kaban that she can use some questions whose expected answers are either “yes” or “no” to identitfy a kind of &lt;em&gt;Friends&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;To be more specific, there are n &lt;em&gt;Friends&lt;/em&gt; need to be identified. Kaban will ask each of them q same questions and collect their answers. For each question, she also gets a full list of animals’ names that will give a “yes” answer to that question (and those animals who are not in the list will give a “no” answer to that question), so it’s possible to determine the name of a &lt;em&gt;Friends&lt;/em&gt; by combining the answers and the lists together.&lt;/p&gt;
&lt;p&gt;But the work is too heavy for Kaban. Can you help her to finish it?&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="暴力" scheme="http://www.duny31030.top/categories/%E6%9A%B4%E5%8A%9B/"/>
    
    
      <category term="思维" scheme="http://www.duny31030.top/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="ICPC&amp;&amp;CCPC" scheme="http://www.duny31030.top/tags/ICPC-CCPC/"/>
    
      <category term="暴力" scheme="http://www.duny31030.top/tags/%E6%9A%B4%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>「ACM Dalian Online 2016」H.Function（二分+RMQ）</title>
    <link href="http://www.duny31030.top/2018/10/09/ACM-Dalian-Online-2016/"/>
    <id>http://www.duny31030.top/2018/10/09/ACM-Dalian-Online-2016/</id>
    <published>2018-10-09T08:56:29.000Z</published>
    <updated>2019-10-16T17:13:25.227Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5875" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>The shorter, the simpler. With this problem, you should be convinced of this truth.</p><p> You are given an array A of N postive integers, and M queries in the form (l,r). A function F(l,r) (1≤l≤r≤N) is defined as:</p><p><img src="http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-10-9/83185798.jpg" alt="g"></p><p>You job is to calculate F(l,r), for each query (l,r).</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>There are multiple test cases.</p><p> The first line of input contains a integer $T$, indicating number of test cases, and $T$ test cases follow. </p><p> For each test case, the first line contains an integer $N(1≤N≤100000)$.<br> The second line contains $N$ space-separated positive integers: $A_1,…,A_N$ $(0≤A_i≤10^9)$.<br> The third line contains an integer $M$ denoting the number of queries.<br> The following $M$ lines each contain two integers $l,r (1≤l≤r≤N)$, representing a query.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each query$(l,r)$, output $F(l,r)$ on one line.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>1<br>3<br>2 3 3<br>1<br>1 3</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>2</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>一个数比它大的数没有意义，比如10%100、20%30···</p><p>每次二分的找到右侧第一个比他小的就好了</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  hdu5875.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.hdu.edu.cn/showproblem.php?pid=5875</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/10/09 10时30分42秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100050</span>;</span><br><span class="line"><span class="keyword">int</span> n,q,t,a,x,y;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="keyword">int</span> dp_min[N][<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RMQ_init</span><span class="params">(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; A)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        dp_min[i][<span class="number">0</span>] = A[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;(<span class="number">1</span> &lt;&lt; j) &lt;= n;j++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i + (<span class="number">1</span> &lt;&lt; j) - <span class="number">1</span> &lt; n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            dp_min[i][j] = min(dp_min[i][j<span class="number">-1</span>],dp_min[i+(<span class="number">1</span> &lt;&lt; (j<span class="number">-1</span>))][j<span class="number">-1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">RMQ_min</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>((<span class="number">1</span> &lt;&lt; (k+<span class="number">1</span>)) &lt;= (R-L+<span class="number">1</span>))   <span class="comment">// 如果2^(k+1) &lt;= R-L+1,那么k还可以加1</span></span><br><span class="line">    &#123;    </span><br><span class="line">        k++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; "min = " &lt;&lt; min(dp_min[L][k],dp_min[R-(1 &lt;&lt; k)+1][k]) &lt;&lt; endl;</span></span><br><span class="line">    <span class="keyword">return</span> min(dp_min[L][k],dp_min[R-(<span class="number">1</span> &lt;&lt; k)+<span class="number">1</span>][k]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        Q.clear();</span><br><span class="line">        clr(dp_min,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        rep(i,<span class="number">1</span>,n)  &#123;   <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a); Q.push_back(a); &#125;</span><br><span class="line">        RMQ_init(Q);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);</span><br><span class="line">        rep(i,<span class="number">1</span>,q)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;x,&amp;y);</span><br><span class="line">            x--,y--;</span><br><span class="line">            <span class="keyword">int</span> tmp = Q[x];</span><br><span class="line">            <span class="keyword">if</span>(x == y)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Q[x]);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            x++;</span><br><span class="line">            <span class="keyword">while</span>(x &lt;= y)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> L= x,R = y;</span><br><span class="line">                <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span>(L &lt; R)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> mid = (L+R) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">if</span>(RMQ_min(L,mid) &lt;= tmp)</span><br><span class="line">                        R = mid;</span><br><span class="line">                    <span class="keyword">else</span> </span><br><span class="line">                        <span class="keyword">if</span>(RMQ_min(mid+<span class="number">1</span>,R) &lt;= tmp)</span><br><span class="line">                            L = mid+<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">else</span> </span><br><span class="line">                        &#123;</span><br><span class="line">                            flag = <span class="number">1</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(flag)    <span class="keyword">break</span>;</span><br><span class="line">                tmp %= Q[L];</span><br><span class="line">                x = L+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,tmp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;传送门：&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=5875&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我是传送门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The shorter, the simpler. With this problem, you should be convinced of this truth.&lt;/p&gt;
&lt;p&gt; You are given an array A of N postive integers, and M queries in the form (l,r). A function F(l,r) (1≤l≤r≤N) is defined as:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jiantu-blog.oss-cn-beijing.aliyuncs.com/18-10-9/83185798.jpg&quot; alt=&quot;g&quot;&gt;&lt;/p&gt;
&lt;p&gt;You job is to calculate F(l,r), for each query (l,r).&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="数据结构" scheme="http://www.duny31030.top/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="RMQ" scheme="http://www.duny31030.top/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/RMQ/"/>
    
    
      <category term="ICPC&amp;&amp;CCPC" scheme="http://www.duny31030.top/tags/ICPC-CCPC/"/>
    
      <category term="RMQ" scheme="http://www.duny31030.top/tags/RMQ/"/>
    
      <category term="二分" scheme="http://www.duny31030.top/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>「ACM Dalian Onsite 2016」A.Wrestling Match(判断二分图)</title>
    <link href="http://www.duny31030.top/2018/10/07/ACM-Dalian-Onsite-2016-A/"/>
    <id>http://www.duny31030.top/2018/10/07/ACM-Dalian-Onsite-2016-A/</id>
    <published>2018-10-07T12:57:44.000Z</published>
    <updated>2019-10-16T17:13:31.121Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5971" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>Nowadays, at least one wrestling match is held every year in our country. There are a lot of people in the game is “good player”, the rest is “bad player”. Now, Xiao Ming is referee of the wrestling match and he has a list of the matches in his hand. At the same time, he knows some people are good players,some are bad players. He believes that every game is a battle between the good and the bad player. Now he wants to know whether all the people can be divided into “good player” and “bad player”.</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>Input contains multiple sets of data.For each set of data,there are four numbers in the first line:N (1 ≤ N≤ 1000)、M(1 ≤M ≤ 10000)、X,Y(X+Y≤N ),in order to show the number of players(numbered 1toN ),the number of matches,the number of known “good players” and the number of known “bad players”.In the next M lines,Each line has two numbersa, b(a≠b) ,said there is a game between a and b .The next line has X different numbers.Each number is known as a “good player” number.The last line contains Y different numbers.Each number represents a known “bad player” number.Data guarantees there will not be a player number is a good player and also a bad player.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>If all the people can be divided into “good players” and “bad players”, output “YES”, otherwise output “NO”.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>5 4 0 0<br>1 3<br>1 4<br>3 5<br>4 5<br>5 4 1 0<br>1 3<br>1 4<br>3 5<br>4 5<br>2</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>NO<br>YES</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>可以抽象为两个对立的阵营（good and bed）</p><p>抽象为二分图，用染色法判断，如果不是二分图则一定有矛盾的地方，输出‘NO’</p><p>再判断一下已确定的X与Y个队伍</p><p>具体见代码</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,x,y,u,v;</span><br><span class="line"><span class="keyword">int</span> color[N];</span><br><span class="line"><span class="keyword">int</span> e[N][N];</span><br><span class="line"><span class="keyword">int</span> a[N],b[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; m1,m2;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.push(s);</span><br><span class="line">    color[s] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> from = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(e[from][i] &amp;&amp; color[i] == <span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                q.push(i);</span><br><span class="line">                color[i] = !color[from];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(e[from][i] &amp;&amp; color[from] == color[i])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>,&amp;n,&amp;m,&amp;x,&amp;y) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> bo = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">memset</span>(e,<span class="number">0</span>,<span class="keyword">sizeof</span> e);</span><br><span class="line">        <span class="built_in">memset</span>(color,<span class="number">-1</span>,<span class="keyword">sizeof</span> color);</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span> vis);</span><br><span class="line">        m1.clear();</span><br><span class="line">        m2.clear();</span><br><span class="line">        <span class="keyword">int</span> st = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;u,&amp;v);</span><br><span class="line">            vis[u] = <span class="number">1</span>; vis[v] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(u &gt; v)   swap(u,v);</span><br><span class="line">            <span class="keyword">if</span>(u &lt; st)  st = u;</span><br><span class="line">            e[u][v] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= x;i++)&#123;   <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]); m1[a[i]] = <span class="number">1</span>;&#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= y;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b[i]);</span><br><span class="line">            <span class="keyword">if</span>(m1[b[i]])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">                bo = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                m2[b[i]] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;bo &amp;&amp; i &lt;= n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(m1[i] == <span class="number">0</span> &amp;&amp; m2[i] == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">                    bo = <span class="number">0</span>;</span><br><span class="line">                    <span class="comment">// return 0;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(bo &amp;&amp; check(st,n))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(x)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> flag = color[a[<span class="number">1</span>]];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;bo &amp;&amp; i &lt;= x;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(color[a[i]] != flag)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">                        bo = <span class="number">0</span>;</span><br><span class="line">                        <span class="comment">// return 0;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;bo &amp;&amp; i &lt;= y;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(color[b[i]] == flag)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">                        bo = <span class="number">0</span>;</span><br><span class="line">                        <span class="comment">// return 0;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(y)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> flag = color[b[<span class="number">1</span>]];</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;bo &amp;&amp; i &lt;= y;i++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(color[b[i]] != flag)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">                            bo = <span class="number">0</span>;</span><br><span class="line">                            <span class="comment">// return 0;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(bo)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(bo)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;传送门：&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=5971&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我是传送门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nowadays, at least one wrestling match is held every year in our country. There are a lot of people in the game is “good player”, the rest is “bad player”. Now, Xiao Ming is referee of the wrestling match and he has a list of the matches in his hand. At the same time, he knows some people are good players,some are bad players. He believes that every game is a battle between the good and the bad player. Now he wants to know whether all the people can be divided into “good player” and “bad player”.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="图论" scheme="http://www.duny31030.top/categories/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="二分图" scheme="http://www.duny31030.top/categories/%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
    
    
      <category term="ICPC&amp;&amp;CCPC" scheme="http://www.duny31030.top/tags/ICPC-CCPC/"/>
    
      <category term="二分图" scheme="http://www.duny31030.top/tags/%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Round #514 (Div. 2) B.Forgery</title>
    <link href="http://www.duny31030.top/2018/10/06/Codeforces-Round-514-Div-2-B-Forgery/"/>
    <id>http://www.duny31030.top/2018/10/06/Codeforces-Round-514-Div-2-B-Forgery/</id>
    <published>2018-10-06T12:18:42.000Z</published>
    <updated>2019-10-16T17:14:16.900Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://codeforces.com/contest/1059/problem/B" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>Student Andrey has been skipping physical education lessons for the whole term, and now he must somehow get a passing grade on this subject. Obviously, it is impossible to do this by legal means, but Andrey doesn’t give up. Having obtained an empty certificate from a local hospital, he is going to use his knowledge of local doctor’s handwriting to make a counterfeit certificate of illness. However, after writing most of the certificate, Andrey suddenly discovered that doctor’s signature is impossible to forge. Or is it?</p><a id="more"></a><p>For simplicity, the signature is represented as an n×mn×m grid, where every cell is either filled with ink or empty. Andrey’s pen can fill a $3×3$ square without its central cell if it is completely contained inside the grid, as shown below.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xxx</span><br><span class="line">x.x</span><br><span class="line">xxx</span><br></pre></td></tr></table></figure><blockquote><p>Determine whether is it possible to forge the signature on an empty $n×m$ grid.</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The first line of input contains two integers $n$ and $m$ ($3≤n,m≤1000$).</p><p>Then nn lines follow, each contains mm characters. Each of the characters is either ‘.’, representing an empty cell, or ‘#’, representing an ink filled cell.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>If Andrey can forge the signature, output “YES”. Otherwise output “NO”.</p><p>You can print each letter in any case (upper or lower).</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 3</span><br><span class="line">###</span><br><span class="line">#.#</span><br><span class="line">###</span><br></pre></td></tr></table></figure><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>YES</p></blockquote><h4 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 3</span><br><span class="line">###</span><br><span class="line">###</span><br><span class="line">###</span><br></pre></td></tr></table></figure><h4 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h4><blockquote><p>NO</p></blockquote><h4 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4 3</span><br><span class="line">###</span><br><span class="line">###</span><br><span class="line">###</span><br><span class="line">###</span><br></pre></td></tr></table></figure><h4 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h4><blockquote><p>YES</p></blockquote><h4 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5 7</span><br><span class="line">.......</span><br><span class="line">.#####.</span><br><span class="line">.#.#.#.</span><br><span class="line">.#####.</span><br><span class="line">.......</span><br></pre></td></tr></table></figure><h4 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h4><blockquote><p>YES</p></blockquote><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><p>&gt;</p><blockquote><p>In the first sample Andrey can paint the border of the square with the center in $(2,2)$.</p><p>In the second sample the signature is impossible to forge.</p><p>In the third sample Andrey can paint the borders of the squares with the centers in $(2,2)$ and $(3,2)$:</p><ol><li>we have a clear paper:</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">...</span><br></pre></td></tr></table></figure><blockquote><ol><li>use the pen with center at (2,2)(2,2).</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">###</span><br><span class="line">#.#</span><br><span class="line">###</span><br><span class="line">...</span><br></pre></td></tr></table></figure><blockquote><ol><li>use the pen with center at (3,2)(3,2).</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">###</span><br><span class="line">###</span><br><span class="line">###</span><br><span class="line">###</span><br></pre></td></tr></table></figure><blockquote><p>In the fourth sample Andrey can paint the borders of the squares with the centers in$ (3,3)$ and $(3,5)$.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>先扫一遍，不必管3x3小格子的中间位置是否空着，只要符合周围8个为’#’便在另一个数组总模拟的“盖章”；</p><p>最后对比一下新旧数组是否一致变好了</p></blockquote><div class="note danger"><p>也不知道自己昨晚是怎么回事，傻逼了，div.2第二题都写不出来了。以后cf还是要常打，这种题目要多练练。</p><p>ps：刚发现cf对’YES’跟’Yes’是不加区分的</p><p>下边的代码也能过</p></div><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">char</span> a[N][N];</span><br><span class="line"><span class="keyword">char</span> t[N][N];</span><br><span class="line"><span class="keyword">int</span> tx[] = &#123;<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> ty[] = &#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)   <span class="built_in">scanf</span>(<span class="string">"%s"</span>,a[i]+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">memset</span>(t,<span class="string">'.'</span>,<span class="keyword">sizeof</span> t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt; n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">2</span>;j &lt; m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">bool</span> flag = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; <span class="number">8</span>;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i+tx[k]][j+ty[k]] != <span class="string">'#'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; <span class="number">8</span>;k++)</span><br><span class="line">                    t[i+tx[k]][j+ty[k]] = <span class="string">'#'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i][j] != t[i][j])</span><br><span class="line">            &#123; </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;传送门：&lt;a href=&quot;http://codeforces.com/contest/1059/problem/B&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我是传送门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Student Andrey has been skipping physical education lessons for the whole term, and now he must somehow get a passing grade on this subject. Obviously, it is impossible to do this by legal means, but Andrey doesn’t give up. Having obtained an empty certificate from a local hospital, he is going to use his knowledge of local doctor’s handwriting to make a counterfeit certificate of illness. However, after writing most of the certificate, Andrey suddenly discovered that doctor’s signature is impossible to forge. Or is it?&lt;/p&gt;
    
    </summary>
    
      <category term="暴力" scheme="http://www.duny31030.top/categories/%E6%9A%B4%E5%8A%9B/"/>
    
      <category term="模拟" scheme="http://www.duny31030.top/categories/%E6%9A%B4%E5%8A%9B/%E6%A8%A1%E6%8B%9F/"/>
    
    
      <category term="模拟" scheme="http://www.duny31030.top/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="Codeforces" scheme="http://www.duny31030.top/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>「ACM Shenyang Onsite 2016」E.Counting Cliques(dfs暴力+优化)</title>
    <link href="http://www.duny31030.top/2018/10/05/ACM-Shenyang-Onsite-2016-E/"/>
    <id>http://www.duny31030.top/2018/10/05/ACM-Shenyang-Onsite-2016-E/</id>
    <published>2018-10-05T10:53:01.000Z</published>
    <updated>2019-10-16T17:13:42.086Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5952" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>A clique is a complete graph, in which there is an edge between every pair of the vertices. Given a graph with N vertices and M edges, your task is to count the number of cliques with a specific size S in the graph. </p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The first line is the number of test cases. For each test case, the first line contains 3 integers N,M and S (N ≤ 100,M ≤ 1000,2 ≤ S ≤ 10), each of the following M lines contains 2 integers u and v (1 ≤ u &lt; v ≤ N), which means there is an edge between vertices u and v. It is guaranteed that the maximum degree of the vertices is no larger than 20. </p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test case, output the number of cliques with size S in the graph.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>3<br>4 3 2<br>1 2<br>2 3<br>3 4<br>5 9 3<br>1 3<br>1 4<br>1 5<br>2 3<br>2 4<br>2 5<br>3 4<br>3 5<br>4 5<br>6 15 4<br>1 2<br>1 3<br>1 4<br>1 5<br>1 6<br>2 3<br>2 4<br>2 5<br>2 6<br>3 4<br>3 5<br>3 6<br>4 5<br>4 6<br>5 6</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>3<br>7<br>15</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>直接暴力搜索能求得正确答案，但是不优化的话肯定会超时。比赛结束我也没能优化出来…..</p><p>赛后看了看<a href="https://blog.csdn.net/eashion1994/article/details/53463259" target="_blank" rel="noopener">EaShion1994的题解</a>才过。最主要的地方还是在其中的2、5两点我没能想到。优化过后便AC了，用了1400+ms</p></blockquote><div class="note info"><p>1.限定按照顶点序号上升dfs（完全图性质）；</p><font color="red">2.存储边从数组转换为vector（题目说顶点的度最多为20，而顶点数最多为100）；</font><p>3.剪枝N-pre &lt; S-deep，当剩下的点不足以构成定点数为S的完全图；（没太大用）</p><p>4.for循环初始化改为memset；（挣扎…）</p><font color="red">5.path数组由bool改为int，因为每次递归前都要判断当前点是否和所有已经在路径里面点有边相连，所以要挨个去判断，如果path[i]表示点i是否在路径中，每次都需要执行一个100，如果将path[i]更改为路径中第i个点，每次最多执行10；（关键）</font><p>6.删掉了之前用来表示点是否加入路径的数组，因为顶点是严格升序加入路径的，所以这一步判断没必要。</p></div><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =============================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  hdu5952.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *           Link:  http://acm.hdu.edu.cn/showproblem.php?pid=5952</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  2018/10/05 18时29分42秒</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  g++</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  杜宁元 (https://duny31030.top/), duny31030@126.com</span></span><br><span class="line"><span class="comment"> *   Organization:  QLU_浪在ACM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =============================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clr(a, x) memset(a, x, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i=a;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pre(i,a,n) for(int i=n;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max3(a,b,c) fmax(a,fmax(b,c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">105</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; edge[MAXN];</span><br><span class="line"><span class="keyword">bool</span> m[MAXN][MAXN];</span><br><span class="line"><span class="keyword">int</span> T,N,M,S,u,v,p;</span><br><span class="line"><span class="keyword">int</span> flag;</span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> path[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> now,<span class="keyword">int</span> step)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= step;i++)</span><br><span class="line">    &#123;</span><br><span class="line">            <span class="keyword">if</span>(!m[path[i]][now])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> st,<span class="keyword">int</span> step)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(step == S)</span><br><span class="line">    &#123;</span><br><span class="line">        p++;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(N-st &lt; S-step)</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">int</span> len = edge[st].size();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; len;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(check(edge[st][j],step))</span><br><span class="line">        &#123;</span><br><span class="line">            path[tot++] = edge[st][j];</span><br><span class="line">            dfs(edge[st][j],step+<span class="number">1</span>);</span><br><span class="line">            --tot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// freopen("out.txt","w",stdout); </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= N;i++)</span><br><span class="line">            edge[i].clear();</span><br><span class="line">        <span class="built_in">memset</span>(m,<span class="number">0</span>,<span class="keyword">sizeof</span> m);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;N,&amp;M,&amp;S);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= M;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;u,&amp;v);</span><br><span class="line">            <span class="keyword">if</span>(u &gt; v)</span><br><span class="line">                swap(u,v);</span><br><span class="line">            edge[u].push_back(v);</span><br><span class="line">            m[u][v] = <span class="number">1</span>;</span><br><span class="line">            m[v][u] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        p = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> tmp = N-S+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(flag = <span class="number">1</span>;flag &lt;= tmp;++flag)</span><br><span class="line">        &#123;</span><br><span class="line">            path[tot++] = flag;</span><br><span class="line">            dfs(flag,<span class="number">1</span>);</span><br><span class="line">            --tot;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,p);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="comment">// fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;传送门：&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=5952&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我是传送门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A clique is a complete graph, in which there is an edge between every pair of the vertices. Given a graph with N vertices and M edges, your task is to count the number of cliques with a specific size S in the graph. &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="搜索" scheme="http://www.duny31030.top/categories/%E6%90%9C%E7%B4%A2/"/>
    
    
      <category term="ICPC&amp;&amp;CCPC" scheme="http://www.duny31030.top/tags/ICPC-CCPC/"/>
    
      <category term="暴力" scheme="http://www.duny31030.top/tags/%E6%9A%B4%E5%8A%9B/"/>
    
      <category term="优化" scheme="http://www.duny31030.top/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>「ACM Qingdao Onsite 2016」B.Pocket Cube(暴力 暴力 再暴力)</title>
    <link href="http://www.duny31030.top/2018/10/03/ACM-Qingdao-Onsite-2016%20B-Pocket-Cube/"/>
    <id>http://www.duny31030.top/2018/10/03/ACM-Qingdao-Onsite-2016 B-Pocket-Cube/</id>
    <published>2018-10-03T15:18:17.000Z</published>
    <updated>2019-10-16T17:13:36.558Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>传送门：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5983" target="_blank" rel="noopener">我是传送门</a></p><blockquote><p>The Pocket Cube, also known as the Mini Cube or the Ice Cube, is the 2 × 2 × 2 equivalence of a Rubik’s Cube.<br>The cube consists of 8 pieces, all corners.<br>Each piece is labeled by a three dimensional coordinate (h, k, l) where h, k, l ∈ {0, 1}. Each of the six faces owns four small faces filled with a positive integer.<br>For each step, you can choose a certain face and turn the face ninety degrees clockwise or counterclockwise.<br>You should judge that if one can restore the pocket cube in one step. We say a pocket cube has been restored if each face owns four same integers.</p></blockquote><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>The first line of input contains one integer N(N ≤ 30) which is the number of test cases.</p><p>For each test case, the first line describes the top face of the pocket cube, which is the common 2 × 2 face of pieces</p><p>labelled by (0, 0, 1),(0, 1, 1),(1, 0, 1),(1, 1, 1). Four integers are given corresponding to the above pieces.</p><p>The second line describes the front face, the common face of (1, 0, 1),(1, 1, 1),(1, 0, 0),(1, 1, 0). Four integers are</p><p>given corresponding to the above pieces.</p><p>The third line describes the bottom face, the common face of (1, 0, 0),(1, 1, 0),(0, 0, 0),(0, 1, 0). Four integers are</p><p>given corresponding to the above pieces.</p><p>The fourth line describes the back face, the common face of (0, 0, 0),(0, 1, 0),(0, 0, 1),(0, 1, 1). Four integers are</p><p>given corresponding to the above pieces.</p><p>The fifth line describes the left face, the common face of (0, 0, 0),(0, 0, 1),(1, 0, 0),(1, 0, 1). Four integers are given</p><p>corresponding to the above pieces.</p><p>The six line describes the right face, the common face of (0, 1, 1),(0, 1, 0),(1, 1, 1),(1, 1, 0). Four integers are given</p><p>corresponding to the above pieces.</p><p>In other words, each test case contains 24 integers a, b, c to x. You can flat the surface to get the surface development</p><p>as follows.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">+ - + - + - + - + - + - +</span><br><span class="line">| q | r | a | b | u | v |</span><br><span class="line">+ - + - + - + - + - + - +</span><br><span class="line">| s | t | c | d | w | x |</span><br><span class="line">+ - + - + - + - + - + - +</span><br><span class="line">        | e | f |</span><br><span class="line">        + - + - +</span><br><span class="line">        | g | h |</span><br><span class="line">        + - + - +</span><br><span class="line">        | i | j |</span><br><span class="line">        + - + - +</span><br><span class="line">        | k | l |</span><br><span class="line">        + - + - +</span><br><span class="line">        | m | n |</span><br><span class="line">        + - + - +</span><br><span class="line">        | o | p |</span><br><span class="line">        + - + - +</span><br></pre></td></tr></table></figure><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>For each test case, output YES if can be restored in one step, otherwise output NO.</p></blockquote><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><blockquote><p>4<br>1 1 1 1<br>2 2 2 2<br>3 3 3 3<br>4 4 4 4<br>5 5 5 5<br>6 6 6 6<br>6 6 6 6<br>1 1 1 1<br>2 2 2 2<br>3 3 3 3<br>5 5 5 5<br>4 4 4 4<br>1 4 1 4<br>2 1 2 1<br>3 2 3 2<br>4 3 4 3<br>5 5 5 5<br>6 6 6 6<br>1 3 1 3<br>2 4 2 4<br>3 1 3 1<br>4 2 4 2<br>5 5 5 5<br>6 6 6 6</p></blockquote><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><blockquote><p>YES<br>YES<br>YES<br>NO</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>直接暴力模拟，只有几种情况，分析一下就清楚了</p><p>但是有一个坑点：</p><font color="red">必须判定是否有6种颜色出现</font><p>坑了我两个小时来debug</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">bool</span> f[<span class="number">10</span>],f2[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c,<span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a == b &amp;&amp; c == d &amp;&amp; a == c)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; se;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        se.clear();</span><br><span class="line">        <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span> a);</span><br><span class="line">        <span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span> f);</span><br><span class="line">        <span class="built_in">memset</span>(f2,<span class="number">0</span>,<span class="keyword">sizeof</span> f2);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">6</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= <span class="number">4</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> tmp = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">2</span>;k &lt;= <span class="number">4</span>;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i][<span class="number">1</span>] != a[i][k])</span><br><span class="line">                    tmp = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(tmp == <span class="number">1</span>)</span><br><span class="line">                f[i] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> cou = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(f[<span class="number">1</span>] == <span class="number">1</span> &amp;&amp; f[<span class="number">3</span>] == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            f2[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">            cou++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f[<span class="number">2</span>] == <span class="number">1</span> &amp;&amp; f[<span class="number">4</span>] == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            f2[<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">            cou++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f[<span class="number">5</span>] == <span class="number">1</span> &amp;&amp; f[<span class="number">6</span>] == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            f2[<span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line">            cou++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">6</span>;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= <span class="number">4</span>;j++)</span><br><span class="line">                se.insert(a[i][j]);</span><br><span class="line">        <span class="keyword">int</span> cas = se.size();</span><br><span class="line">        <span class="keyword">if</span>(cas != <span class="number">6</span>)</span><br><span class="line">            cou = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(cou == <span class="number">2</span> || cou == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(cou == <span class="number">3</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(f2[<span class="number">1</span>] == <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>((check(a[<span class="number">5</span>][<span class="number">2</span>],a[<span class="number">5</span>][<span class="number">4</span>],a[<span class="number">2</span>][<span class="number">3</span>],a[<span class="number">2</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">2</span>][<span class="number">1</span>],a[<span class="number">2</span>][<span class="number">2</span>],a[<span class="number">6</span>][<span class="number">4</span>],a[<span class="number">6</span>][<span class="number">2</span>]) &amp;&amp; check(a[<span class="number">6</span>][<span class="number">3</span>],a[<span class="number">6</span>][<span class="number">1</span>],a[<span class="number">4</span>][<span class="number">2</span>],a[<span class="number">4</span>][<span class="number">1</span>]) &amp;&amp; check(a[<span class="number">4</span>][<span class="number">4</span>],a[<span class="number">4</span>][<span class="number">3</span>],a[<span class="number">5</span>][<span class="number">1</span>],a[<span class="number">5</span>][<span class="number">3</span>])) || (check(a[<span class="number">5</span>][<span class="number">2</span>],a[<span class="number">5</span>][<span class="number">4</span>],a[<span class="number">4</span>][<span class="number">2</span>],a[<span class="number">4</span>][<span class="number">1</span>]) &amp;&amp; check(a[<span class="number">2</span>][<span class="number">1</span>],a[<span class="number">2</span>][<span class="number">2</span>],a[<span class="number">5</span>][<span class="number">1</span>],a[<span class="number">5</span>][<span class="number">3</span>]) &amp;&amp; check(a[<span class="number">6</span>][<span class="number">3</span>],a[<span class="number">6</span>][<span class="number">1</span>],a[<span class="number">2</span>][<span class="number">3</span>],a[<span class="number">2</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">4</span>][<span class="number">4</span>],a[<span class="number">4</span>][<span class="number">3</span>],a[<span class="number">6</span>][<span class="number">4</span>],a[<span class="number">6</span>][<span class="number">2</span>])))</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">                    <span class="keyword">else</span> </span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(f2[<span class="number">2</span>] == <span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>((check(a[<span class="number">5</span>][<span class="number">1</span>],a[<span class="number">5</span>][<span class="number">2</span>],a[<span class="number">1</span>][<span class="number">3</span>],a[<span class="number">1</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">1</span>][<span class="number">1</span>],a[<span class="number">1</span>][<span class="number">2</span>],a[<span class="number">6</span>][<span class="number">3</span>],a[<span class="number">6</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">6</span>][<span class="number">1</span>],a[<span class="number">6</span>][<span class="number">2</span>],a[<span class="number">3</span>][<span class="number">2</span>],a[<span class="number">3</span>][<span class="number">1</span>]) &amp;&amp; check(a[<span class="number">3</span>][<span class="number">4</span>],a[<span class="number">3</span>][<span class="number">3</span>],a[<span class="number">5</span>][<span class="number">3</span>],a[<span class="number">5</span>][<span class="number">4</span>])) || (check(a[<span class="number">5</span>][<span class="number">1</span>],a[<span class="number">5</span>][<span class="number">2</span>],a[<span class="number">3</span>][<span class="number">2</span>],a[<span class="number">3</span>][<span class="number">1</span>]) &amp;&amp; check(a[<span class="number">1</span>][<span class="number">1</span>],a[<span class="number">1</span>][<span class="number">2</span>],a[<span class="number">5</span>][<span class="number">3</span>],a[<span class="number">5</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">6</span>][<span class="number">1</span>],a[<span class="number">6</span>][<span class="number">2</span>],a[<span class="number">1</span>][<span class="number">3</span>],a[<span class="number">1</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">3</span>][<span class="number">4</span>],a[<span class="number">3</span>][<span class="number">3</span>],a[<span class="number">6</span>][<span class="number">3</span>],a[<span class="number">6</span>][<span class="number">4</span>])))</span><br><span class="line">                           <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">                        <span class="keyword">else</span> </span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span>   <span class="comment">// f2[3] == 1</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>((check(a[<span class="number">1</span>][<span class="number">1</span>],a[<span class="number">1</span>][<span class="number">3</span>],a[<span class="number">2</span>][<span class="number">2</span>],a[<span class="number">2</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">2</span>][<span class="number">1</span>],a[<span class="number">2</span>][<span class="number">3</span>],a[<span class="number">3</span>][<span class="number">2</span>],a[<span class="number">3</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">3</span>][<span class="number">1</span>],a[<span class="number">3</span>][<span class="number">3</span>],a[<span class="number">4</span>][<span class="number">2</span>],a[<span class="number">4</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">4</span>][<span class="number">1</span>],a[<span class="number">4</span>][<span class="number">3</span>],a[<span class="number">1</span>][<span class="number">2</span>],a[<span class="number">1</span>][<span class="number">4</span>])) || (check(a[<span class="number">1</span>][<span class="number">1</span>],a[<span class="number">1</span>][<span class="number">3</span>],a[<span class="number">4</span>][<span class="number">2</span>],a[<span class="number">4</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">2</span>][<span class="number">1</span>],a[<span class="number">2</span>][<span class="number">3</span>],a[<span class="number">1</span>][<span class="number">2</span>],a[<span class="number">1</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">3</span>][<span class="number">1</span>],a[<span class="number">3</span>][<span class="number">3</span>],a[<span class="number">2</span>][<span class="number">2</span>],a[<span class="number">2</span>][<span class="number">4</span>]) &amp;&amp; check(a[<span class="number">4</span>][<span class="number">1</span>],a[<span class="number">4</span>][<span class="number">3</span>],a[<span class="number">3</span>][<span class="number">2</span>],a[<span class="number">3</span>][<span class="number">4</span>])))</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">                        <span class="keyword">else</span> </span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                       </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;传送门：&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=5983&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我是传送门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Pocket Cube, also known as the Mini Cube or the Ice Cube, is the 2 × 2 × 2 equivalence of a Rubik’s Cube.&lt;br&gt;The cube consists of 8 pieces, all corners.&lt;br&gt;Each piece is labeled by a three dimensional coordinate (h, k, l) where h, k, l ∈ {0, 1}. Each of the six faces owns four small faces filled with a positive integer.&lt;br&gt;For each step, you can choose a certain face and turn the face ninety degrees clockwise or counterclockwise.&lt;br&gt;You should judge that if one can restore the pocket cube in one step. We say a pocket cube has been restored if each face owns four same integers.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="模拟" scheme="http://www.duny31030.top/categories/%E6%A8%A1%E6%8B%9F/"/>
    
    
      <category term="暴力" scheme="http://www.duny31030.top/tags/%E6%9A%B4%E5%8A%9B/"/>
    
      <category term="模拟" scheme="http://www.duny31030.top/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="HDU" scheme="http://www.duny31030.top/tags/HDU/"/>
    
  </entry>
  
</feed>
